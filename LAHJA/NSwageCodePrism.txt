//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using Infrastructure.Models.Interface;

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Infrastructure.Nswag
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public AuthClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task LogoutAsync(object body)
        {
            return LogoutAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task LogoutAsync(object body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/logout");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task RegisterAsync(RegisterRequest body)
        {
            return RegisterAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task RegisterAsync(RegisterRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/register");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>>>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>>>>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AccessTokenResponse> LoginAsync(bool? useCookies, bool? useSessionCookies, LoginRequest body)
        {
            return LoginAsync(useCookies, useSessionCookies, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AccessTokenResponse> LoginAsync(bool? useCookies, bool? useSessionCookies, LoginRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/login?");
            if (useCookies != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("useCookies") + "=").Append(System.Uri.EscapeDataString(ConvertToString(useCookies, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (useSessionCookies != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("useSessionCookies") + "=").Append(System.Uri.EscapeDataString(ConvertToString(useSessionCookies, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AccessTokenResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>>>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>>>>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AccessTokenResponse> RefreshAsync(RefreshRequest body)
        {
            return RefreshAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AccessTokenResponse> RefreshAsync(RefreshRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/refresh");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AccessTokenResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CustomMapIdentityApiApi_confirmEmailAsync(ConfirmEmailRequest body)
        {
            return CustomMapIdentityApiApi_confirmEmailAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CustomMapIdentityApiApi_confirmEmailAsync(ConfirmEmailRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/confirmEmail");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<string> ResendConfirmationEmailAsync(ResendConfirmationEmailRequest body)
        {
            return ResendConfirmationEmailAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<string> ResendConfirmationEmailAsync(ResendConfirmationEmailRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/resendConfirmationEmail");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<string>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ForgotPasswordAsync(ForgotPasswordRequest body)
        {
            return ForgotPasswordAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ForgotPasswordAsync(ForgotPasswordRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/forgotPassword");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ResetPasswordAsync(ResetPasswordRequest body)
        {
            return ResetPasswordAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ResetPasswordAsync(ResetPasswordRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/resetPassword");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ExternalLoginAsync(string provider, string returnUrl)
        {
            return ExternalLoginAsync(provider, returnUrl, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ExternalLoginAsync(string provider, string returnUrl, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ExternalLogin?");
            if (provider != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("provider") + "=").Append(System.Uri.EscapeDataString(ConvertToString(provider, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (returnUrl != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("returnUrl") + "=").Append(System.Uri.EscapeDataString(ConvertToString(returnUrl, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ExternalLoginCallbackAsync(string returnUrl)
        {
            return ExternalLoginCallbackAsync(returnUrl, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ExternalLoginCallbackAsync(string returnUrl, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ExternalLoginCallback?");
            if (returnUrl != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("returnUrl") + "=").Append(System.Uri.EscapeDataString(ConvertToString(returnUrl, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthorizationSessionClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public AuthorizationSessionClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Sessions
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SessionVm>> GetSessionsAsync()
        {
            return GetSessionsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Sessions
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SessionVm>> GetSessionsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SessionVm>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create Authorization Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateAuthorizationSessionAsync(CreateAuthorizationWebRequest body)
        {
            return CreateAuthorizationSessionAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create Authorization Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateAuthorizationSessionAsync(CreateAuthorizationWebRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AuthorizationSessionWebResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SessionVm> GetSessionAsync(string id)
        {
            return GetSessionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SessionVm> GetSessionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SessionVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteAuthorizationSessionAsync(string id)
        {
            return DeleteAuthorizationSessionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteAuthorizationSessionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Session By Token
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SessionVm> GetSessionByTokenAsync(string token)
        {
            return GetSessionByTokenAsync(token, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Session By Token
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SessionVm> GetSessionByTokenAsync(string token, System.Threading.CancellationToken cancellationToken)
        {
            if (token == null)
                throw new System.ArgumentNullException("token");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/SessionByToken/{token}");
            urlBuilder_.Replace("{token}", System.Uri.EscapeDataString(ConvertToString(token, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SessionVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Active Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SessionVm> GetActiveSessionAsync(string userId, string type)
        {
            return GetActiveSessionAsync(userId, type, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Active Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SessionVm> GetActiveSessionAsync(string userId, string type, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/activeSession?");
            if (userId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("userId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(userId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (type != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("type") + "=").Append(System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SessionVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Validate Authorization Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AuthorizationSessionCoreResponse> AuthorizationSessionAsync(ValidateTokenRequest body)
        {
            return AuthorizationSessionAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Validate Authorization Session
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AuthorizationSessionCoreResponse> AuthorizationSessionAsync(ValidateTokenRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/validate");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AuthorizationSessionCoreResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create session for dashboard
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForDashboardAsync(CreateAuthorizationForDashboard body)
        {
            return CreateForDashboardAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create session for dashboard
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForDashboardAsync(CreateAuthorizationForDashboard body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/CreateForDashboard");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AuthorizationSessionWebResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create authorization session for list services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForListServicesAsync(CreateAuthorizationForListServices body)
        {
            return CreateForListServicesAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create authorization session for list services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForListServicesAsync(CreateAuthorizationForListServices body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/CreateForListServices");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AuthorizationSessionWebResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create authorization session for all services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForAllServicesAsync(CreateAuthorizationForServices body)
        {
            return CreateForAllServicesAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create authorization session for all services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AuthorizationSessionWebResponse> CreateForAllServicesAsync(CreateAuthorizationForServices body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/CreateForAllServices");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AuthorizationSessionWebResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TokenVm> EncryptFromWebAsync(EncryptTokenRequest body)
        {
            return EncryptFromWebAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TokenVm> EncryptFromWebAsync(EncryptTokenRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/encryptFromWeb");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TokenVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TokenVm> EncryptFromCoreAsync(string sesstionToken)
        {
            return EncryptFromCoreAsync(sesstionToken, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TokenVm> EncryptFromCoreAsync(string sesstionToken, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/encryptFromCore?");
            if (sesstionToken != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("sesstionToken") + "=").Append(System.Uri.EscapeDataString(ConvertToString(sesstionToken, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TokenVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TokenVm> EncryptFromCore2Async(string encrptedToken, string coreToken)
        {
            return EncryptFromCore2Async(encrptedToken, coreToken, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TokenVm> EncryptFromCore2Async(string encrptedToken, string coreToken, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/encryptFromCore2?");
            if (encrptedToken != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("encrptedToken") + "=").Append(System.Uri.EscapeDataString(ConvertToString(encrptedToken, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (coreToken != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("coreToken") + "=").Append(System.Uri.EscapeDataString(ConvertToString(coreToken, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TokenVm>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ValidateWebTokenAsync(string token)
        {
            return ValidateWebTokenAsync(token, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ValidateWebTokenAsync(string token, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/ValidateWebTokenAsync?");
            if (token != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("token") + "=").Append(System.Uri.EscapeDataString(ConvertToString(token, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ValidateCreateTokenAsync(string token, string coreToken)
        {
            return ValidateCreateTokenAsync(token, coreToken, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ValidateCreateTokenAsync(string token, string coreToken, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/ValidateCreateToken?");
            if (token != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("token") + "=").Append(System.Uri.EscapeDataString(ConvertToString(token, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (coreToken != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("coreToken") + "=").Append(System.Uri.EscapeDataString(ConvertToString(coreToken, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ValidateCoreTokenAsync(string token, string coreToken)
        {
            return ValidateCoreTokenAsync(token, coreToken, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ValidateCoreTokenAsync(string token, string coreToken, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/ValidateCoreToken?");
            if (token != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("token") + "=").Append(System.Uri.EscapeDataString(ConvertToString(token, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (coreToken != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("coreToken") + "=").Append(System.Uri.EscapeDataString(ConvertToString(coreToken, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Pause AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> PauseAuthorizationSessionAsync(string id)
        {
            return PauseAuthorizationSessionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Pause AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> PauseAuthorizationSessionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/pause/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "text/plain");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Resume AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> ResumeAuthorizationSessionAsync(string id)
        {
            return ResumeAuthorizationSessionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Resume AuthorizationSession
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> ResumeAuthorizationSessionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/AuthorizationSession/resume/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "text/plain");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CheckoutClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public CheckoutClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<CheckoutResponse> CreateCheckoutAsync(CheckoutOptions body)
        {
            return CreateCheckoutAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<CheckoutResponse> CreateCheckoutAsync(CheckoutOptions body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Checkout");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<CheckoutResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<CheckoutResponse> ManageAsync(SessionCreate body)
        {
            return ManageAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<CheckoutResponse> ManageAsync(SessionCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Checkout/manage");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<CheckoutResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DashboardClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public DashboardClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Plot Plan Data Services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<StatisticsUsedRequests>> ServiceUsageDataAsync()
        {
            return ServiceUsageDataAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Plot Plan Data Services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<StatisticsUsedRequests>> ServiceUsageDataAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/ServiceUsageData");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<StatisticsUsedRequests>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Service Users Count
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceUsersCount>> ServiceUsersCountAsync()
        {
            return ServiceUsersCountAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Service Users Count
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceUsersCount>> ServiceUsersCountAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/ServiceUsersCount");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceUsersCount>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Plot Plan Data
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<StatisticsUsedRequests>> ServiceUsageAndRemainingAsync()
        {
            return ServiceUsageAndRemainingAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Plot Plan Data
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<StatisticsUsedRequests>> ServiceUsageAndRemainingAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/ServiceUsageAndRemaining");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<StatisticsUsedRequests>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Plot Plan Data
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<StatisticsUsedRequests> UsageAndRemainingRequestsAsync()
        {
            return UsageAndRemainingRequestsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Plot Plan Data
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<StatisticsUsedRequests> UsageAndRemainingRequestsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/UsageAndRemainingRequests");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<StatisticsUsedRequests>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestData>> GetRequestsAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType, DateTimeFilter? groupBy)
        {
            return GetRequestsAsync(filterBy, startDate, endDate, requestType, groupBy, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestData>> GetRequestsAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType, DateTimeFilter? groupBy, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/GetRequests?");
            if (filterBy != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("filterBy") + "=").Append(System.Uri.EscapeDataString(ConvertToString(filterBy, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (startDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("startDate") + "=").Append(System.Uri.EscapeDataString(startDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (endDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("endDate") + "=").Append(System.Uri.EscapeDataString(endDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (requestType != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("requestType") + "=").Append(System.Uri.EscapeDataString(ConvertToString(requestType, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (groupBy != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("groupBy") + "=").Append(System.Uri.EscapeDataString(ConvertToString(groupBy, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<RequestData>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestData>> GetRequestsByDatetimeAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType, DateTimeFilter? groupBy)
        {
            return GetRequestsByDatetimeAsync(filterBy, startDate, endDate, requestType, groupBy, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestData>> GetRequestsByDatetimeAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType, DateTimeFilter? groupBy, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/GetRequestsByDatetime?");
            if (filterBy != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("filterBy") + "=").Append(System.Uri.EscapeDataString(ConvertToString(filterBy, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (startDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("startDate") + "=").Append(System.Uri.EscapeDataString(startDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (endDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("endDate") + "=").Append(System.Uri.EscapeDataString(endDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (requestType != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("requestType") + "=").Append(System.Uri.EscapeDataString(ConvertToString(requestType, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (groupBy != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("groupBy") + "=").Append(System.Uri.EscapeDataString(ConvertToString(groupBy, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<RequestData>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceDataTod>> GetRequestsByStatusAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType)
        {
            return GetRequestsByStatusAsync(filterBy, startDate, endDate, requestType, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceDataTod>> GetRequestsByStatusAsync(FilterBy? filterBy, System.DateTimeOffset? startDate, System.DateTimeOffset? endDate, RequestType? requestType, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/GetRequestsByStatus?");
            if (filterBy != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("filterBy") + "=").Append(System.Uri.EscapeDataString(ConvertToString(filterBy, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (startDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("startDate") + "=").Append(System.Uri.EscapeDataString(startDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (endDate != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("endDate") + "=").Append(System.Uri.EscapeDataString(endDate.Value.ToString("s", System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (requestType != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("requestType") + "=").Append(System.Uri.EscapeDataString(ConvertToString(requestType, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceDataTod>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiServiceData>> ModelAiServiceRequestsAsync()
        {
            return ModelAiServiceRequestsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiServiceData>> ModelAiServiceRequestsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Dashboard/ModelAiServiceRequests");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiServiceData>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicesClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public InvoicesClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Invoice>> GetInvoicesAsync(string customerId)
        {
            return GetInvoicesAsync(customerId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Invoice>> GetInvoicesAsync(string customerId, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Invoices?");
            if (customerId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("customerId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(customerId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<Invoice>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<Invoice> GetInvoiceAsync(string id)
        {
            return GetInvoiceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<Invoice> GetInvoiceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Invoices/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<Invoice>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ManageClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ManageClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TwoFactorResponse> TwofaAsync(TwoFactorRequest body)
        {
            return TwofaAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TwoFactorResponse> TwofaAsync(TwoFactorRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/manage/twofa");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TwoFactorResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            string responseText_ = (response_.Content == null) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Not Found", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<InfoResponse> InfoGETAsync()
        {
            return InfoGETAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<InfoResponse> InfoGETAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/manage/info");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<InfoResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            string responseText_ = (response_.Content == null) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Not Found", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<InfoResponse> InfoPOSTAsync(InfoRequest body)
        {
            return InfoPOSTAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<InfoResponse> InfoPOSTAsync(InfoRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/manage/info");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("application/json"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<InfoResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<HttpValidationProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<HttpValidationProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            string responseText_ = (response_.Content == null) ? string.Empty : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("Not Found", status_, responseText_, headers_, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MasterClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public MasterClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<LanguageView>> LanguagesAllAsync(string lg)
        {
            return LanguagesAllAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<LanguageView>> LanguagesAllAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/languages?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<LanguageView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task LanguagesPOSTAsync(string lg, LanguageCreate body)
        {
            return LanguagesPOSTAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task LanguagesPOSTAsync(string lg, LanguageCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/languages?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task LanguagesGETAsync(string code, string lg)
        {
            return LanguagesGETAsync(code, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task LanguagesGETAsync(string code, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (code == null)
                throw new System.ArgumentNullException("code");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/languages/{code}?");
            urlBuilder_.Replace("{code}", System.Uri.EscapeDataString(ConvertToString(code, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CategoriesGETAsync(string name, string lg)
        {
            return CategoriesGETAsync(name, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CategoriesGETAsync(string name, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (name == null)
                throw new System.ArgumentNullException("name");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/categories/{name}?");
            urlBuilder_.Replace("{name}", System.Uri.EscapeDataString(ConvertToString(name, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CategoriesPOSTAsync(string lg, CategoryCreate body)
        {
            return CategoriesPOSTAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CategoriesPOSTAsync(string lg, CategoryCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/categories?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TypeModelView> TypesGETAsync(string name, string lg)
        {
            return TypesGETAsync(name, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TypeModelView> TypesGETAsync(string name, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (name == null)
                throw new System.ArgumentNullException("name");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/types/{name}?");
            urlBuilder_.Replace("{name}", System.Uri.EscapeDataString(ConvertToString(name, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TypeModelView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<TypeModelView>> ActiveAsync(string lg)
        {
            return ActiveAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<TypeModelView>> ActiveAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/types/active?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<TypeModelView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<TypeModelView> TypesPOSTAsync(string lg, TypeModelCreate body)
        {
            return TypesPOSTAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<TypeModelView> TypesPOSTAsync(string lg, TypeModelCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/types?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<TypeModelView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DialectView> DialectAsync(string languageId, string lg)
        {
            return DialectAsync(languageId, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DialectView> DialectAsync(string languageId, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (languageId == null)
                throw new System.ArgumentNullException("languageId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/dialect/{languageId}?");
            urlBuilder_.Replace("{languageId}", System.Uri.EscapeDataString(ConvertToString(languageId, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DialectView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<DialectView>> DialectsAllAsync(string languageId, string lg)
        {
            return DialectsAllAsync(languageId, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<DialectView>> DialectsAllAsync(string languageId, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (languageId == null)
                throw new System.ArgumentNullException("languageId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/dialects/{languageId}?");
            urlBuilder_.Replace("{languageId}", System.Uri.EscapeDataString(ConvertToString(languageId, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<DialectView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DialectView> DialectsAsync(string lg, DialectCreate body)
        {
            return DialectsAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DialectView> DialectsAsync(string lg, DialectCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/dialects?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DialectView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AdvertisementView> AdvertisementsGETAsync(string id, string lg)
        {
            return AdvertisementsGETAsync(id, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AdvertisementView> AdvertisementsGETAsync(string id, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisements/{id}?");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AdvertisementView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdvertisementView>> Active2Async(string lg)
        {
            return Active2Async(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdvertisementView>> Active2Async(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisements/active?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<AdvertisementView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task AdvertisementsPOSTAsync(string lg, AdvertisementCreate body)
        {
            return AdvertisementsPOSTAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task AdvertisementsPOSTAsync(string lg, AdvertisementCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisements?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AdvertisementTabView> AdvertisementtabAsync(string id, string lg)
        {
            return AdvertisementtabAsync(id, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AdvertisementTabView> AdvertisementtabAsync(string id, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisementtab/{id}?");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AdvertisementTabView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdvertisementTabView>> AdvertisementtabsAllAsync(string advertisementId, string lg)
        {
            return AdvertisementtabsAllAsync(advertisementId, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdvertisementTabView>> AdvertisementtabsAllAsync(string advertisementId, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (advertisementId == null)
                throw new System.ArgumentNullException("advertisementId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisementtabs/{advertisementId}?");
            urlBuilder_.Replace("{advertisementId}", System.Uri.EscapeDataString(ConvertToString(advertisementId, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<AdvertisementTabView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<AdvertisementTabView> AdvertisementtabsAsync(string lg, AdvertisementTabCreate body)
        {
            return AdvertisementtabsAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<AdvertisementTabView> AdvertisementtabsAsync(string lg, AdvertisementTabCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Master/advertisementtabs?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<AdvertisementTabView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelAiClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ModelAiClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Item>> GetStartStudioAsync(string lg)
        {
            return GetStartStudioAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Item>> GetStartStudioAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetStartStudio?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<Item>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelSpechStudioAsync(string lg)
        {
            return GetModelSpechStudioAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelSpechStudioAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetModelSpechStudio?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.IDictionary<string, object>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelTextStudioAsync(string lg)
        {
            return GetModelTextStudioAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelTextStudioAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetModelTextStudio?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.IDictionary<string, object>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelChatStudioAsync(string lg)
        {
            return GetModelChatStudioAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.IDictionary<string, object>> GetModelChatStudioAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetModelChatStudio?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.IDictionary<string, object>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get all Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsAiAsync()
        {
            return GetModelsAiAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsAiAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a Model Ai
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelAiResponse> CreateModelAiAsync(ModelAiCreate body)
        {
            return CreateModelAiAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a Model Ai
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelAiResponse> CreateModelAiAsync(ModelAiCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelAiResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ArrayResponse>> GetModelsByTypeAsync(string type)
        {
            return GetModelsByTypeAsync(type, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ArrayResponse>> GetModelsByTypeAsync(string type, System.Threading.CancellationToken cancellationToken)
        {
            if (type == null)
                throw new System.ArgumentNullException("type");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/ByType/{type}");
            urlBuilder_.Replace("{type}", System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ArrayResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Categories By Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ArrayResponse> GetCategoriesByTypeAsync(string type)
        {
            return GetCategoriesByTypeAsync(type, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Categories By Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ArrayResponse> GetCategoriesByTypeAsync(string type, System.Threading.CancellationToken cancellationToken)
        {
            if (type == null)
                throw new System.ArgumentNullException("type");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/CategoriesByType/{type}");
            urlBuilder_.Replace("{type}", System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ArrayResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Languages By Type And Category
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ArrayResponse> GetLanguagesByAsync(string type, string category)
        {
            return GetLanguagesByAsync(type, category, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Languages By Type And Category
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ArrayResponse> GetLanguagesByAsync(string type, string category, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/LanguagesBy?");
            if (type != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("type") + "=").Append(System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (category != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("category") + "=").Append(System.Uri.EscapeDataString(ConvertToString(category, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ArrayResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Category
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByCategoryAsync(string category)
        {
            return GetModelsByCategoryAsync(category, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Category
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByCategoryAsync(string category, System.Threading.CancellationToken cancellationToken)
        {
            if (category == null)
                throw new System.ArgumentNullException("category");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/category/{category}");
            urlBuilder_.Replace("{category}", System.Uri.EscapeDataString(ConvertToString(category, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Filter models
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> FilterMaodelAiAsync(FilterModelAI body)
        {
            return FilterMaodelAiAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Filter models
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> FilterMaodelAiAsync(FilterModelAI body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetFilterModel");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Filter models
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> FilterMaodelAi2Async(FilterModelAI body)
        {
            return FilterMaodelAi2Async(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Filter models
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> FilterMaodelAi2Async(FilterModelAI body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetFilterModel2");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Gender
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByGenderAsync(string gender)
        {
            return GetModelsByGenderAsync(gender, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Gender
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByGenderAsync(string gender, System.Threading.CancellationToken cancellationToken)
        {
            if (gender == null)
                throw new System.ArgumentNullException("gender");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/gender/{gender}");
            urlBuilder_.Replace("{gender}", System.Uri.EscapeDataString(ConvertToString(gender, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Dialect
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByDialectAsync(string dialect)
        {
            return GetModelsByDialectAsync(dialect, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Dialect
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByDialectAsync(string dialect, System.Threading.CancellationToken cancellationToken)
        {
            if (dialect == null)
                throw new System.ArgumentNullException("dialect");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/dialect/{dialect}");
            urlBuilder_.Replace("{dialect}", System.Uri.EscapeDataString(ConvertToString(dialect, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Language and Dialect
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageAndDialectAsync(string language, string dialect)
        {
            return GetModelsByLanguageAndDialectAsync(language, dialect, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Language and Dialect
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageAndDialectAsync(string language, string dialect, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/language-dialect?");
            if (language != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("language") + "=").Append(System.Uri.EscapeDataString(ConvertToString(language, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (dialect != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("dialect") + "=").Append(System.Uri.EscapeDataString(ConvertToString(dialect, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Language, Dialect, and Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageDialectTypeAsync(string language, string dialect, string type)
        {
            return GetModelsByLanguageDialectTypeAsync(language, dialect, type, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Language, Dialect, and Type
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageDialectTypeAsync(string language, string dialect, string type, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/language-dialect-type?");
            if (language != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("language") + "=").Append(System.Uri.EscapeDataString(ConvertToString(language, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (dialect != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("dialect") + "=").Append(System.Uri.EscapeDataString(ConvertToString(dialect, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (type != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("type") + "=").Append(System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By IsStandard
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByIsStandardAsync(string isStandard)
        {
            return GetModelsByIsStandardAsync(isStandard, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By IsStandard
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByIsStandardAsync(string isStandard, System.Threading.CancellationToken cancellationToken)
        {
            if (isStandard == null)
                throw new System.ArgumentNullException("isStandard");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/is-standard/{isStandard}");
            urlBuilder_.Replace("{isStandard}", System.Uri.EscapeDataString(ConvertToString(isStandard, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Type and Gender
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByTypeAndGenderAsync(string type, string gender)
        {
            return GetModelsByTypeAndGenderAsync(type, gender, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Type and Gender
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByTypeAndGenderAsync(string type, string gender, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/type-gender?");
            if (type != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("type") + "=").Append(System.Uri.EscapeDataString(ConvertToString(type, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (gender != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("gender") + "=").Append(System.Uri.EscapeDataString(ConvertToString(gender, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Models By Language
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageAsync(string language)
        {
            return GetModelsByLanguageAsync(language, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Models By Language
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> GetModelsByLanguageAsync(string language, System.Threading.CancellationToken cancellationToken)
        {
            if (language == null)
                throw new System.ArgumentNullException("language");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/language/{language}");
            urlBuilder_.Replace("{language}", System.Uri.EscapeDataString(ConvertToString(language, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelAiResponse> GetModelAiAsync(string id)
        {
            return GetModelAiAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelAiResponse> GetModelAiAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelAiResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelAiResponse> UpdateModelAiAsync(string id, ModelAiUpdate body)
        {
            return UpdateModelAiAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelAiResponse> UpdateModelAiAsync(string id, ModelAiUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelAiResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteModelAiAsync(string id)
        {
            return DeleteModelAiAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete Model Ai
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteModelAiAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelPropertyValues> GetSettingModelAiAsync(string langage)
        {
            return GetSettingModelAiAsync(langage, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelPropertyValues> GetSettingModelAiAsync(string langage, System.Threading.CancellationToken cancellationToken)
        {
            if (langage == null)
                throw new System.ArgumentNullException("langage");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/GetSetting/{langage}");
            urlBuilder_.Replace("{langage}", System.Uri.EscapeDataString(ConvertToString(langage, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelPropertyValues>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get Value Filter Model
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ValueFilterModel> GetValueFilterServiceAsync(string lg)
        {
            return GetValueFilterServiceAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get Value Filter Model
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ValueFilterModel> GetValueFilterServiceAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (lg == null)
                throw new System.ArgumentNullException("lg");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelAi/language{lg}");
            urlBuilder_.Replace("{lg}", System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ValueFilterModel>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelGatewayClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ModelGatewayClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Model Gateway
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelGatewayResponse>> GetModelGatwaysAsync()
        {
            return GetModelGatwaysAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Model Gateway
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelGatewayResponse>> GetModelGatwaysAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelGatewayResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a Model Gateway
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelGatewayResponse> CreateModelGatewayAsync(ModelGatewayCreate body)
        {
            return CreateModelGatewayAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a Model Gateway
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelGatewayResponse> CreateModelGatewayAsync(ModelGatewayCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelGatewayResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelGatewayResponse> GetModelGatewayAsync(string id)
        {
            return GetModelGatewayAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelGatewayResponse> GetModelGatewayAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelGatewayResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update Model Gateway
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ModelGatewayResponse> UpdateModelGatewayAsync(string id, ModelGatewayUpdate body)
        {
            return UpdateModelGatewayAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update Model Gateway
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ModelGatewayResponse> UpdateModelGatewayAsync(string id, ModelGatewayUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ModelGatewayResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete Model Gateway
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteModelGatewayAsync(string id)
        {
            return DeleteModelGatewayAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete Model Gateway
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteModelGatewayAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task DefaultModelGatewayAsync(string id)
        {
            return DefaultModelGatewayAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task DefaultModelGatewayAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ModelGateway/default/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class NotifacationClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public NotifacationClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task NotifyUserByEmailAsync(string email, string subject, string htmlMessage)
        {
            return NotifyUserByEmailAsync(email, subject, htmlMessage, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task NotifyUserByEmailAsync(string email, string subject, string htmlMessage, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/NotifyUserByEmail?");
            if (email != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("email") + "=").Append(System.Uri.EscapeDataString(ConvertToString(email, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (subject != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("subject") + "=").Append(System.Uri.EscapeDataString(ConvertToString(subject, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (htmlMessage != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("htmlMessage") + "=").Append(System.Uri.EscapeDataString(ConvertToString(htmlMessage, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task NotifyAllUsersByEmailAsync(string subject, string htmlMessage)
        {
            return NotifyAllUsersByEmailAsync(subject, htmlMessage, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task NotifyAllUsersByEmailAsync(string subject, string htmlMessage, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/NotifyAllUsersByEmail?");
            if (subject != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("subject") + "=").Append(System.Uri.EscapeDataString(ConvertToString(subject, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (htmlMessage != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("htmlMessage") + "=").Append(System.Uri.EscapeDataString(ConvertToString(htmlMessage, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public PaymentClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PaymentMethodResponse>> GetMethodsAsync()
        {
            return GetMethodsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PaymentMethodResponse>> GetMethodsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/GetMethods");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<PaymentMethodResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<CustomerResponse> UpdateBillingInformationAsync(BillingInformationRequest body)
        {
            return UpdateBillingInformationAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<CustomerResponse> UpdateBillingInformationAsync(BillingInformationRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/UpdateBillingInformation");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<CustomerResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task MakePaymentMethodDefaultAsync(string paymentMethodId)
        {
            return MakePaymentMethodDefaultAsync(paymentMethodId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task MakePaymentMethodDefaultAsync(string paymentMethodId, System.Threading.CancellationToken cancellationToken)
        {
            if (paymentMethodId == null)
                throw new System.ArgumentNullException("paymentMethodId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/MakePaymentMethodDefault/{paymentMethodId}");
            urlBuilder_.Replace("{paymentMethodId}", System.Uri.EscapeDataString(ConvertToString(paymentMethodId, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task DeleteMethodAsync(string id)
        {
            return DeleteMethodAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task DeleteMethodAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/DeleteMethod/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task GetSetupIntentsAsync()
        {
            return GetSetupIntentsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task GetSetupIntentsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/GetSetupIntents");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CancelAsync(string id)
        {
            return CancelAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CancelAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/cancel/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ConfirmAsync(string id)
        {
            return ConfirmAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ConfirmAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/Confirm/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PaymentResponse> CreatePaymentMethodAsync(PaymentMethodsRequest body)
        {
            return CreatePaymentMethodAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PaymentResponse> CreatePaymentMethodAsync(PaymentMethodsRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/CreatePaymentMethod");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PaymentResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PaymentResponse> CreateCustomerSessionAsync(PaymentMethodsRequest body)
        {
            return CreateCustomerSessionAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PaymentResponse> CreateCustomerSessionAsync(PaymentMethodsRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Payment/CreateCustomerSession");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PaymentResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PermissionClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public PermissionClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task GetAllAsync()
        {
            return GetAllAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task GetAllAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Permission/GetAll");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlansClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public PlansClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all plans
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PlanView>> GetPlansAsync(string lg)
        {
            return GetPlansAsync(lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all plans
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PlanView>> GetPlansAsync(string lg, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<PlanView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PlanResponse> CreatePlanAsync(string lg, PlanCreate body)
        {
            return CreatePlanAsync(lg, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PlanResponse> CreatePlanAsync(string lg, PlanCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans?");
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PlanResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 409)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Conflict", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PlanView>> AsGroupAsync(string langauge)
        {
            return AsGroupAsync(langauge, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PlanView>> AsGroupAsync(string langauge, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans/group?");
            if (langauge != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("langauge") + "=").Append(System.Uri.EscapeDataString(ConvertToString(langauge, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<PlanView>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PlanView> GetPlanAsync(string id, string lg)
        {
            return GetPlanAsync(id, lg, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PlanView> GetPlanAsync(string id, string lg, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans/{id}?");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));
            if (lg != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("lg") + "=").Append(System.Uri.EscapeDataString(ConvertToString(lg, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PlanView>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PlanResponse> UpdatePlanAsync(string id, PlanUpdate body)
        {
            return UpdatePlanAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PlanResponse> UpdatePlanAsync(string id, PlanUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PlanResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeletePlanAsync(string id)
        {
            return DeletePlanAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete plan
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeletePlanAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Plans/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 409)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Conflict", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public PriceClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PriceResponse>> GetPricesAsync(string productId, bool? active)
        {
            return GetPricesAsync(productId, active, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<PriceResponse>> GetPricesAsync(string productId, bool? active, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Price?");
            if (productId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("productId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(productId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (active != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("active") + "=").Append(System.Uri.EscapeDataString(ConvertToString(active, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<PriceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PriceResponse> CreatePriceAsync(PriceCreate body)
        {
            return CreatePriceAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PriceResponse> CreatePriceAsync(PriceCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Price");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PriceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PriceResponse> GetPriceAsync(string id)
        {
            return GetPriceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PriceResponse> GetPriceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Price/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PriceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<PriceResponse> UpdatePriceAsync(string id, PriceUpdate body)
        {
            return UpdatePriceAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<PriceResponse> UpdatePriceAsync(string id, PriceUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Price/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<PriceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task SearchAsync(PriceSearchOptions body)
        {
            return SearchAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task SearchAsync(PriceSearchOptions body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Price/search");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ProductClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ProductResponse>> GetProductsAsync(string startingAfter, string endingBefore, long? limit)
        {
            return GetProductsAsync(startingAfter, endingBefore, limit, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ProductResponse>> GetProductsAsync(string startingAfter, string endingBefore, long? limit, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products?");
            if (startingAfter != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("startingAfter") + "=").Append(System.Uri.EscapeDataString(ConvertToString(startingAfter, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (endingBefore != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("endingBefore") + "=").Append(System.Uri.EscapeDataString(ConvertToString(endingBefore, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (limit != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("limit") + "=").Append(System.Uri.EscapeDataString(ConvertToString(limit, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ProductResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ProductResponse> CreateProductAsync(ProductCreate body)
        {
            return CreateProductAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ProductResponse> CreateProductAsync(ProductCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProductResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ProductResponse> GetProductAsync(string id)
        {
            return GetProductAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ProductResponse> GetProductAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProductResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ProductResponse> UpdateProductAsync(string id, ProductUpdate body)
        {
            return UpdateProductAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ProductResponse> UpdateProductAsync(string id, ProductUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProductResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteProductAsync(string id)
        {
            return DeleteProductAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteProductAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ProductResponse>> SearchAllAsync(string query, int? limit, string page)
        {
            return SearchAllAsync(query, limit, page, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ProductResponse>> SearchAllAsync(string query, int? limit, string page, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/products/search?");
            if (query != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("query") + "=").Append(System.Uri.EscapeDataString(ConvertToString(query, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (limit != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("limit") + "=").Append(System.Uri.EscapeDataString(ConvertToString(limit, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (page != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("page") + "=").Append(System.Uri.EscapeDataString(ConvertToString(page, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ProductResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProfileClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ProfileClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<UserResponse> UserAsync()
        {
            return UserAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UserResponse> UserAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/user");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UserResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task UpdateAsync(UserRequest body)
        {
            return UpdateAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task UpdateAsync(UserRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/Update");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<CustomerResponse> GetCustomerAsync()
        {
            return GetCustomerAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<CustomerResponse> GetCustomerAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/GetCustomer");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<CustomerResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SubscriptionResponse>> SubscriptionsAsync()
        {
            return SubscriptionsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SubscriptionResponse>> SubscriptionsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/subscriptions");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SubscriptionResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> ModelAisAsync()
        {
            return ModelAisAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ModelAiResponse>> ModelAisAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/modelAis");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ModelAiResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> ServicesAsync()
        {
            return ServicesAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> ServicesAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/services");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> ServicesModelAiAsync(string modelAiId)
        {
            return ServicesModelAiAsync(modelAiId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> ServicesModelAiAsync(string modelAiId, System.Threading.CancellationToken cancellationToken)
        {
            if (modelAiId == null)
                throw new System.ArgumentNullException("modelAiId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/services-modelAi/{modelAiId}");
            urlBuilder_.Replace("{modelAiId}", System.Uri.EscapeDataString(ConvertToString(modelAiId, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> SpacesSubscriptionAsync(string subscriptionId)
        {
            return SpacesSubscriptionAsync(subscriptionId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> SpacesSubscriptionAsync(string subscriptionId, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/spaces-subscription?");
            if (subscriptionId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("subscriptionId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(subscriptionId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SpaceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SpaceResponse> SpaceSubscriptionAsync(string subscriptionId, string spaceId)
        {
            return SpaceSubscriptionAsync(subscriptionId, spaceId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SpaceResponse> SpaceSubscriptionAsync(string subscriptionId, string spaceId, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/space-subscription?");
            if (subscriptionId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("subscriptionId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(subscriptionId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (spaceId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("spaceId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(spaceId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SpaceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> RequestsSubscriptionAsync(string subscriptionId)
        {
            return RequestsSubscriptionAsync(subscriptionId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> RequestsSubscriptionAsync(string subscriptionId, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/requests-subscription?");
            if (subscriptionId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("subscriptionId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(subscriptionId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<RequestResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> RequestsServiceAsync(string serviceId)
        {
            return RequestsServiceAsync(serviceId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> RequestsServiceAsync(string serviceId, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Profile/requests-services?");
            if (serviceId != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("serviceId") + "=").Append(System.Uri.EscapeDataString(ConvertToString(serviceId, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<RequestResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public RequestClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Requests
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> GetRequests2Async()
        {
            return GetRequests2Async(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Requests
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<RequestResponse>> GetRequests2Async(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<RequestResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceDataTod> CreateRequestAsync(RequestCreate body)
        {
            return CreateRequestAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceDataTod> CreateRequestAsync(RequestCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceDataTod>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<RequestResponse> GetRequestAsync(string id)
        {
            return GetRequestAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<RequestResponse> GetRequestAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<RequestResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteRequestAsync(string id)
        {
            return DeleteRequestAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteRequestAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update Request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<EventRequestResponse> CreateEventAsync(EventRequestRequest body)
        {
            return CreateEventAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update Request
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<EventRequestResponse> CreateEventAsync(EventRequestRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request/CreateEvent");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<EventRequestResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Check if requests allowed
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<RequestAllowed> AllowedAsync(string serviceId)
        {
            return AllowedAsync(serviceId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Check if requests allowed
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<RequestAllowed> AllowedAsync(string serviceId, System.Threading.CancellationToken cancellationToken)
        {
            if (serviceId == null)
                throw new System.ArgumentNullException("serviceId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Request/allowed/{serviceId}");
            urlBuilder_.Replace("{serviceId}", System.Uri.EscapeDataString(ConvertToString(serviceId, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<RequestAllowed>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RolesClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public RolesClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<object>> RolesAllAsync()
        {
            return RolesAllAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<object>> RolesAllAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Roles");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<object>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task RolesPOSTAsync(RoleCreate body)
        {
            return RolesPOSTAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task RolesPOSTAsync(RoleCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Roles");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 201)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<RoleResponse> RolesGETAsync(string id)
        {
            return RolesGETAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<RoleResponse> RolesGETAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Roles/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<RoleResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task RolesDELETEAsync(string id)
        {
            return RolesDELETEAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task RolesDELETEAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Roles/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task AssignPermissionAsync(RolePermitionAssign body)
        {
            return AssignPermissionAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task AssignPermissionAsync(RolePermitionAssign body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Roles/assignPermission");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ServiceClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> GetServicesAsync()
        {
            return GetServicesAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Services
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceResponse>> GetServicesAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Service");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a service
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceResponse> CreateServiceAsync(ServiceCreate body)
        {
            return CreateServiceAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a service
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceResponse> CreateServiceAsync(ServiceCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Service");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceResponse> GetServiceAsync(string id)
        {
            return GetServiceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceResponse> GetServiceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Service/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update service
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task UpdateServiceAsync(string id, ServiceUpdate body)
        {
            return UpdateServiceAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update service
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task UpdateServiceAsync(string id, ServiceUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Service/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete service
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteServiceAsync(string id)
        {
            return DeleteServiceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete service
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteServiceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Service/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceMethodClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public ServiceMethodClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceMethodResponse>> GetServiceMethodsAsync()
        {
            return GetServiceMethodsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<ServiceMethodResponse>> GetServiceMethodsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ServiceMethod");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<ServiceMethodResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a Service Method
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceMethodResponse> CreateServiceMethodsAsync(ServiceMethodCreate body)
        {
            return CreateServiceMethodsAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a Service Method
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceMethodResponse> CreateServiceMethodsAsync(ServiceMethodCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ServiceMethod");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceMethodResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceMethodResponse> GetServiceMethodAsync(string id)
        {
            return GetServiceMethodAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceMethodResponse> GetServiceMethodAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ServiceMethod/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceMethodResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceMethodResponse> UpdateServiceMethodsAsync(string id, ServiceMethodUpdate body)
        {
            return UpdateServiceMethodsAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceMethodResponse> UpdateServiceMethodsAsync(string id, ServiceMethodUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ServiceMethod/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceMethodResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteServiceMethodsAsync(string id)
        {
            return DeleteServiceMethodsAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete Service Method
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteServiceMethodsAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/ServiceMethod/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SettingClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public SettingClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<object>> SettingAllAsync()
        {
            return SettingAllAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<object>> SettingAllAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Setting");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<object>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceResponse> SettingPOSTAsync(SettingCreate body)
        {
            return SettingPOSTAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceResponse> SettingPOSTAsync(SettingCreate body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Setting");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<ServiceResponse> SettingGETAsync(string name)
        {
            return SettingGETAsync(name, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<ServiceResponse> SettingGETAsync(string name, System.Threading.CancellationToken cancellationToken)
        {
            if (name == null)
                throw new System.ArgumentNullException("name");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Setting/{name}");
            urlBuilder_.Replace("{name}", System.Uri.EscapeDataString(ConvertToString(name, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ServiceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task SettingPUTAsync(string name, SettingUpdate body)
        {
            return SettingPUTAsync(name, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task SettingPUTAsync(string name, SettingUpdate body, System.Threading.CancellationToken cancellationToken)
        {
            if (name == null)
                throw new System.ArgumentNullException("name");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Setting/{name}");
            urlBuilder_.Replace("{name}", System.Uri.EscapeDataString(ConvertToString(name, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task SettingDELETEAsync(string name)
        {
            return SettingDELETEAsync(name, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete setting
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task SettingDELETEAsync(string name, System.Threading.CancellationToken cancellationToken)
        {
            if (name == null)
                throw new System.ArgumentNullException("name");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Setting/{name}");
            urlBuilder_.Replace("{name}", System.Uri.EscapeDataString(ConvertToString(name, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SpaceClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public SpaceClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <summary>
        /// Get all Spaces
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetSpacesAsync()
        {
            return GetSpacesAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get all Spaces
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetSpacesAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SpaceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Create a Space
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SpaceResponse> CreateSpaceAsync(CreateSpaceRequest body)
        {
            return CreateSpaceAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create a Space
        /// </summary>
        /// <returns>Created</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SpaceResponse> CreateSpaceAsync(CreateSpaceRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 201)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SpaceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Get one Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SpaceResponse> GetSpaceAsync(string id)
        {
            return GetSpaceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get one Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SpaceResponse> GetSpaceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SpaceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Update Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SpaceResponse> UpdateSpaceAsync(string id, UpdateSpaceRequest body)
        {
            return UpdateSpaceAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SpaceResponse> UpdateSpaceAsync(string id, UpdateSpaceRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SpaceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <summary>
        /// Delete Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<DeletedResponse> DeleteSpaceAsync(string id)
        {
            return DeleteSpaceAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete Space
        /// </summary>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<DeletedResponse> DeleteSpaceAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<DeletedResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 404)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Not Found", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SpaceResponse> GetByTokenAsync(string token)
        {
            return GetByTokenAsync(token, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SpaceResponse> GetByTokenAsync(string token, System.Threading.CancellationToken cancellationToken)
        {
            if (token == null)
                throw new System.ArgumentNullException("token");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/GetByToken/{token}");
            urlBuilder_.Replace("{token}", System.Uri.EscapeDataString(ConvertToString(token, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SpaceResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetBySubscriptionIdAsync(string subscriptionId)
        {
            return GetBySubscriptionIdAsync(subscriptionId, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetBySubscriptionIdAsync(string subscriptionId, System.Threading.CancellationToken cancellationToken)
        {
            if (subscriptionId == null)
                throw new System.ArgumentNullException("subscriptionId");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/GetBySubscriptionId/{subscriptionId}");
            urlBuilder_.Replace("{subscriptionId}", System.Uri.EscapeDataString(ConvertToString(subscriptionId, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SpaceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetSpacesByRamAsync(int ram)
        {
            return GetSpacesByRamAsync(ram, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SpaceResponse>> GetSpacesByRamAsync(int ram, System.Threading.CancellationToken cancellationToken)
        {
            if (ram == null)
                throw new System.ArgumentNullException("ram");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Space/GetSpacesByRamAsync/{ram}");
            urlBuilder_.Replace("{ram}", System.Uri.EscapeDataString(ConvertToString(ram, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SpaceResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionsClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public SubscriptionsClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SubscriptionResponse>> GetSubscriptionsAsync()
        {
            return GetSubscriptionsAsync(System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<SubscriptionResponse>> GetSubscriptionsAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<SubscriptionResponse>>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SubscriptionCreateResponse> CreateSubscriptionAsync(SubscriptionCreateRequest body)
        {
            return CreateSubscriptionAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SubscriptionCreateResponse> CreateSubscriptionAsync(SubscriptionCreateRequest body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SubscriptionCreateResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 409)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Conflict", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<SubscriptionResponse> GetSubscriptionAsync(string id)
        {
            return GetSubscriptionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<SubscriptionResponse> GetSubscriptionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<SubscriptionResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task PauseCollectionAsync(string id, SubscriptionUpdateRequest body)
        {
            return PauseCollectionAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task PauseCollectionAsync(string id, SubscriptionUpdateRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/PauseCollection/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ResumeCollectionAsync(string id)
        {
            return ResumeCollectionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ResumeCollectionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/ResumeCollection/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CancelSubscriptionAsync(string id)
        {
            return CancelSubscriptionAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CancelSubscriptionAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/cancel/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("DELETE");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task CancelAtEndAsync(string id)
        {
            return CancelAtEndAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task CancelAtEndAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/CancelAtEnd/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task RenewAsync(string id)
        {
            return RenewAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task RenewAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/Renew/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ResumeAsync(string id, SubscriptionResumeRequest body)
        {
            return ResumeAsync(id, body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ResumeAsync(string id, SubscriptionResumeRequest body, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/resume/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ResetRequestsAsync(string id)
        {
            return ResetRequestsAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ResetRequestsAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/resetRequests/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task ResetSpacesAsync(string id)
        {
            return ResetSpacesAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task ResetSpacesAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/Subscriptions/resetSpaces/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Content = new System.Net.Http.StringContent(string.Empty, System.Text.Encoding.UTF8, "application/json");
                    request_.Method = new System.Net.Http.HttpMethod("PUT");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserClient
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<System.Text.Json.JsonSerializerOptions> _settings;

        public UserClient(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<System.Text.Json.JsonSerializerOptions>(CreateSerializerSettings);
        }

        private System.Text.Json.JsonSerializerOptions CreateSerializerSettings()
        {
            var settings = new System.Text.Json.JsonSerializerOptions();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected System.Text.Json.JsonSerializerOptions JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(System.Text.Json.JsonSerializerOptions settings);

        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<UserResponse> GetUserAsync(string id)
        {
            return GetUserAsync(id, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UserResponse> GetUserAsync(string id, System.Threading.CancellationToken cancellationToken)
        {
            if (id == null)
                throw new System.ArgumentNullException("id");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/User/{id}");
            urlBuilder_.Replace("{id}", System.Uri.EscapeDataString(ConvertToString(id, System.Globalization.CultureInfo.InvariantCulture)));

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UserResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<UserResponse> AssignServiceAsync(AssignService body)
        {
            return AssignServiceAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UserResponse> AssignServiceAsync(AssignService body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/User/assign-service");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UserResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<UserResponse> AssignModelAiAsync(AssignModelAi body)
        {
            return AssignModelAiAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UserResponse> AssignModelAiAsync(AssignModelAi body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/User/assign-modelAi");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UserResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual System.Threading.Tasks.Task<UserResponse> AssignRoleAsync(RoleAssign body)
        {
            return AssignRoleAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>OK</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public virtual async System.Threading.Tasks.Task<UserResponse> AssignRoleAsync(RoleAssign body, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/api/User/assignRole");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var json_ = System.Text.Json.JsonSerializer.Serialize(body, _settings.Value);
                    var content_ = new System.Net.Http.StringContent(json_);
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<UserResponse>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        if (status_ == 401)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Unauthorized", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        if (status_ == 400)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<ProblemDetails>(response_, headers_, cancellationToken).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            throw new ApiException<ProblemDetails>("Bad Request", status_, objectResponse_.Text, headers_, objectResponse_.Object, null);
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Threading.CancellationToken cancellationToken)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = System.Text.Json.JsonSerializer.Deserialize<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    {
                        var typedBody = await System.Text.Json.JsonSerializer.DeserializeAsync<T>(responseStream, JsonSerializerSettings, cancellationToken).ConfigureAwait(false);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (System.Text.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccessTokenResponse : Prism.Mvvm.BindableBase
    {
        private string _tokenType;
        private string _accessToken;
        private long _expiresIn;
        private string _refreshToken;

        [System.Text.Json.Serialization.JsonPropertyName("tokenType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TokenType
        {
            get { return _tokenType; }

            set { SetProperty(ref _tokenType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accessToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string AccessToken
        {
            get { return _accessToken; }

            set { SetProperty(ref _accessToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresIn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public long ExpiresIn
        {
            get { return _expiresIn; }

            set { SetProperty(ref _expiresIn, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("refreshToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string RefreshToken
        {
            get { return _refreshToken; }

            set { SetProperty(ref _refreshToken, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Account : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private AccountBusinessProfile _businessProfile;
        private string _businessType;
        private AccountCapabilities _capabilities;
        private bool _chargesEnabled;
        private AccountCompany _company;
        private AccountController _controller;
        private string _country;
        private System.DateTimeOffset _created;
        private string _defaultCurrency;
        private bool? _deleted;
        private bool _detailsSubmitted;
        private string _email;
        private System.Collections.Generic.ICollection<IExternalAccount> _externalAccounts;
        private AccountFutureRequirements _futureRequirements;
        private AccountGroups _groups;
        private Person _individual;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private bool _payoutsEnabled;
        private AccountRequirements _requirements;
        private AccountRiskControls _riskControls;
        private AccountSettings _settings;
        private AccountTosAcceptance _tosAcceptance;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("businessProfile")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountBusinessProfile BusinessProfile
        {
            get { return _businessProfile; }

            set { SetProperty(ref _businessProfile, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("businessType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BusinessType
        {
            get { return _businessType; }

            set { SetProperty(ref _businessType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("capabilities")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountCapabilities Capabilities
        {
            get { return _capabilities; }

            set { SetProperty(ref _capabilities, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargesEnabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ChargesEnabled
        {
            get { return _chargesEnabled; }

            set { SetProperty(ref _chargesEnabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("company")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountCompany Company
        {
            get { return _company; }

            set { SetProperty(ref _company, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("controller")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountController Controller
        {
            get { return _controller; }

            set { SetProperty(ref _controller, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultCurrency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultCurrency
        {
            get { return _defaultCurrency; }

            set { SetProperty(ref _defaultCurrency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detailsSubmitted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool DetailsSubmitted
        {
            get { return _detailsSubmitted; }

            set { SetProperty(ref _detailsSubmitted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("externalAccounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<IExternalAccount> ExternalAccounts
        {
            get { return _externalAccounts; }

            set { SetProperty(ref _externalAccounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("futureRequirements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountFutureRequirements FutureRequirements
        {
            get { return _futureRequirements; }

            set { SetProperty(ref _futureRequirements, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("groups")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountGroups Groups
        {
            get { return _groups; }

            set { SetProperty(ref _groups, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("individual")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Person Individual
        {
            get { return _individual; }

            set { SetProperty(ref _individual, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payoutsEnabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool PayoutsEnabled
        {
            get { return _payoutsEnabled; }

            set { SetProperty(ref _payoutsEnabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountRequirements Requirements
        {
            get { return _requirements; }

            set { SetProperty(ref _requirements, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("riskControls")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountRiskControls RiskControls
        {
            get { return _riskControls; }

            set { SetProperty(ref _riskControls, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("settings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettings Settings
        {
            get { return _settings; }

            set { SetProperty(ref _settings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tosAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountTosAcceptance TosAcceptance
        {
            get { return _tosAcceptance; }

            set { SetProperty(ref _tosAcceptance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountBusinessProfile : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountBusinessProfileAnnualRevenue _annualRevenue;
        private long? _estimatedWorkerCount;
        private string _mcc;
        private AccountBusinessProfileMonthlyEstimatedRevenue _monthlyEstimatedRevenue;
        private string _name;
        private string _productDescription;
        private Address _supportAddress;
        private string _supportEmail;
        private string _supportPhone;
        private string _supportUrl;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("annualRevenue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountBusinessProfileAnnualRevenue AnnualRevenue
        {
            get { return _annualRevenue; }

            set { SetProperty(ref _annualRevenue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("estimatedWorkerCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? EstimatedWorkerCount
        {
            get { return _estimatedWorkerCount; }

            set { SetProperty(ref _estimatedWorkerCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mcc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mcc
        {
            get { return _mcc; }

            set { SetProperty(ref _mcc, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyEstimatedRevenue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountBusinessProfileMonthlyEstimatedRevenue MonthlyEstimatedRevenue
        {
            get { return _monthlyEstimatedRevenue; }

            set { SetProperty(ref _monthlyEstimatedRevenue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductDescription
        {
            get { return _productDescription; }

            set { SetProperty(ref _productDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address SupportAddress
        {
            get { return _supportAddress; }

            set { SetProperty(ref _supportAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SupportEmail
        {
            get { return _supportEmail; }

            set { SetProperty(ref _supportEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportPhone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SupportPhone
        {
            get { return _supportPhone; }

            set { SetProperty(ref _supportPhone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SupportUrl
        {
            get { return _supportUrl; }

            set { SetProperty(ref _supportUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountBusinessProfileAnnualRevenue : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _currency;
        private string _fiscalYearEnd;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fiscalYearEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FiscalYearEnd
        {
            get { return _fiscalYearEnd; }

            set { SetProperty(ref _fiscalYearEnd, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountBusinessProfileMonthlyEstimatedRevenue : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _currency;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountCapabilities : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _acssDebitPayments;
        private string _affirmPayments;
        private string _afterpayClearpayPayments;
        private string _almaPayments;
        private string _amazonPayPayments;
        private string _auBecsDebitPayments;
        private string _bacsDebitPayments;
        private string _bancontactPayments;
        private string _bankTransferPayments;
        private string _blikPayments;
        private string _boletoPayments;
        private string _cardIssuing;
        private string _cardPayments;
        private string _cartesBancairesPayments;
        private string _cashappPayments;
        private string _epsPayments;
        private string _fpxPayments;
        private string _gbBankTransferPayments;
        private string _giropayPayments;
        private string _gopayPayments;
        private string _grabpayPayments;
        private string _idBankTransferPayments;
        private string _idBankTransferPaymentsBca;
        private string _idealPayments;
        private string _indiaInternationalPayments;
        private string _jcbPayments;
        private string _jpBankTransferPayments;
        private string _kakaoPayPayments;
        private string _klarnaPayments;
        private string _konbiniPayments;
        private string _krCardPayments;
        private string _legacyPayments;
        private string _linkPayments;
        private string _mbWayPayments;
        private string _mobilepayPayments;
        private string _multibancoPayments;
        private string _mxBankTransferPayments;
        private string _naverPayPayments;
        private string _oxxoPayments;
        private string _p24Payments;
        private string _paycoPayments;
        private string _paynowPayments;
        private string _paypalPayments;
        private string _paytoPayments;
        private string _promptpayPayments;
        private string _qrisPayments;
        private string _rechnungPayments;
        private string _revolutPayPayments;
        private string _samsungPayPayments;
        private string _sepaBankTransferPayments;
        private string _sepaDebitPayments;
        private string _shopeepayPayments;
        private string _sofortPayments;
        private string _swishPayments;
        private string _taxReportingUs1099K;
        private string _taxReportingUs1099Misc;
        private string _transfers;
        private string _treasury;
        private string _treasuryEvolve;
        private string _treasuryFifthThird;
        private string _treasuryGoldmanSachs;
        private string _twintPayments;
        private string _usBankAccountAchPayments;
        private string _usBankTransferPayments;
        private string _zipPayments;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AcssDebitPayments
        {
            get { return _acssDebitPayments; }

            set { SetProperty(ref _acssDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affirmPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AffirmPayments
        {
            get { return _affirmPayments; }

            set { SetProperty(ref _affirmPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("afterpayClearpayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AfterpayClearpayPayments
        {
            get { return _afterpayClearpayPayments; }

            set { SetProperty(ref _afterpayClearpayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("almaPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AlmaPayments
        {
            get { return _almaPayments; }

            set { SetProperty(ref _almaPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmazonPayPayments
        {
            get { return _amazonPayPayments; }

            set { SetProperty(ref _amazonPayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuBecsDebitPayments
        {
            get { return _auBecsDebitPayments; }

            set { SetProperty(ref _auBecsDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BacsDebitPayments
        {
            get { return _bacsDebitPayments; }

            set { SetProperty(ref _bacsDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontactPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BancontactPayments
        {
            get { return _bancontactPayments; }

            set { SetProperty(ref _bancontactPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankTransferPayments
        {
            get { return _bankTransferPayments; }

            set { SetProperty(ref _bankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blikPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BlikPayments
        {
            get { return _blikPayments; }

            set { SetProperty(ref _blikPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boletoPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BoletoPayments
        {
            get { return _boletoPayments; }

            set { SetProperty(ref _boletoPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardIssuing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardIssuing
        {
            get { return _cardIssuing; }

            set { SetProperty(ref _cardIssuing, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardPayments
        {
            get { return _cardPayments; }

            set { SetProperty(ref _cardPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cartesBancairesPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CartesBancairesPayments
        {
            get { return _cartesBancairesPayments; }

            set { SetProperty(ref _cartesBancairesPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashappPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CashappPayments
        {
            get { return _cashappPayments; }

            set { SetProperty(ref _cashappPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("epsPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EpsPayments
        {
            get { return _epsPayments; }

            set { SetProperty(ref _epsPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fpxPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FpxPayments
        {
            get { return _fpxPayments; }

            set { SetProperty(ref _fpxPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gbBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GbBankTransferPayments
        {
            get { return _gbBankTransferPayments; }

            set { SetProperty(ref _gbBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giropayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GiropayPayments
        {
            get { return _giropayPayments; }

            set { SetProperty(ref _giropayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gopayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GopayPayments
        {
            get { return _gopayPayments; }

            set { SetProperty(ref _gopayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("grabpayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GrabpayPayments
        {
            get { return _grabpayPayments; }

            set { SetProperty(ref _grabpayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IdBankTransferPayments
        {
            get { return _idBankTransferPayments; }

            set { SetProperty(ref _idBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransferPaymentsBca")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IdBankTransferPaymentsBca
        {
            get { return _idBankTransferPaymentsBca; }

            set { SetProperty(ref _idBankTransferPaymentsBca, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idealPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IdealPayments
        {
            get { return _idealPayments; }

            set { SetProperty(ref _idealPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("indiaInternationalPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IndiaInternationalPayments
        {
            get { return _indiaInternationalPayments; }

            set { SetProperty(ref _indiaInternationalPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("jcbPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string JcbPayments
        {
            get { return _jcbPayments; }

            set { SetProperty(ref _jcbPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("jpBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string JpBankTransferPayments
        {
            get { return _jpBankTransferPayments; }

            set { SetProperty(ref _jpBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string KakaoPayPayments
        {
            get { return _kakaoPayPayments; }

            set { SetProperty(ref _kakaoPayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarnaPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string KlarnaPayments
        {
            get { return _klarnaPayments; }

            set { SetProperty(ref _klarnaPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbiniPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string KonbiniPayments
        {
            get { return _konbiniPayments; }

            set { SetProperty(ref _konbiniPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCardPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string KrCardPayments
        {
            get { return _krCardPayments; }

            set { SetProperty(ref _krCardPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("legacyPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LegacyPayments
        {
            get { return _legacyPayments; }

            set { SetProperty(ref _legacyPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("linkPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LinkPayments
        {
            get { return _linkPayments; }

            set { SetProperty(ref _linkPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mbWayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MbWayPayments
        {
            get { return _mbWayPayments; }

            set { SetProperty(ref _mbWayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobilepayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MobilepayPayments
        {
            get { return _mobilepayPayments; }

            set { SetProperty(ref _mobilepayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibancoPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MultibancoPayments
        {
            get { return _multibancoPayments; }

            set { SetProperty(ref _multibancoPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mxBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MxBankTransferPayments
        {
            get { return _mxBankTransferPayments; }

            set { SetProperty(ref _mxBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("naverPayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NaverPayPayments
        {
            get { return _naverPayPayments; }

            set { SetProperty(ref _naverPayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oxxoPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OxxoPayments
        {
            get { return _oxxoPayments; }

            set { SetProperty(ref _oxxoPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("p24Payments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string P24Payments
        {
            get { return _p24Payments; }

            set { SetProperty(ref _p24Payments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paycoPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaycoPayments
        {
            get { return _paycoPayments; }

            set { SetProperty(ref _paycoPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynowPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaynowPayments
        {
            get { return _paynowPayments; }

            set { SetProperty(ref _paynowPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypalPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaypalPayments
        {
            get { return _paypalPayments; }

            set { SetProperty(ref _paypalPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paytoPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaytoPayments
        {
            get { return _paytoPayments; }

            set { SetProperty(ref _paytoPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promptpayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PromptpayPayments
        {
            get { return _promptpayPayments; }

            set { SetProperty(ref _promptpayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qrisPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string QrisPayments
        {
            get { return _qrisPayments; }

            set { SetProperty(ref _qrisPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rechnungPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RechnungPayments
        {
            get { return _rechnungPayments; }

            set { SetProperty(ref _rechnungPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RevolutPayPayments
        {
            get { return _revolutPayPayments; }

            set { SetProperty(ref _revolutPayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SamsungPayPayments
        {
            get { return _samsungPayPayments; }

            set { SetProperty(ref _samsungPayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SepaBankTransferPayments
        {
            get { return _sepaBankTransferPayments; }

            set { SetProperty(ref _sepaBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SepaDebitPayments
        {
            get { return _sepaDebitPayments; }

            set { SetProperty(ref _sepaDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shopeepayPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ShopeepayPayments
        {
            get { return _shopeepayPayments; }

            set { SetProperty(ref _shopeepayPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofortPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SofortPayments
        {
            get { return _sofortPayments; }

            set { SetProperty(ref _sofortPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swishPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SwishPayments
        {
            get { return _swishPayments; }

            set { SetProperty(ref _swishPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxReportingUs1099K")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxReportingUs1099K
        {
            get { return _taxReportingUs1099K; }

            set { SetProperty(ref _taxReportingUs1099K, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxReportingUs1099Misc")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxReportingUs1099Misc
        {
            get { return _taxReportingUs1099Misc; }

            set { SetProperty(ref _taxReportingUs1099Misc, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transfers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Transfers
        {
            get { return _transfers; }

            set { SetProperty(ref _transfers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("treasury")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Treasury
        {
            get { return _treasury; }

            set { SetProperty(ref _treasury, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("treasuryEvolve")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TreasuryEvolve
        {
            get { return _treasuryEvolve; }

            set { SetProperty(ref _treasuryEvolve, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("treasuryFifthThird")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TreasuryFifthThird
        {
            get { return _treasuryFifthThird; }

            set { SetProperty(ref _treasuryFifthThird, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("treasuryGoldmanSachs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TreasuryGoldmanSachs
        {
            get { return _treasuryGoldmanSachs; }

            set { SetProperty(ref _treasuryGoldmanSachs, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twintPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TwintPayments
        {
            get { return _twintPayments; }

            set { SetProperty(ref _twintPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccountAchPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UsBankAccountAchPayments
        {
            get { return _usBankAccountAchPayments; }

            set { SetProperty(ref _usBankAccountAchPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankTransferPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UsBankTransferPayments
        {
            get { return _usBankTransferPayments; }

            set { SetProperty(ref _usBankTransferPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zipPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ZipPayments
        {
            get { return _zipPayments; }

            set { SetProperty(ref _zipPayments, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountCompany : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _address;
        private AddressJapan _addressKana;
        private AddressJapan _addressKanji;
        private bool _directorsProvided;
        private bool _executivesProvided;
        private string _exportLicenseId;
        private string _exportPurposeCode;
        private string _name;
        private string _nameKana;
        private string _nameKanji;
        private bool _ownersProvided;
        private AccountCompanyOwnershipDeclaration _ownershipDeclaration;
        private string _phone;
        private string _structure;
        private bool _taxIdProvided;
        private string _taxIdRegistrar;
        private bool _vatIdProvided;
        private AccountCompanyVerification _verification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AddressJapan AddressKana
        {
            get { return _addressKana; }

            set { SetProperty(ref _addressKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AddressJapan AddressKanji
        {
            get { return _addressKanji; }

            set { SetProperty(ref _addressKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("directorsProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool DirectorsProvided
        {
            get { return _directorsProvided; }

            set { SetProperty(ref _directorsProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("executivesProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ExecutivesProvided
        {
            get { return _executivesProvided; }

            set { SetProperty(ref _executivesProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("exportLicenseId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ExportLicenseId
        {
            get { return _exportLicenseId; }

            set { SetProperty(ref _exportLicenseId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("exportPurposeCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ExportPurposeCode
        {
            get { return _exportPurposeCode; }

            set { SetProperty(ref _exportPurposeCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nameKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NameKana
        {
            get { return _nameKana; }

            set { SetProperty(ref _nameKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nameKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NameKanji
        {
            get { return _nameKanji; }

            set { SetProperty(ref _nameKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ownersProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool OwnersProvided
        {
            get { return _ownersProvided; }

            set { SetProperty(ref _ownersProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ownershipDeclaration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountCompanyOwnershipDeclaration OwnershipDeclaration
        {
            get { return _ownershipDeclaration; }

            set { SetProperty(ref _ownershipDeclaration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("structure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Structure
        {
            get { return _structure; }

            set { SetProperty(ref _structure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxIdProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool TaxIdProvided
        {
            get { return _taxIdProvided; }

            set { SetProperty(ref _taxIdProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxIdRegistrar")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxIdRegistrar
        {
            get { return _taxIdRegistrar; }

            set { SetProperty(ref _taxIdRegistrar, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("vatIdProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool VatIdProvided
        {
            get { return _vatIdProvided; }

            set { SetProperty(ref _vatIdProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountCompanyVerification Verification
        {
            get { return _verification; }

            set { SetProperty(ref _verification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountCompanyOwnershipDeclaration : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _date;
        private string _ip;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Ip
        {
            get { return _ip; }

            set { SetProperty(ref _ip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountCompanyVerification : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountCompanyVerificationDocument _document;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("document")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountCompanyVerificationDocument Document
        {
            get { return _document; }

            set { SetProperty(ref _document, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountCompanyVerificationDocument : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _backId;
        private File _back;
        private string _details;
        private string _detailsCode;
        private string _frontId;
        private File _front;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("backId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BackId
        {
            get { return _backId; }

            set { SetProperty(ref _backId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("back")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Back
        {
            get { return _back; }

            set { SetProperty(ref _back, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("details")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Details
        {
            get { return _details; }

            set { SetProperty(ref _details, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detailsCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DetailsCode
        {
            get { return _detailsCode; }

            set { SetProperty(ref _detailsCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("frontId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FrontId
        {
            get { return _frontId; }

            set { SetProperty(ref _frontId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("front")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Front
        {
            get { return _front; }

            set { SetProperty(ref _front, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountController : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountControllerApplication _application;
        private AccountControllerDashboard _dashboard;
        private AccountControllerFees _fees;
        private bool _isController;
        private AccountControllerLosses _losses;
        private string _requirementCollection;
        private AccountControllerStripeDashboard _stripeDashboard;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountControllerApplication Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dashboard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountControllerDashboard Dashboard
        {
            get { return _dashboard; }

            set { SetProperty(ref _dashboard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fees")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountControllerFees Fees
        {
            get { return _fees; }

            set { SetProperty(ref _fees, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isController")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsController
        {
            get { return _isController; }

            set { SetProperty(ref _isController, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("losses")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountControllerLosses Losses
        {
            get { return _losses; }

            set { SetProperty(ref _losses, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirementCollection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequirementCollection
        {
            get { return _requirementCollection; }

            set { SetProperty(ref _requirementCollection, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeDashboard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountControllerStripeDashboard StripeDashboard
        {
            get { return _stripeDashboard; }

            set { SetProperty(ref _stripeDashboard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountControllerApplication : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _lossLiable;
        private bool _onboardingOwner;
        private bool _pricingControls;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lossLiable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool LossLiable
        {
            get { return _lossLiable; }

            set { SetProperty(ref _lossLiable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onboardingOwner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool OnboardingOwner
        {
            get { return _onboardingOwner; }

            set { SetProperty(ref _onboardingOwner, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pricingControls")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool PricingControls
        {
            get { return _pricingControls; }

            set { SetProperty(ref _pricingControls, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountControllerDashboard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountControllerFees : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _payer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Payer
        {
            get { return _payer; }

            set { SetProperty(ref _payer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountControllerLosses : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _payments;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Payments
        {
            get { return _payments; }

            set { SetProperty(ref _payments, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountControllerStripeDashboard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountFutureRequirements : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<AccountFutureRequirementsAlternative> _alternatives;
        private System.DateTimeOffset? _currentDeadline;
        private System.Collections.Generic.ICollection<string> _currentlyDue;
        private string _disabledReason;
        private System.Collections.Generic.ICollection<AccountFutureRequirementsError> _errors;
        private System.Collections.Generic.ICollection<string> _eventuallyDue;
        private System.Collections.Generic.ICollection<string> _pastDue;
        private System.Collections.Generic.ICollection<string> _pendingVerification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternatives")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AccountFutureRequirementsAlternative> Alternatives
        {
            get { return _alternatives; }

            set { SetProperty(ref _alternatives, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentDeadline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CurrentDeadline
        {
            get { return _currentDeadline; }

            set { SetProperty(ref _currentDeadline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentlyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> CurrentlyDue
        {
            get { return _currentlyDue; }

            set { SetProperty(ref _currentlyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("disabledReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisabledReason
        {
            get { return _disabledReason; }

            set { SetProperty(ref _disabledReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AccountFutureRequirementsError> Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eventuallyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> EventuallyDue
        {
            get { return _eventuallyDue; }

            set { SetProperty(ref _eventuallyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PastDue
        {
            get { return _pastDue; }

            set { SetProperty(ref _pastDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingVerification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PendingVerification
        {
            get { return _pendingVerification; }

            set { SetProperty(ref _pendingVerification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountFutureRequirementsAlternative : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _alternativeFieldsDue;
        private System.Collections.Generic.ICollection<string> _originalFieldsDue;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternativeFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AlternativeFieldsDue
        {
            get { return _alternativeFieldsDue; }

            set { SetProperty(ref _alternativeFieldsDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originalFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OriginalFieldsDue
        {
            get { return _originalFieldsDue; }

            set { SetProperty(ref _originalFieldsDue, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountFutureRequirementsError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _code;
        private string _reason;
        private string _requirement;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Requirement
        {
            get { return _requirement; }

            set { SetProperty(ref _requirement, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountGroups : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _paymentsPricing;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentsPricing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentsPricing
        {
            get { return _paymentsPricing; }

            set { SetProperty(ref _paymentsPricing, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRequirements : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<AccountRequirementsAlternative> _alternatives;
        private System.DateTimeOffset? _currentDeadline;
        private System.Collections.Generic.ICollection<string> _currentlyDue;
        private string _disabledReason;
        private System.Collections.Generic.ICollection<AccountRequirementsError> _errors;
        private System.Collections.Generic.ICollection<string> _eventuallyDue;
        private System.Collections.Generic.ICollection<string> _pastDue;
        private System.Collections.Generic.ICollection<string> _pendingVerification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternatives")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AccountRequirementsAlternative> Alternatives
        {
            get { return _alternatives; }

            set { SetProperty(ref _alternatives, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentDeadline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CurrentDeadline
        {
            get { return _currentDeadline; }

            set { SetProperty(ref _currentDeadline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentlyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> CurrentlyDue
        {
            get { return _currentlyDue; }

            set { SetProperty(ref _currentlyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("disabledReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisabledReason
        {
            get { return _disabledReason; }

            set { SetProperty(ref _disabledReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AccountRequirementsError> Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eventuallyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> EventuallyDue
        {
            get { return _eventuallyDue; }

            set { SetProperty(ref _eventuallyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PastDue
        {
            get { return _pastDue; }

            set { SetProperty(ref _pastDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingVerification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PendingVerification
        {
            get { return _pendingVerification; }

            set { SetProperty(ref _pendingVerification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRequirementsAlternative : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _alternativeFieldsDue;
        private System.Collections.Generic.ICollection<string> _originalFieldsDue;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternativeFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AlternativeFieldsDue
        {
            get { return _alternativeFieldsDue; }

            set { SetProperty(ref _alternativeFieldsDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originalFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OriginalFieldsDue
        {
            get { return _originalFieldsDue; }

            set { SetProperty(ref _originalFieldsDue, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRequirementsError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _code;
        private string _reason;
        private string _requirement;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Requirement
        {
            get { return _requirement; }

            set { SetProperty(ref _requirement, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRiskControls : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountRiskControlsCharges _charges;
        private AccountRiskControlsPayouts _payouts;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charges")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountRiskControlsCharges Charges
        {
            get { return _charges; }

            set { SetProperty(ref _charges, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payouts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountRiskControlsPayouts Payouts
        {
            get { return _payouts; }

            set { SetProperty(ref _payouts, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRiskControlsCharges : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _pauseRequested;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pauseRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool PauseRequested
        {
            get { return _pauseRequested; }

            set { SetProperty(ref _pauseRequested, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountRiskControlsPayouts : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _pauseRequested;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pauseRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool PauseRequested
        {
            get { return _pauseRequested; }

            set { SetProperty(ref _pauseRequested, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountSettingsBacsDebitPayments _bacsDebitPayments;
        private AccountSettingsBankBcaOnboarding _bankBcaOnboarding;
        private AccountSettingsBranding _branding;
        private AccountSettingsCapital _capital;
        private AccountSettingsCardIssuing _cardIssuing;
        private AccountSettingsCardPayments _cardPayments;
        private AccountSettingsDashboard _dashboard;
        private AccountSettingsInvoices _invoices;
        private AccountSettingsPayments _payments;
        private AccountSettingsPayouts _payouts;
        private AccountSettingsSepaDebitPayments _sepaDebitPayments;
        private AccountSettingsTaxForms _taxForms;
        private AccountSettingsTreasury _treasury;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsBacsDebitPayments BacsDebitPayments
        {
            get { return _bacsDebitPayments; }

            set { SetProperty(ref _bacsDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankBcaOnboarding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsBankBcaOnboarding BankBcaOnboarding
        {
            get { return _bankBcaOnboarding; }

            set { SetProperty(ref _bankBcaOnboarding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("branding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsBranding Branding
        {
            get { return _branding; }

            set { SetProperty(ref _branding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("capital")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsCapital Capital
        {
            get { return _capital; }

            set { SetProperty(ref _capital, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardIssuing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsCardIssuing CardIssuing
        {
            get { return _cardIssuing; }

            set { SetProperty(ref _cardIssuing, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsCardPayments CardPayments
        {
            get { return _cardPayments; }

            set { SetProperty(ref _cardPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dashboard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsDashboard Dashboard
        {
            get { return _dashboard; }

            set { SetProperty(ref _dashboard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsInvoices Invoices
        {
            get { return _invoices; }

            set { SetProperty(ref _invoices, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsPayments Payments
        {
            get { return _payments; }

            set { SetProperty(ref _payments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payouts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsPayouts Payouts
        {
            get { return _payouts; }

            set { SetProperty(ref _payouts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebitPayments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsSepaDebitPayments SepaDebitPayments
        {
            get { return _sepaDebitPayments; }

            set { SetProperty(ref _sepaDebitPayments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxForms")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsTaxForms TaxForms
        {
            get { return _taxForms; }

            set { SetProperty(ref _taxForms, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("treasury")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsTreasury Treasury
        {
            get { return _treasury; }

            set { SetProperty(ref _treasury, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsBacsDebitPayments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _displayName;
        private string _serviceUserNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceUserNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ServiceUserNumber
        {
            get { return _serviceUserNumber; }

            set { SetProperty(ref _serviceUserNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsBankBcaOnboarding : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderName;
        private string _businessAccountNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("businessAccountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BusinessAccountNumber
        {
            get { return _businessAccountNumber; }

            set { SetProperty(ref _businessAccountNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsBranding : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _iconId;
        private File _icon;
        private string _logoId;
        private File _logo;
        private string _primaryColor;
        private string _secondaryColor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iconId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IconId
        {
            get { return _iconId; }

            set { SetProperty(ref _iconId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("icon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Icon
        {
            get { return _icon; }

            set { SetProperty(ref _icon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("logoId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LogoId
        {
            get { return _logoId; }

            set { SetProperty(ref _logoId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("logo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Logo
        {
            get { return _logo; }

            set { SetProperty(ref _logo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("primaryColor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PrimaryColor
        {
            get { return _primaryColor; }

            set { SetProperty(ref _primaryColor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("secondaryColor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SecondaryColor
        {
            get { return _secondaryColor; }

            set { SetProperty(ref _secondaryColor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsCapital : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.IDictionary<string, string> _payoutDestination;
        private System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> _payoutDestinationSelector;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payoutDestination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> PayoutDestination
        {
            get { return _payoutDestination; }

            set { SetProperty(ref _payoutDestination, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payoutDestinationSelector")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> PayoutDestinationSelector
        {
            get { return _payoutDestinationSelector; }

            set { SetProperty(ref _payoutDestinationSelector, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsCardIssuing : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountSettingsCardIssuingTosAcceptance _tosAcceptance;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tosAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsCardIssuingTosAcceptance TosAcceptance
        {
            get { return _tosAcceptance; }

            set { SetProperty(ref _tosAcceptance, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsCardIssuingTosAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _date;
        private string _ip;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Ip
        {
            get { return _ip; }

            set { SetProperty(ref _ip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsCardPayments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountSettingsDeclineOn _declineOn;
        private string _statementDescriptorPrefix;
        private string _statementDescriptorPrefixKana;
        private string _statementDescriptorPrefixKanji;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("declineOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsDeclineOn DeclineOn
        {
            get { return _declineOn; }

            set { SetProperty(ref _declineOn, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorPrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorPrefix
        {
            get { return _statementDescriptorPrefix; }

            set { SetProperty(ref _statementDescriptorPrefix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorPrefixKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorPrefixKana
        {
            get { return _statementDescriptorPrefixKana; }

            set { SetProperty(ref _statementDescriptorPrefixKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorPrefixKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorPrefixKanji
        {
            get { return _statementDescriptorPrefixKanji; }

            set { SetProperty(ref _statementDescriptorPrefixKanji, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsDashboard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _displayName;
        private string _timezone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timezone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Timezone
        {
            get { return _timezone; }

            set { SetProperty(ref _timezone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsDeclineOn : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _avsFailure;
        private bool _cvcFailure;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("avsFailure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AvsFailure
        {
            get { return _avsFailure; }

            set { SetProperty(ref _avsFailure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cvcFailure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool CvcFailure
        {
            get { return _cvcFailure; }

            set { SetProperty(ref _cvcFailure, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsInvoices : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _defaultAccountTaxIdIds;
        private System.Collections.Generic.ICollection<TaxId> _defaultAccountTaxIds;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultAccountTaxIdIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DefaultAccountTaxIdIds
        {
            get { return _defaultAccountTaxIdIds; }

            set { SetProperty(ref _defaultAccountTaxIdIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultAccountTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> DefaultAccountTaxIds
        {
            get { return _defaultAccountTaxIds; }

            set { SetProperty(ref _defaultAccountTaxIds, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsPayments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _statementDescriptor;
        private string _statementDescriptorKana;
        private string _statementDescriptorKanji;
        private string _statementDescriptorPrefixKana;
        private string _statementDescriptorPrefixKanji;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorKana
        {
            get { return _statementDescriptorKana; }

            set { SetProperty(ref _statementDescriptorKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorKanji
        {
            get { return _statementDescriptorKanji; }

            set { SetProperty(ref _statementDescriptorKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorPrefixKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorPrefixKana
        {
            get { return _statementDescriptorPrefixKana; }

            set { SetProperty(ref _statementDescriptorPrefixKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorPrefixKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorPrefixKanji
        {
            get { return _statementDescriptorPrefixKanji; }

            set { SetProperty(ref _statementDescriptorPrefixKanji, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsPayouts : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _debitNegativeBalances;
        private AccountSettingsPayoutsSchedule _schedule;
        private string _statementDescriptor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("debitNegativeBalances")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool DebitNegativeBalances
        {
            get { return _debitNegativeBalances; }

            set { SetProperty(ref _debitNegativeBalances, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("schedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsPayoutsSchedule Schedule
        {
            get { return _schedule; }

            set { SetProperty(ref _schedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsPayoutsSchedule : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _delayDays;
        private string _interval;
        private long _monthlyAnchor;
        private string _weeklyAnchor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("delayDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long DelayDays
        {
            get { return _delayDays; }

            set { SetProperty(ref _delayDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("monthlyAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long MonthlyAnchor
        {
            get { return _monthlyAnchor; }

            set { SetProperty(ref _monthlyAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("weeklyAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string WeeklyAnchor
        {
            get { return _weeklyAnchor; }

            set { SetProperty(ref _weeklyAnchor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsSepaDebitPayments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _creditorId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditorId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CreditorId
        {
            get { return _creditorId; }

            set { SetProperty(ref _creditorId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsTaxForms : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _consentedToPaperlessDelivery;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("consentedToPaperlessDelivery")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ConsentedToPaperlessDelivery
        {
            get { return _consentedToPaperlessDelivery; }

            set { SetProperty(ref _consentedToPaperlessDelivery, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsTreasury : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private AccountSettingsTreasuryTosAcceptance _tosAcceptance;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tosAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AccountSettingsTreasuryTosAcceptance TosAcceptance
        {
            get { return _tosAcceptance; }

            set { SetProperty(ref _tosAcceptance, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountSettingsTreasuryTosAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _date;
        private string _ip;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Ip
        {
            get { return _ip; }

            set { SetProperty(ref _ip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AccountTosAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _date;
        private string _ip;
        private string _serviceAgreement;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Ip
        {
            get { return _ip; }

            set { SetProperty(ref _ip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceAgreement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ServiceAgreement
        {
            get { return _serviceAgreement; }

            set { SetProperty(ref _serviceAgreement, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Address : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AddressJapan : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;
        private string _town;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("town")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Town
        {
            get { return _town; }

            set { SetProperty(ref _town, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdvertisementCreate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, string> _title = new System.Collections.Generic.Dictionary<string, string>();
        private System.Collections.Generic.IDictionary<string, string> _description;
        private string _image;
        private bool _active;
        private string _url;
        private System.Collections.Generic.ICollection<AdvertisementTabCreate> _advertisementTabs;

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("advertisementTabs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AdvertisementTabCreate> AdvertisementTabs
        {
            get { return _advertisementTabs; }

            set { SetProperty(ref _advertisementTabs, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdvertisementTabCreate : Prism.Mvvm.BindableBase
    {
        private string _advertisementId;
        private System.Collections.Generic.IDictionary<string, string> _title;
        private System.Collections.Generic.IDictionary<string, string> _description;
        private string _imageAlt;

        [System.Text.Json.Serialization.JsonPropertyName("advertisementId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AdvertisementId
        {
            get { return _advertisementId; }

            set { SetProperty(ref _advertisementId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageAlt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageAlt
        {
            get { return _imageAlt; }

            set { SetProperty(ref _imageAlt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdvertisementTabView : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _advertisementId;
        private string _title;
        private string _description;
        private string _imageAlt;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("advertisementId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AdvertisementId
        {
            get { return _advertisementId; }

            set { SetProperty(ref _advertisementId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageAlt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageAlt
        {
            get { return _imageAlt; }

            set { SetProperty(ref _imageAlt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AdvertisementView : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _title;
        private string _description;
        private string _image;
        private bool _active;
        private string _url;
        private System.Collections.Generic.ICollection<AdvertisementTabView> _advertisementTabs;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("advertisementTabs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<AdvertisementTabView> AdvertisementTabs
        {
            get { return _advertisementTabs; }

            set { SetProperty(ref _advertisementTabs, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Application : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool? _deleted;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApplicationFee : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _accountId;
        private Account _account;
        private long _amount;
        private long _amountRefunded;
        private string _applicationId;
        private Application _application;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private string _chargeId;
        private Charge _charge;
        private System.DateTimeOffset _created;
        private string _currency;
        private ApplicationFeeFeeSource _feeSource;
        private bool _livemode;
        private string _originatingTransactionId;
        private Charge _originatingTransaction;
        private bool _refunded;
        private System.Collections.Generic.ICollection<ApplicationFeeRefund> _refunds;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRefunded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountRefunded
        {
            get { return _amountRefunded; }

            set { SetProperty(ref _amountRefunded, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("feeSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ApplicationFeeFeeSource FeeSource
        {
            get { return _feeSource; }

            set { SetProperty(ref _feeSource, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originatingTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OriginatingTransactionId
        {
            get { return _originatingTransactionId; }

            set { SetProperty(ref _originatingTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originatingTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge OriginatingTransaction
        {
            get { return _originatingTransaction; }

            set { SetProperty(ref _originatingTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("refunded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Refunded
        {
            get { return _refunded; }

            set { SetProperty(ref _refunded, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("refunds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<ApplicationFeeRefund> Refunds
        {
            get { return _refunds; }

            set { SetProperty(ref _refunds, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApplicationFeeFeeSource : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _charge;
        private string _payout;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Payout
        {
            get { return _payout; }

            set { SetProperty(ref _payout, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApplicationFeeRefund : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _feeId;
        private ApplicationFee _fee;
        private System.Collections.Generic.IDictionary<string, string> _metadata;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("feeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FeeId
        {
            get { return _feeId; }

            set { SetProperty(ref _feeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ApplicationFee Fee
        {
            get { return _fee; }

            set { SetProperty(ref _fee, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ArrayResponse : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.ICollection<string> _value;

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssignModelAi : Prism.Mvvm.BindableBase
    {
        private string _modelAiId;

        [System.Text.Json.Serialization.JsonPropertyName("modelAiId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ModelAiId
        {
            get { return _modelAiId; }

            set { SetProperty(ref _modelAiId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AssignService : Prism.Mvvm.BindableBase
    {
        private string _serviceId;

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthorizationSessionCoreResponse : Prism.Mvvm.BindableBase
    {
        private string _token;
        private string _spaceId;

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("spaceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SpaceId
        {
            get { return _spaceId; }

            set { SetProperty(ref _spaceId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AuthorizationSessionWebResponse : Prism.Mvvm.BindableBase
    {
        private string _sessionToken;
        private string _urlCore;

        [System.Text.Json.Serialization.JsonPropertyName("sessionToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SessionToken
        {
            get { return _sessionToken; }

            set { SetProperty(ref _sessionToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("urlCore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UrlCore
        {
            get { return _urlCore; }

            set { SetProperty(ref _urlCore, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BalanceTransaction : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private System.DateTimeOffset _availableOn;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _description;
        private double? _exchangeRate;
        private long _fee;
        private System.Collections.Generic.ICollection<BalanceTransactionFeeDetail> _feeDetails;
        private long _net;
        private string _reportingCategory;
        private string _sourceId;
        private IBalanceTransactionSource _source;
        private string _status;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("availableOn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset AvailableOn
        {
            get { return _availableOn; }

            set { SetProperty(ref _availableOn, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("exchangeRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? ExchangeRate
        {
            get { return _exchangeRate; }

            set { SetProperty(ref _exchangeRate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Fee
        {
            get { return _fee; }

            set { SetProperty(ref _fee, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("feeDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<BalanceTransactionFeeDetail> FeeDetails
        {
            get { return _feeDetails; }

            set { SetProperty(ref _feeDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("net")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Net
        {
            get { return _net; }

            set { SetProperty(ref _net, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reportingCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReportingCategory
        {
            get { return _reportingCategory; }

            set { SetProperty(ref _reportingCategory, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceId
        {
            get { return _sourceId; }

            set { SetProperty(ref _sourceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IBalanceTransactionSource Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BalanceTransactionFeeDetail : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _application;
        private string _currency;
        private string _description;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class BillingInformationRequest : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _email;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CashBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _object;
        private System.Collections.Generic.IDictionary<string, long> _available;
        private string _customer;
        private bool _livemode;
        private CashBalanceSettings _settings;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, long> Available
        {
            get { return _available; }

            set { SetProperty(ref _available, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("settings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CashBalanceSettings Settings
        {
            get { return _settings; }

            set { SetProperty(ref _settings, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CashBalanceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reconciliationMode;
        private bool _usingMerchantDefault;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reconciliationMode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReconciliationMode
        {
            get { return _reconciliationMode; }

            set { SetProperty(ref _reconciliationMode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usingMerchantDefault")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool UsingMerchantDefault
        {
            get { return _usingMerchantDefault; }

            set { SetProperty(ref _usingMerchantDefault, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CategoryCreate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, string> _name;
        private System.Collections.Generic.IDictionary<string, string> _description;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Charge : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private long _amountCaptured;
        private long _amountRefunded;
        private string _applicationId;
        private Application _application;
        private string _applicationFeeId;
        private ApplicationFee _applicationFee;
        private long? _applicationFeeAmount;
        private string _authorizationCode;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private ChargeBillingDetails _billingDetails;
        private string _calculatedStatementDescriptor;
        private bool _captured;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _customerId;
        private Customer _customer;
        private string _description;
        private bool _disputed;
        private string _failureBalanceTransactionId;
        private BalanceTransaction _failureBalanceTransaction;
        private string _failureCode;
        private string _failureMessage;
        private ChargeFraudDetails _fraudDetails;
        private string _invoiceId;
        private Invoice _invoice;
        private ChargeLevel3 _level3;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private ChargeOutcome _outcome;
        private bool _paid;
        private string _paymentIntentId;
        private PaymentIntent _paymentIntent;
        private string _paymentMethod;
        private ChargePaymentMethodDetails _paymentMethodDetails;
        private ChargeRadarOptions _radarOptions;
        private string _receiptEmail;
        private string _receiptNumber;
        private string _receiptUrl;
        private bool _refunded;
        private System.Collections.Generic.ICollection<Refund> _refunds;
        private string _reviewId;
        private Review _review;
        private Shipping _shipping;
        private IPaymentSource _source;
        private string _sourceTransferId;
        private Transfer _sourceTransfer;
        private string _statementDescriptor;
        private string _statementDescriptorSuffix;
        private string _status;
        private string _transferId;
        private Transfer _transfer;
        private ChargeTransferData _transferData;
        private string _transferGroup;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountCaptured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountCaptured
        {
            get { return _amountCaptured; }

            set { SetProperty(ref _amountCaptured, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRefunded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountRefunded
        {
            get { return _amountRefunded; }

            set { SetProperty(ref _amountRefunded, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationFeeId
        {
            get { return _applicationFeeId; }

            set { SetProperty(ref _applicationFeeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ApplicationFee ApplicationFee
        {
            get { return _applicationFee; }

            set { SetProperty(ref _applicationFee, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ApplicationFeeAmount
        {
            get { return _applicationFeeAmount; }

            set { SetProperty(ref _applicationFeeAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationCode
        {
            get { return _authorizationCode; }

            set { SetProperty(ref _authorizationCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeBillingDetails BillingDetails
        {
            get { return _billingDetails; }

            set { SetProperty(ref _billingDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("calculatedStatementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CalculatedStatementDescriptor
        {
            get { return _calculatedStatementDescriptor; }

            set { SetProperty(ref _calculatedStatementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captured")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Captured
        {
            get { return _captured; }

            set { SetProperty(ref _captured, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("disputed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Disputed
        {
            get { return _disputed; }

            set { SetProperty(ref _disputed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureBalanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureBalanceTransactionId
        {
            get { return _failureBalanceTransactionId; }

            set { SetProperty(ref _failureBalanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureBalanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction FailureBalanceTransaction
        {
            get { return _failureBalanceTransaction; }

            set { SetProperty(ref _failureBalanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureCode
        {
            get { return _failureCode; }

            set { SetProperty(ref _failureCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureMessage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureMessage
        {
            get { return _failureMessage; }

            set { SetProperty(ref _failureMessage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fraudDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeFraudDetails FraudDetails
        {
            get { return _fraudDetails; }

            set { SetProperty(ref _fraudDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("level3")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeLevel3 Level3
        {
            get { return _level3; }

            set { SetProperty(ref _level3, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outcome")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeOutcome Outcome
        {
            get { return _outcome; }

            set { SetProperty(ref _outcome, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Paid
        {
            get { return _paid; }

            set { SetProperty(ref _paid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentIntentId
        {
            get { return _paymentIntentId; }

            set { SetProperty(ref _paymentIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetails PaymentMethodDetails
        {
            get { return _paymentMethodDetails; }

            set { SetProperty(ref _paymentMethodDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("radarOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeRadarOptions RadarOptions
        {
            get { return _radarOptions; }

            set { SetProperty(ref _radarOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptEmail
        {
            get { return _receiptEmail; }

            set { SetProperty(ref _receiptEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptNumber
        {
            get { return _receiptNumber; }

            set { SetProperty(ref _receiptNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptUrl
        {
            get { return _receiptUrl; }

            set { SetProperty(ref _receiptUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("refunded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Refunded
        {
            get { return _refunded; }

            set { SetProperty(ref _refunded, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("refunds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Refund> Refunds
        {
            get { return _refunds; }

            set { SetProperty(ref _refunds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reviewId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReviewId
        {
            get { return _reviewId; }

            set { SetProperty(ref _reviewId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("review")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Review Review
        {
            get { return _review; }

            set { SetProperty(ref _review, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Shipping Shipping
        {
            get { return _shipping; }

            set { SetProperty(ref _shipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransferId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceTransferId
        {
            get { return _sourceTransferId; }

            set { SetProperty(ref _sourceTransferId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Transfer SourceTransfer
        {
            get { return _sourceTransfer; }

            set { SetProperty(ref _sourceTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorSuffix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorSuffix
        {
            get { return _statementDescriptorSuffix; }

            set { SetProperty(ref _statementDescriptorSuffix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferId
        {
            get { return _transferId; }

            set { SetProperty(ref _transferId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Transfer Transfer
        {
            get { return _transfer; }

            set { SetProperty(ref _transfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargeTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferGroup")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferGroup
        {
            get { return _transferGroup; }

            set { SetProperty(ref _transferGroup, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeBillingDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _address;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeFraudDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _stripeReport;
        private string _userReport;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeReport")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StripeReport
        {
            get { return _stripeReport; }

            set { SetProperty(ref _stripeReport, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userReport")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserReport
        {
            get { return _userReport; }

            set { SetProperty(ref _userReport, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeLevel3 : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _customerReference;
        private System.Collections.Generic.ICollection<ChargeLevel3LineItem> _lineItems;
        private string _merchantReference;
        private string _shippingAddressZip;
        private long _shippingAmount;
        private string _shippingFromZip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerReference
        {
            get { return _customerReference; }

            set { SetProperty(ref _customerReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<ChargeLevel3LineItem> LineItems
        {
            get { return _lineItems; }

            set { SetProperty(ref _lineItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("merchantReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MerchantReference
        {
            get { return _merchantReference; }

            set { SetProperty(ref _merchantReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAddressZip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ShippingAddressZip
        {
            get { return _shippingAddressZip; }

            set { SetProperty(ref _shippingAddressZip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ShippingAmount
        {
            get { return _shippingAmount; }

            set { SetProperty(ref _shippingAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingFromZip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ShippingFromZip
        {
            get { return _shippingFromZip; }

            set { SetProperty(ref _shippingFromZip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeLevel3LineItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _discountAmount;
        private string _productCode;
        private string _productDescription;
        private long? _quantity;
        private long? _taxAmount;
        private long? _unitCost;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DiscountAmount
        {
            get { return _discountAmount; }

            set { SetProperty(ref _discountAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductCode
        {
            get { return _productCode; }

            set { SetProperty(ref _productCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductDescription
        {
            get { return _productDescription; }

            set { SetProperty(ref _productDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxAmount
        {
            get { return _taxAmount; }

            set { SetProperty(ref _taxAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitCost")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitCost
        {
            get { return _unitCost; }

            set { SetProperty(ref _unitCost, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeOutcome : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _networkAdviceCode;
        private string _networkDeclineCode;
        private string _networkStatus;
        private string _reason;
        private string _riskLevel;
        private long _riskScore;
        private string _ruleId;
        private Rule _rule;
        private string _sellerMessage;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkAdviceCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkAdviceCode
        {
            get { return _networkAdviceCode; }

            set { SetProperty(ref _networkAdviceCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkDeclineCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkDeclineCode
        {
            get { return _networkDeclineCode; }

            set { SetProperty(ref _networkDeclineCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkStatus
        {
            get { return _networkStatus; }

            set { SetProperty(ref _networkStatus, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("riskLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RiskLevel
        {
            get { return _riskLevel; }

            set { SetProperty(ref _riskLevel, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("riskScore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long RiskScore
        {
            get { return _riskScore; }

            set { SetProperty(ref _riskScore, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ruleId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RuleId
        {
            get { return _ruleId; }

            set { SetProperty(ref _ruleId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Rule Rule
        {
            get { return _rule; }

            set { SetProperty(ref _rule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sellerMessage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SellerMessage
        {
            get { return _sellerMessage; }

            set { SetProperty(ref _sellerMessage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsAchCreditTransfer _achCreditTransfer;
        private ChargePaymentMethodDetailsAchDebit _achDebit;
        private ChargePaymentMethodDetailsAcssDebit _acssDebit;
        private ChargePaymentMethodDetailsAffirm _affirm;
        private ChargePaymentMethodDetailsAfterpayClearpay _afterpayClearpay;
        private ChargePaymentMethodDetailsAlipay _alipay;
        private ChargePaymentMethodDetailsAlma _alma;
        private ChargePaymentMethodDetailsAmazonPay _amazonPay;
        private ChargePaymentMethodDetailsAuBecsDebit _auBecsDebit;
        private ChargePaymentMethodDetailsBacsDebit _bacsDebit;
        private ChargePaymentMethodDetailsBancontact _bancontact;
        private ChargePaymentMethodDetailsBlik _blik;
        private ChargePaymentMethodDetailsBoleto _boleto;
        private ChargePaymentMethodDetailsCard _card;
        private ChargePaymentMethodDetailsCardPresent _cardPresent;
        private ChargePaymentMethodDetailsCashapp _cashapp;
        private ChargePaymentMethodDetailsCustomerBalance _customerBalance;
        private ChargePaymentMethodDetailsEps _eps;
        private ChargePaymentMethodDetailsFpx _fpx;
        private ChargePaymentMethodDetailsGiropay _giropay;
        private ChargePaymentMethodDetailsGopay _gopay;
        private ChargePaymentMethodDetailsGrabpay _grabpay;
        private ChargePaymentMethodDetailsIdBankTransfer _idBankTransfer;
        private ChargePaymentMethodDetailsIdeal _ideal;
        private ChargePaymentMethodDetailsInteracPresent _interacPresent;
        private ChargePaymentMethodDetailsKakaoPay _kakaoPay;
        private ChargePaymentMethodDetailsKlarna _klarna;
        private ChargePaymentMethodDetailsKonbini _konbini;
        private ChargePaymentMethodDetailsKrCard _krCard;
        private ChargePaymentMethodDetailsLink _link;
        private ChargePaymentMethodDetailsMbWay _mbWay;
        private ChargePaymentMethodDetailsMobilepay _mobilepay;
        private ChargePaymentMethodDetailsMultibanco _multibanco;
        private ChargePaymentMethodDetailsNaverPay _naverPay;
        private ChargePaymentMethodDetailsOxxo _oxxo;
        private ChargePaymentMethodDetailsP24 _p24;
        private ChargePaymentMethodDetailsPayco _payco;
        private ChargePaymentMethodDetailsPaynow _paynow;
        private ChargePaymentMethodDetailsPaypal _paypal;
        private ChargePaymentMethodDetailsPayto _payto;
        private ChargePaymentMethodDetailsPix _pix;
        private ChargePaymentMethodDetailsPromptpay _promptpay;
        private ChargePaymentMethodDetailsQris _qris;
        private ChargePaymentMethodDetailsRechnung _rechnung;
        private ChargePaymentMethodDetailsRevolutPay _revolutPay;
        private ChargePaymentMethodDetailsSamsungPay _samsungPay;
        private ChargePaymentMethodDetailsSepaDebit _sepaDebit;
        private ChargePaymentMethodDetailsShopeepay _shopeepay;
        private ChargePaymentMethodDetailsSofort _sofort;
        private ChargePaymentMethodDetailsStripeAccount _stripeAccount;
        private ChargePaymentMethodDetailsSwish _swish;
        private ChargePaymentMethodDetailsTwint _twint;
        private string _type;
        private ChargePaymentMethodDetailsUsBankAccount _usBankAccount;
        private ChargePaymentMethodDetailsWechat _wechat;
        private ChargePaymentMethodDetailsWechatPay _wechatPay;
        private ChargePaymentMethodDetailsZip _zip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("achCreditTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAchCreditTransfer AchCreditTransfer
        {
            get { return _achCreditTransfer; }

            set { SetProperty(ref _achCreditTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("achDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAchDebit AchDebit
        {
            get { return _achDebit; }

            set { SetProperty(ref _achDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affirm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAffirm Affirm
        {
            get { return _affirm; }

            set { SetProperty(ref _affirm, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("afterpayClearpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAfterpayClearpay AfterpayClearpay
        {
            get { return _afterpayClearpay; }

            set { SetProperty(ref _afterpayClearpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alipay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAlipay Alipay
        {
            get { return _alipay; }

            set { SetProperty(ref _alipay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alma")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAlma Alma
        {
            get { return _alma; }

            set { SetProperty(ref _alma, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAuBecsDebit AuBecsDebit
        {
            get { return _auBecsDebit; }

            set { SetProperty(ref _auBecsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blik")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsBlik Blik
        {
            get { return _blik; }

            set { SetProperty(ref _blik, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boleto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsBoleto Boleto
        {
            get { return _boleto; }

            set { SetProperty(ref _boleto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCustomerBalance CustomerBalance
        {
            get { return _customerBalance; }

            set { SetProperty(ref _customerBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eps")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsEps Eps
        {
            get { return _eps; }

            set { SetProperty(ref _eps, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fpx")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsFpx Fpx
        {
            get { return _fpx; }

            set { SetProperty(ref _fpx, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giropay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsGiropay Giropay
        {
            get { return _giropay; }

            set { SetProperty(ref _giropay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gopay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsGopay Gopay
        {
            get { return _gopay; }

            set { SetProperty(ref _gopay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("grabpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsGrabpay Grabpay
        {
            get { return _grabpay; }

            set { SetProperty(ref _grabpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ideal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsIdeal Ideal
        {
            get { return _ideal; }

            set { SetProperty(ref _ideal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interacPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsInteracPresent InteracPresent
        {
            get { return _interacPresent; }

            set { SetProperty(ref _interacPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKakaoPay KakaoPay
        {
            get { return _kakaoPay; }

            set { SetProperty(ref _kakaoPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarna")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKlarna Klarna
        {
            get { return _klarna; }

            set { SetProperty(ref _klarna, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbini")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKonbini Konbini
        {
            get { return _konbini; }

            set { SetProperty(ref _konbini, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKrCard KrCard
        {
            get { return _krCard; }

            set { SetProperty(ref _krCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mbWay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsMbWay MbWay
        {
            get { return _mbWay; }

            set { SetProperty(ref _mbWay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobilepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsMobilepay Mobilepay
        {
            get { return _mobilepay; }

            set { SetProperty(ref _mobilepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibanco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsMultibanco Multibanco
        {
            get { return _multibanco; }

            set { SetProperty(ref _multibanco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("naverPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsNaverPay NaverPay
        {
            get { return _naverPay; }

            set { SetProperty(ref _naverPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oxxo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsOxxo Oxxo
        {
            get { return _oxxo; }

            set { SetProperty(ref _oxxo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("p24")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsP24 P24
        {
            get { return _p24; }

            set { SetProperty(ref _p24, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPayco Payco
        {
            get { return _payco; }

            set { SetProperty(ref _payco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPaynow Paynow
        {
            get { return _paynow; }

            set { SetProperty(ref _paynow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPix Pix
        {
            get { return _pix; }

            set { SetProperty(ref _pix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promptpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPromptpay Promptpay
        {
            get { return _promptpay; }

            set { SetProperty(ref _promptpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qris")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsQris Qris
        {
            get { return _qris; }

            set { SetProperty(ref _qris, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rechnung")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsRechnung Rechnung
        {
            get { return _rechnung; }

            set { SetProperty(ref _rechnung, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsRevolutPay RevolutPay
        {
            get { return _revolutPay; }

            set { SetProperty(ref _revolutPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsSamsungPay SamsungPay
        {
            get { return _samsungPay; }

            set { SetProperty(ref _samsungPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shopeepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsShopeepay Shopeepay
        {
            get { return _shopeepay; }

            set { SetProperty(ref _shopeepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofort")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsSofort Sofort
        {
            get { return _sofort; }

            set { SetProperty(ref _sofort, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsStripeAccount StripeAccount
        {
            get { return _stripeAccount; }

            set { SetProperty(ref _stripeAccount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swish")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsSwish Swish
        {
            get { return _swish; }

            set { SetProperty(ref _swish, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsTwint Twint
        {
            get { return _twint; }

            set { SetProperty(ref _twint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechat")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsWechat Wechat
        {
            get { return _wechat; }

            set { SetProperty(ref _wechat, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsWechatPay WechatPay
        {
            get { return _wechatPay; }

            set { SetProperty(ref _wechatPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsZip Zip
        {
            get { return _zip; }

            set { SetProperty(ref _zip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAchCreditTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountNumber;
        private string _bankName;
        private string _routingNumber;
        private string _swiftCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RoutingNumber
        {
            get { return _routingNumber; }

            set { SetProperty(ref _routingNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swiftCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SwiftCode
        {
            get { return _swiftCode; }

            set { SetProperty(ref _swiftCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAchDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderType;
        private string _bankName;
        private string _country;
        private string _fingerprint;
        private string _last4;
        private string _routingNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderType
        {
            get { return _accountHolderType; }

            set { SetProperty(ref _accountHolderType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RoutingNumber
        {
            get { return _routingNumber; }

            set { SetProperty(ref _routingNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankName;
        private string _fingerprint;
        private string _institutionNumber;
        private string _last4;
        private string _mandate;
        private string _transitNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institutionNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InstitutionNumber
        {
            get { return _institutionNumber; }

            set { SetProperty(ref _institutionNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transitNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransitNumber
        {
            get { return _transitNumber; }

            set { SetProperty(ref _transitNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAffirm : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _transactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAfterpayClearpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _orderId;
        private string _reference;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("orderId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OrderId
        {
            get { return _orderId; }

            set { SetProperty(ref _orderId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAlipay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;
        private string _fingerprint;
        private string _transactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAlma : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsAmazonPayFunding _funding;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAmazonPayFunding Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAmazonPayFunding : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsAmazonPayFundingCard _card;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsAmazonPayFundingCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAmazonPayFundingCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _country;
        private long? _expMonth;
        private long? _expYear;
        private string _funding;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsAuBecsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bsbNumber;
        private string _fingerprint;
        private string _last4;
        private string _mandate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bsbNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BsbNumber
        {
            get { return _bsbNumber; }

            set { SetProperty(ref _bsbNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _fingerprint;
        private string _last4;
        private string _mandate;
        private string _sortCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SortCode
        {
            get { return _sortCode; }

            set { SetProperty(ref _sortCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _bankName;
        private string _bic;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _preferredLanguage;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsBlik : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsBoleto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _taxId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxId
        {
            get { return _taxId; }

            set { SetProperty(ref _taxId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountAuthorized;
        private long? _amountRequested;
        private string _authorizationCode;
        private string _brand;
        private System.DateTimeOffset _captureBefore;
        private ChargePaymentMethodDetailsCardChecks _checks;
        private string _country;
        private ChargePaymentMethodDetailsCardDecrementalAuthorization _decrementalAuthorization;
        private string _description;
        private long _expMonth;
        private long _expYear;
        private ChargePaymentMethodDetailsCardExtendedAuthorization _extendedAuthorization;
        private string _fingerprint;
        private string _funding;
        private string _iin;
        private ChargePaymentMethodDetailsCardIncrementalAuthorization _incrementalAuthorization;
        private ChargePaymentMethodDetailsCardInstallments _installments;
        private string _issuer;
        private string _last4;
        private string _mandate;
        private bool? _moto;
        private ChargePaymentMethodDetailsCardMulticapture _multicapture;
        private string _network;
        private ChargePaymentMethodDetailsCardNetworkToken _networkToken;
        private ChargePaymentMethodDetailsCardOvercapture _overcapture;
        private ChargePaymentMethodDetailsCardPartialAuthorization _partialAuthorization;
        private ChargePaymentMethodDetailsCardThreeDSecure _threeDSecure;
        private ChargePaymentMethodDetailsCardWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountAuthorized")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountAuthorized
        {
            get { return _amountAuthorized; }

            set { SetProperty(ref _amountAuthorized, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountRequested
        {
            get { return _amountRequested; }

            set { SetProperty(ref _amountRequested, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationCode
        {
            get { return _authorizationCode; }

            set { SetProperty(ref _authorizationCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureBefore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CaptureBefore
        {
            get { return _captureBefore; }

            set { SetProperty(ref _captureBefore, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("checks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardChecks Checks
        {
            get { return _checks; }

            set { SetProperty(ref _checks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("decrementalAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardDecrementalAuthorization DecrementalAuthorization
        {
            get { return _decrementalAuthorization; }

            set { SetProperty(ref _decrementalAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("extendedAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardExtendedAuthorization ExtendedAuthorization
        {
            get { return _extendedAuthorization; }

            set { SetProperty(ref _extendedAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("incrementalAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardIncrementalAuthorization IncrementalAuthorization
        {
            get { return _incrementalAuthorization; }

            set { SetProperty(ref _incrementalAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("installments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardInstallments Installments
        {
            get { return _installments; }

            set { SetProperty(ref _installments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("moto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Moto
        {
            get { return _moto; }

            set { SetProperty(ref _moto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multicapture")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardMulticapture Multicapture
        {
            get { return _multicapture; }

            set { SetProperty(ref _multicapture, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardNetworkToken NetworkToken
        {
            get { return _networkToken; }

            set { SetProperty(ref _networkToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("overcapture")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardOvercapture Overcapture
        {
            get { return _overcapture; }

            set { SetProperty(ref _overcapture, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("partialAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardPartialAuthorization PartialAuthorization
        {
            get { return _partialAuthorization; }

            set { SetProperty(ref _partialAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("threeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardThreeDSecure ThreeDSecure
        {
            get { return _threeDSecure; }

            set { SetProperty(ref _threeDSecure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardChecks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _addressLine1Check;
        private string _addressPostalCodeCheck;
        private string _cvcCheck;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressLine1Check")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressLine1Check
        {
            get { return _addressLine1Check; }

            set { SetProperty(ref _addressLine1Check, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressPostalCodeCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressPostalCodeCheck
        {
            get { return _addressPostalCodeCheck; }

            set { SetProperty(ref _addressPostalCodeCheck, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cvcCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CvcCheck
        {
            get { return _cvcCheck; }

            set { SetProperty(ref _cvcCheck, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardDecrementalAuthorization : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardExtendedAuthorization : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardIncrementalAuthorization : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardInstallments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsCardInstallmentsPlan _plan;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardInstallmentsPlan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardMulticapture : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardNetworkToken : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _used;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("used")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Used
        {
            get { return _used; }

            set { SetProperty(ref _used, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardOvercapture : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _maximumAmountCapturable;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maximumAmountCapturable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long MaximumAmountCapturable
        {
            get { return _maximumAmountCapturable; }

            set { SetProperty(ref _maximumAmountCapturable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardPartialAuthorization : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountAuthorized;
        private string _brand;
        private string _brandProduct;
        private System.DateTimeOffset _captureBefore;
        private string _cardholderName;
        private string _country;
        private string _description;
        private string _emvAuthData;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _generatedCard;
        private string _iin;
        private bool _incrementalAuthorizationSupported;
        private string _issuer;
        private string _last4;
        private string _network;
        private string _networkTransactionId;
        private ChargePaymentMethodDetailsCardPresentOffline _offline;
        private bool _overcaptureSupported;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private string _readMethod;
        private ChargePaymentMethodDetailsCardPresentReceipt _receipt;
        private ChargePaymentMethodDetailsCardPresentWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountAuthorized")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountAuthorized
        {
            get { return _amountAuthorized; }

            set { SetProperty(ref _amountAuthorized, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brandProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BrandProduct
        {
            get { return _brandProduct; }

            set { SetProperty(ref _brandProduct, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureBefore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CaptureBefore
        {
            get { return _captureBefore; }

            set { SetProperty(ref _captureBefore, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderName
        {
            get { return _cardholderName; }

            set { SetProperty(ref _cardholderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emvAuthData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EmvAuthData
        {
            get { return _emvAuthData; }

            set { SetProperty(ref _emvAuthData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedCard
        {
            get { return _generatedCard; }

            set { SetProperty(ref _generatedCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("incrementalAuthorizationSupported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IncrementalAuthorizationSupported
        {
            get { return _incrementalAuthorizationSupported; }

            set { SetProperty(ref _incrementalAuthorizationSupported, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkTransactionId
        {
            get { return _networkTransactionId; }

            set { SetProperty(ref _networkTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("offline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardPresentOffline Offline
        {
            get { return _offline; }

            set { SetProperty(ref _offline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("overcaptureSupported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool OvercaptureSupported
        {
            get { return _overcaptureSupported; }

            set { SetProperty(ref _overcaptureSupported, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("readMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReadMethod
        {
            get { return _readMethod; }

            set { SetProperty(ref _readMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receipt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardPresentReceipt Receipt
        {
            get { return _receipt; }

            set { SetProperty(ref _receipt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardPresentWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardPresentOffline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _storedAt;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("storedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? StoredAt
        {
            get { return _storedAt; }

            set { SetProperty(ref _storedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardPresentReceipt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountType;
        private string _applicationCryptogram;
        private string _applicationPreferredName;
        private string _authorizationCode;
        private string _authorizationResponseCode;
        private string _cardholderVerificationMethod;
        private string _dedicatedFileName;
        private string _terminalVerificationResults;
        private string _transactionStatusInformation;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationCryptogram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationCryptogram
        {
            get { return _applicationCryptogram; }

            set { SetProperty(ref _applicationCryptogram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationPreferredName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationPreferredName
        {
            get { return _applicationPreferredName; }

            set { SetProperty(ref _applicationPreferredName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationCode
        {
            get { return _authorizationCode; }

            set { SetProperty(ref _authorizationCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationResponseCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationResponseCode
        {
            get { return _authorizationResponseCode; }

            set { SetProperty(ref _authorizationResponseCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderVerificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderVerificationMethod
        {
            get { return _cardholderVerificationMethod; }

            set { SetProperty(ref _cardholderVerificationMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dedicatedFileName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DedicatedFileName
        {
            get { return _dedicatedFileName; }

            set { SetProperty(ref _dedicatedFileName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("terminalVerificationResults")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TerminalVerificationResults
        {
            get { return _terminalVerificationResults; }

            set { SetProperty(ref _terminalVerificationResults, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionStatusInformation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionStatusInformation
        {
            get { return _transactionStatusInformation; }

            set { SetProperty(ref _transactionStatusInformation, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardPresentWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardThreeDSecure : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _authenticationFlow;
        private string _electronicCommerceIndicator;
        private string _exemptionIndicator;
        private bool _exemptionIndicatorApplied;
        private string _result;
        private string _resultReason;
        private string _transactionId;
        private string _version;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authenticationFlow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthenticationFlow
        {
            get { return _authenticationFlow; }

            set { SetProperty(ref _authenticationFlow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("electronicCommerceIndicator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ElectronicCommerceIndicator
        {
            get { return _electronicCommerceIndicator; }

            set { SetProperty(ref _electronicCommerceIndicator, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("exemptionIndicator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ExemptionIndicator
        {
            get { return _exemptionIndicator; }

            set { SetProperty(ref _exemptionIndicator, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("exemptionIndicatorApplied")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ExemptionIndicatorApplied
        {
            get { return _exemptionIndicatorApplied; }

            set { SetProperty(ref _exemptionIndicatorApplied, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Result
        {
            get { return _result; }

            set { SetProperty(ref _result, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resultReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ResultReason
        {
            get { return _resultReason; }

            set { SetProperty(ref _resultReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Version
        {
            get { return _version; }

            set { SetProperty(ref _version, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsCardWalletAmexExpressCheckout _amexExpressCheckout;
        private ChargePaymentMethodDetailsCardWalletApplePay _applePay;
        private string _dynamicLast4;
        private ChargePaymentMethodDetailsCardWalletGooglePay _googlePay;
        private ChargePaymentMethodDetailsCardWalletLink _link;
        private ChargePaymentMethodDetailsCardWalletMasterpass _masterpass;
        private ChargePaymentMethodDetailsCardWalletSamsungPay _samsungPay;
        private string _type;
        private ChargePaymentMethodDetailsCardWalletVisaCheckout _visaCheckout;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amexExpressCheckout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletAmexExpressCheckout AmexExpressCheckout
        {
            get { return _amexExpressCheckout; }

            set { SetProperty(ref _amexExpressCheckout, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletApplePay ApplePay
        {
            get { return _applePay; }

            set { SetProperty(ref _applePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dynamicLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DynamicLast4
        {
            get { return _dynamicLast4; }

            set { SetProperty(ref _dynamicLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("googlePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletGooglePay GooglePay
        {
            get { return _googlePay; }

            set { SetProperty(ref _googlePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("masterpass")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletMasterpass Masterpass
        {
            get { return _masterpass; }

            set { SetProperty(ref _masterpass, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletSamsungPay SamsungPay
        {
            get { return _samsungPay; }

            set { SetProperty(ref _samsungPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("visaCheckout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsCardWalletVisaCheckout VisaCheckout
        {
            get { return _visaCheckout; }

            set { SetProperty(ref _visaCheckout, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletAmexExpressCheckout : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletApplePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletGooglePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletMasterpass : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _billingAddress;
        private string _email;
        private string _name;
        private Address _shippingAddress;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BillingAddress
        {
            get { return _billingAddress; }

            set { SetProperty(ref _billingAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address ShippingAddress
        {
            get { return _shippingAddress; }

            set { SetProperty(ref _shippingAddress, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletSamsungPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCardWalletVisaCheckout : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _billingAddress;
        private string _email;
        private string _name;
        private Address _shippingAddress;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BillingAddress
        {
            get { return _billingAddress; }

            set { SetProperty(ref _billingAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address ShippingAddress
        {
            get { return _shippingAddress; }

            set { SetProperty(ref _shippingAddress, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;
        private string _cashtag;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashtag")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Cashtag
        {
            get { return _cashtag; }

            set { SetProperty(ref _cashtag, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsCustomerBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsEps : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsFpx : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderType;
        private string _bank;
        private string _transactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderType
        {
            get { return _accountHolderType; }

            set { SetProperty(ref _accountHolderType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsGiropay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _bankName;
        private string _bic;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsGopay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsGrabpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _transactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountNumber;
        private string _bank;
        private string _bankCode;
        private string _bankName;
        private string _displayName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsIdeal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _bic;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsInteracPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _cardholderName;
        private string _country;
        private string _description;
        private string _emvAuthData;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _generatedCard;
        private string _iin;
        private string _issuer;
        private string _last4;
        private string _network;
        private string _networkTransactionId;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private string _readMethod;
        private ChargePaymentMethodDetailsInteracPresentReceipt _receipt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderName
        {
            get { return _cardholderName; }

            set { SetProperty(ref _cardholderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emvAuthData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EmvAuthData
        {
            get { return _emvAuthData; }

            set { SetProperty(ref _emvAuthData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedCard
        {
            get { return _generatedCard; }

            set { SetProperty(ref _generatedCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkTransactionId
        {
            get { return _networkTransactionId; }

            set { SetProperty(ref _networkTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("readMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReadMethod
        {
            get { return _readMethod; }

            set { SetProperty(ref _readMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receipt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsInteracPresentReceipt Receipt
        {
            get { return _receipt; }

            set { SetProperty(ref _receipt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsInteracPresentReceipt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountType;
        private string _applicationCryptogram;
        private string _applicationPreferredName;
        private string _authorizationCode;
        private string _authorizationResponseCode;
        private string _cardholderVerificationMethod;
        private string _dedicatedFileName;
        private string _terminalVerificationResults;
        private string _transactionStatusInformation;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationCryptogram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationCryptogram
        {
            get { return _applicationCryptogram; }

            set { SetProperty(ref _applicationCryptogram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationPreferredName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationPreferredName
        {
            get { return _applicationPreferredName; }

            set { SetProperty(ref _applicationPreferredName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationCode
        {
            get { return _authorizationCode; }

            set { SetProperty(ref _authorizationCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationResponseCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationResponseCode
        {
            get { return _authorizationResponseCode; }

            set { SetProperty(ref _authorizationResponseCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderVerificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderVerificationMethod
        {
            get { return _cardholderVerificationMethod; }

            set { SetProperty(ref _cardholderVerificationMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dedicatedFileName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DedicatedFileName
        {
            get { return _dedicatedFileName; }

            set { SetProperty(ref _dedicatedFileName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("terminalVerificationResults")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TerminalVerificationResults
        {
            get { return _terminalVerificationResults; }

            set { SetProperty(ref _terminalVerificationResults, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionStatusInformation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionStatusInformation
        {
            get { return _transactionStatusInformation; }

            set { SetProperty(ref _transactionStatusInformation, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKakaoPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKlarna : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsKlarnaPayerDetails _payerDetails;
        private string _paymentMethodCategory;
        private string _preferredLocale;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKlarnaPayerDetails PayerDetails
        {
            get { return _payerDetails; }

            set { SetProperty(ref _payerDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodCategory")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodCategory
        {
            get { return _paymentMethodCategory; }

            set { SetProperty(ref _paymentMethodCategory, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLocale
        {
            get { return _preferredLocale; }

            set { SetProperty(ref _preferredLocale, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKlarnaPayerDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsKlarnaPayerDetailsAddress _address;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKlarnaPayerDetailsAddress Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKlarnaPayerDetailsAddress : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKonbini : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsKonbiniStore _store;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("store")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsKonbiniStore Store
        {
            get { return _store; }

            set { SetProperty(ref _store, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKonbiniStore : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _chain;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chain")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Chain
        {
            get { return _chain; }

            set { SetProperty(ref _chain, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsKrCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _buyerId;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsMbWay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsMobilepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsMobilepayCard _card;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsMobilepayCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsMobilepayCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _country;
        private long? _expMonth;
        private long? _expYear;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsMultibanco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _entity;
        private string _reference;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("entity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Entity
        {
            get { return _entity; }

            set { SetProperty(ref _entity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsNaverPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsOxxo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _number;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("number")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Number
        {
            get { return _number; }

            set { SetProperty(ref _number, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsP24 : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _reference;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPayco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPaynow : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _payerEmail;
        private string _payerId;
        private string _payerName;
        private ChargePaymentMethodDetailsPaypalSellerProtection _sellerProtection;
        private Address _shipping;
        private string _transactionId;
        private Address _verifiedAddress;
        private string _verifiedEmail;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerEmail
        {
            get { return _payerEmail; }

            set { SetProperty(ref _payerEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerId
        {
            get { return _payerId; }

            set { SetProperty(ref _payerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerName
        {
            get { return _payerName; }

            set { SetProperty(ref _payerName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sellerProtection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsPaypalSellerProtection SellerProtection
        {
            get { return _sellerProtection; }

            set { SetProperty(ref _sellerProtection, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Shipping
        {
            get { return _shipping; }

            set { SetProperty(ref _shipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address VerifiedAddress
        {
            get { return _verifiedAddress; }

            set { SetProperty(ref _verifiedAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedEmail
        {
            get { return _verifiedEmail; }

            set { SetProperty(ref _verifiedEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPaypalSellerProtection : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _disputeCategories;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("disputeCategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DisputeCategories
        {
            get { return _disputeCategories; }

            set { SetProperty(ref _disputeCategories, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bsbNumber;
        private string _last4;
        private string _mandate;
        private string _payId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bsbNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BsbNumber
        {
            get { return _bsbNumber; }

            set { SetProperty(ref _bsbNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayId
        {
            get { return _payId; }

            set { SetProperty(ref _payId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPix : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankTransactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankTransactionId
        {
            get { return _bankTransactionId; }

            set { SetProperty(ref _bankTransactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsPromptpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsQris : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsRechnung : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsRevolutPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsRevolutPayFunding _funding;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsRevolutPayFunding Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsRevolutPayFunding : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ChargePaymentMethodDetailsRevolutPayFundingCard _card;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ChargePaymentMethodDetailsRevolutPayFundingCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsRevolutPayFundingCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _country;
        private long? _expMonth;
        private long? _expYear;
        private string _funding;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsSamsungPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _branchCode;
        private string _country;
        private string _fingerprint;
        private string _last4;
        private string _mandate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("branchCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BranchCode
        {
            get { return _branchCode; }

            set { SetProperty(ref _branchCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsShopeepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsSofort : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _bankName;
        private string _bic;
        private string _country;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _preferredLanguage;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsStripeAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsSwish : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _fingerprint;
        private string _paymentReference;
        private string _verifiedPhoneLast4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentReference
        {
            get { return _paymentReference; }

            set { SetProperty(ref _paymentReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedPhoneLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedPhoneLast4
        {
            get { return _verifiedPhoneLast4; }

            set { SetProperty(ref _verifiedPhoneLast4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsTwint : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderType;
        private string _accountType;
        private string _bankName;
        private string _fingerprint;
        private string _last4;
        private string _mandateId;
        private Mandate _mandate;
        private string _paymentReference;
        private string _routingNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderType
        {
            get { return _accountHolderType; }

            set { SetProperty(ref _accountHolderType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MandateId
        {
            get { return _mandateId; }

            set { SetProperty(ref _mandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentReference
        {
            get { return _paymentReference; }

            set { SetProperty(ref _paymentReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RoutingNumber
        {
            get { return _routingNumber; }

            set { SetProperty(ref _routingNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsWechat : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsWechatPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _fingerprint;
        private string _transactionId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargePaymentMethodDetailsZip : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeRadarOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _session;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("session")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Session
        {
            get { return _session; }

            set { SetProperty(ref _session, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ChargeTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CheckoutOptions : Prism.Mvvm.BindableBase
    {
        private string _planId;
        private string _successUrl;
        private string _cancelUrl;

        [System.Text.Json.Serialization.JsonPropertyName("planId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string PlanId
        {
            get { return _planId; }

            set { SetProperty(ref _planId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("successUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SuccessUrl
        {
            get { return _successUrl; }

            set { SetProperty(ref _successUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancelUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CancelUrl
        {
            get { return _cancelUrl; }

            set { SetProperty(ref _cancelUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CheckoutResponse : Prism.Mvvm.BindableBase
    {
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ConfirmEmailRequest : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _changedEmail;
        private bool _isChangedEmail;
        private string _code;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("changedEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChangedEmail
        {
            get { return _changedEmail; }

            set { SetProperty(ref _changedEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isChangedEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsChangedEmail
        {
            get { return _isChangedEmail; }

            set { SetProperty(ref _isChangedEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ConnectionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Server")]
        Server = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Local")]
        Local = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Coupon : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long? _amountOff;
        private CouponAppliesTo _appliesTo;
        private System.DateTimeOffset _created;
        private string _currency;
        private System.Collections.Generic.IDictionary<string, CouponCurrencyOptions> _currencyOptions;
        private bool? _deleted;
        private string _duration;
        private long? _durationInMonths;
        private bool _livemode;
        private long? _maxRedemptions;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _name;
        private double? _percentOff;
        private System.DateTimeOffset? _redeemBy;
        private long _timesRedeemed;
        private bool _valid;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountOff")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountOff
        {
            get { return _amountOff; }

            set { SetProperty(ref _amountOff, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("appliesTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CouponAppliesTo AppliesTo
        {
            get { return _appliesTo; }

            set { SetProperty(ref _appliesTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currencyOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, CouponCurrencyOptions> CurrencyOptions
        {
            get { return _currencyOptions; }

            set { SetProperty(ref _currencyOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("duration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Duration
        {
            get { return _duration; }

            set { SetProperty(ref _duration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("durationInMonths")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DurationInMonths
        {
            get { return _durationInMonths; }

            set { SetProperty(ref _durationInMonths, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maxRedemptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? MaxRedemptions
        {
            get { return _maxRedemptions; }

            set { SetProperty(ref _maxRedemptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("percentOff")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? PercentOff
        {
            get { return _percentOff; }

            set { SetProperty(ref _percentOff, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("redeemBy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? RedeemBy
        {
            get { return _redeemBy; }

            set { SetProperty(ref _redeemBy, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timesRedeemed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long TimesRedeemed
        {
            get { return _timesRedeemed; }

            set { SetProperty(ref _timesRedeemed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("valid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Valid
        {
            get { return _valid; }

            set { SetProperty(ref _valid, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CouponAppliesTo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _products;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("products")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Products
        {
            get { return _products; }

            set { SetProperty(ref _products, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CouponCurrencyOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountOff;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountOff")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountOff
        {
            get { return _amountOff; }

            set { SetProperty(ref _amountOff, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAuthorizationForDashboard : Prism.Mvvm.BindableBase
    {
        private string _token;

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAuthorizationForListServices : Prism.Mvvm.BindableBase
    {
        private string _token;
        private System.Collections.Generic.ICollection<string> _servicesIds = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("servicesIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<string> ServicesIds
        {
            get { return _servicesIds; }

            set { SetProperty(ref _servicesIds, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAuthorizationForServices : Prism.Mvvm.BindableBase
    {
        private string _token;
        private string _modelAiId;

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelAiId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelAiId
        {
            get { return _modelAiId; }

            set { SetProperty(ref _modelAiId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAuthorizationWebRequest : Prism.Mvvm.BindableBase
    {
        private string _token;
        private string _serviceId;

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateSpaceRequest : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _description;
        private int _ram;
        private int _cpuCores;
        private float _diskSpace;
        private bool _isGpu;
        private bool _isGlobal;
        private float _bandwidth;
        private string _token;
        private string _subscriptionId;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Ram
        {
            get { return _ram; }

            set { SetProperty(ref _ram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cpuCores")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int CpuCores
        {
            get { return _cpuCores; }

            set { SetProperty(ref _cpuCores, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("diskSpace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float DiskSpace
        {
            get { return _diskSpace; }

            set { SetProperty(ref _diskSpace, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGpu")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGpu
        {
            get { return _isGpu; }

            set { SetProperty(ref _isGpu, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGlobal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGlobal
        {
            get { return _isGlobal; }

            set { SetProperty(ref _isGlobal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bandwidth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float Bandwidth
        {
            get { return _bandwidth; }

            set { SetProperty(ref _bandwidth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransaction : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private System.DateTimeOffset _created;
        private CreditBalanceTransactionCredit _credit;
        private string _creditGrantId;
        private CreditGrant _creditGrant;
        private CreditBalanceTransactionDebit _debit;
        private System.DateTimeOffset _effectiveAt;
        private bool _livemode;
        private string _testClockId;
        private TestClock _testClock;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("credit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionCredit Credit
        {
            get { return _credit; }

            set { SetProperty(ref _credit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditGrantId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CreditGrantId
        {
            get { return _creditGrantId; }

            set { SetProperty(ref _creditGrantId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditGrant")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditGrant CreditGrant
        {
            get { return _creditGrant; }

            set { SetProperty(ref _creditGrant, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("debit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionDebit Debit
        {
            get { return _debit; }

            set { SetProperty(ref _debit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectiveAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EffectiveAt
        {
            get { return _effectiveAt; }

            set { SetProperty(ref _effectiveAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionCredit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditBalanceTransactionCreditAmount _amount;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionCreditAmount Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionCreditAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditBalanceTransactionCreditAmountMonetary _monetary;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("monetary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionCreditAmountMonetary Monetary
        {
            get { return _monetary; }

            set { SetProperty(ref _monetary, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionCreditAmountMonetary : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditBalanceTransactionDebitAmount _amount;
        private CreditBalanceTransactionDebitCreditsApplied _creditsApplied;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionDebitAmount Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditsApplied")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionDebitCreditsApplied CreditsApplied
        {
            get { return _creditsApplied; }

            set { SetProperty(ref _creditsApplied, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionDebitAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditBalanceTransactionDebitAmountMonetary _monetary;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("monetary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransactionDebitAmountMonetary Monetary
        {
            get { return _monetary; }

            set { SetProperty(ref _monetary, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionDebitAmountMonetary : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditBalanceTransactionDebitCreditsApplied : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _invoiceId;
        private Invoice _invoice;
        private string _invoiceLineItem;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceLineItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceLineItem
        {
            get { return _invoiceLineItem; }

            set { SetProperty(ref _invoiceLineItem, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditGrant : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private CreditGrantAmount _amount;
        private CreditGrantApplicabilityConfig _applicabilityConfig;
        private string _category;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private System.DateTimeOffset? _effectiveAt;
        private System.DateTimeOffset? _expiresAt;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _name;
        private string _testClockId;
        private TestClock _testClock;
        private System.DateTimeOffset _updated;
        private System.DateTimeOffset? _voidedAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditGrantAmount Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicabilityConfig")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditGrantApplicabilityConfig ApplicabilityConfig
        {
            get { return _applicabilityConfig; }

            set { SetProperty(ref _applicabilityConfig, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectiveAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EffectiveAt
        {
            get { return _effectiveAt; }

            set { SetProperty(ref _effectiveAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Updated
        {
            get { return _updated; }

            set { SetProperty(ref _updated, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("voidedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? VoidedAt
        {
            get { return _voidedAt; }

            set { SetProperty(ref _voidedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditGrantAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditGrantAmountMonetary _monetary;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("monetary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditGrantAmountMonetary Monetary
        {
            get { return _monetary; }

            set { SetProperty(ref _monetary, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditGrantAmountMonetary : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditGrantApplicabilityConfig : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private CreditGrantApplicabilityConfigScope _scope;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("scope")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditGrantApplicabilityConfigScope Scope
        {
            get { return _scope; }

            set { SetProperty(ref _scope, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreditGrantApplicabilityConfigScope : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _priceType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("priceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PriceType
        {
            get { return _priceType; }

            set { SetProperty(ref _priceType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Customer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private Address _address;
        private long _balance;
        private CashBalance _cashBalance;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _defaultSourceId;
        private IPaymentSource _defaultSource;
        private bool? _deleted;
        private bool? _delinquent;
        private string _description;
        private Discount _discount;
        private string _email;
        private System.Collections.Generic.IDictionary<string, long> _invoiceCreditBalance;
        private string _invoicePrefix;
        private CustomerInvoiceSettings _invoiceSettings;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _name;
        private long _nextInvoiceSequence;
        private string _phone;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private Shipping _shipping;
        private System.Collections.Generic.ICollection<IPaymentSource> _sources;
        private System.Collections.Generic.ICollection<Subscription> _subscriptions;
        private CustomerTax _tax;
        private string _taxExempt;
        private System.Collections.Generic.ICollection<TaxId> _taxIds;
        private string _testClockId;
        private TestClock _testClock;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Balance
        {
            get { return _balance; }

            set { SetProperty(ref _balance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CashBalance CashBalance
        {
            get { return _cashBalance; }

            set { SetProperty(ref _cashBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultSourceId
        {
            get { return _defaultSourceId; }

            set { SetProperty(ref _defaultSourceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource DefaultSource
        {
            get { return _defaultSource; }

            set { SetProperty(ref _defaultSource, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("delinquent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Delinquent
        {
            get { return _delinquent; }

            set { SetProperty(ref _delinquent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceCreditBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, long> InvoiceCreditBalance
        {
            get { return _invoiceCreditBalance; }

            set { SetProperty(ref _invoiceCreditBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoicePrefix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoicePrefix
        {
            get { return _invoicePrefix; }

            set { SetProperty(ref _invoicePrefix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CustomerInvoiceSettings InvoiceSettings
        {
            get { return _invoiceSettings; }

            set { SetProperty(ref _invoiceSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextInvoiceSequence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long NextInvoiceSequence
        {
            get { return _nextInvoiceSequence; }

            set { SetProperty(ref _nextInvoiceSequence, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Shipping Shipping
        {
            get { return _shipping; }

            set { SetProperty(ref _shipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sources")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<IPaymentSource> Sources
        {
            get { return _sources; }

            set { SetProperty(ref _sources, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Subscription> Subscriptions
        {
            get { return _subscriptions; }

            set { SetProperty(ref _subscriptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CustomerTax Tax
        {
            get { return _tax; }

            set { SetProperty(ref _tax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxExempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxExempt
        {
            get { return _taxExempt; }

            set { SetProperty(ref _taxExempt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> TaxIds
        {
            get { return _taxIds; }

            set { SetProperty(ref _taxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerInvoiceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<CustomerInvoiceSettingsCustomField> _customFields;
        private string _defaultPaymentMethodId;
        private PaymentMethod _defaultPaymentMethod;
        private string _footer;
        private CustomerInvoiceSettingsRenderingOptions _renderingOptions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customFields")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<CustomerInvoiceSettingsCustomField> CustomFields
        {
            get { return _customFields; }

            set { SetProperty(ref _customFields, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPaymentMethodId
        {
            get { return _defaultPaymentMethodId; }

            set { SetProperty(ref _defaultPaymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod DefaultPaymentMethod
        {
            get { return _defaultPaymentMethod; }

            set { SetProperty(ref _defaultPaymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("footer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Footer
        {
            get { return _footer; }

            set { SetProperty(ref _footer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("renderingOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CustomerInvoiceSettingsRenderingOptions RenderingOptions
        {
            get { return _renderingOptions; }

            set { SetProperty(ref _renderingOptions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerInvoiceSettingsCustomField : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;
        private string _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerInvoiceSettingsRenderingOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _amountTaxDisplay;
        private string _template;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTaxDisplay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountTaxDisplay
        {
            get { return _amountTaxDisplay; }

            set { SetProperty(ref _amountTaxDisplay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("template")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Template
        {
            get { return _template; }

            set { SetProperty(ref _template, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private Address _address;
        private long _balance;
        private System.DateTimeOffset _created;
        private string _currency;
        private bool? _deleted;
        private bool? _delinquent;
        private string _description;
        private string _email;
        private bool _livemode;
        private string _name;
        private long _nextInvoiceSequence;
        private string _phone;
        private System.Collections.Generic.ICollection<string> _preferredLocales;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Balance
        {
            get { return _balance; }

            set { SetProperty(ref _balance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("delinquent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Delinquent
        {
            get { return _delinquent; }

            set { SetProperty(ref _delinquent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextInvoiceSequence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long NextInvoiceSequence
        {
            get { return _nextInvoiceSequence; }

            set { SetProperty(ref _nextInvoiceSequence, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _automaticTax;
        private string _ipAddress;
        private CustomerTaxLocation _location;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ipAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IpAddress
        {
            get { return _ipAddress; }

            set { SetProperty(ref _ipAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("location")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CustomerTaxLocation Location
        {
            get { return _location; }

            set { SetProperty(ref _location, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CustomerTaxLocation : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;
        private string _source;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum DateTimeFilter
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Hour")]
        Hour = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Day")]
        Day = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Month")]
        Month = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Year")]
        Year = 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeletedResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private bool _deleted;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DialectCreate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, string> _name = new System.Collections.Generic.Dictionary<string, string>();
        private System.Collections.Generic.IDictionary<string, string> _description;
        private string _languageId;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("languageId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string LanguageId
        {
            get { return _languageId; }

            set { SetProperty(ref _languageId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DialectView : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _description;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Discount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _checkoutSession;
        private Coupon _coupon;
        private string _customerId;
        private Customer _customer;
        private bool? _deleted;
        private System.DateTimeOffset? _end;
        private string _invoice;
        private string _invoiceItem;
        private string _promotionCodeId;
        private PromotionCode _promotionCode;
        private System.DateTimeOffset _start;
        private string _subscription;
        private string _subscriptionItem;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("checkoutSession")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CheckoutSession
        {
            get { return _checkoutSession; }

            set { SetProperty(ref _checkoutSession, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("end")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? End
        {
            get { return _end; }

            set { SetProperty(ref _end, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceItem
        {
            get { return _invoiceItem; }

            set { SetProperty(ref _invoiceItem, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PromotionCodeId
        {
            get { return _promotionCodeId; }

            set { SetProperty(ref _promotionCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PromotionCode PromotionCode
        {
            get { return _promotionCode; }

            set { SetProperty(ref _promotionCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("start")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Start
        {
            get { return _start; }

            set { SetProperty(ref _start, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionItem
        {
            get { return _subscriptionItem; }

            set { SetProperty(ref _subscriptionItem, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Dob : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _day;
        private long? _month;
        private long? _year;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("day")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Day
        {
            get { return _day; }

            set { SetProperty(ref _day, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Month
        {
            get { return _month; }

            set { SetProperty(ref _month, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("year")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Year
        {
            get { return _year; }

            set { SetProperty(ref _year, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EncryptTokenRequest : Prism.Mvvm.BindableBase
    {
        private string _authorizationType;
        private string _spaceId;
        private System.DateTimeOffset? _expires;

        [System.Text.Json.Serialization.JsonPropertyName("authorizationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string AuthorizationType
        {
            get { return _authorizationType; }

            set { SetProperty(ref _authorizationType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("spaceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SpaceId
        {
            get { return _spaceId; }

            set { SetProperty(ref _spaceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expires")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Expires
        {
            get { return _expires; }

            set { SetProperty(ref _expires, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EventRequestRequest : Prism.Mvvm.BindableBase
    {
        private string _eventId;
        private string _result;
        private EventStatus _status;

        [System.Text.Json.Serialization.JsonPropertyName("eventId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string EventId
        {
            get { return _eventId; }

            set { SetProperty(ref _eventId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Result
        {
            get { return _result; }

            set { SetProperty(ref _result, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EventStatus Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class EventRequestResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _status;
        private string _details;
        private System.DateTimeOffset _createdAt;
        private string _requestId;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("details")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Details
        {
            get { return _details; }

            set { SetProperty(ref _details, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CreatedAt
        {
            get { return _createdAt; }

            set { SetProperty(ref _createdAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestId
        {
            get { return _requestId; }

            set { SetProperty(ref _requestId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EventStatus
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Completed")]
        Completed = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Failed")]
        Failed = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class File : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private System.DateTimeOffset _created;
        private System.DateTimeOffset? _expiresAt;
        private string _filename;
        private System.Collections.Generic.ICollection<FileLink> _links;
        private string _purpose;
        private long _size;
        private string _title;
        private string _type;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("filename")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Filename
        {
            get { return _filename; }

            set { SetProperty(ref _filename, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("links")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FileLink> Links
        {
            get { return _links; }

            set { SetProperty(ref _links, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("purpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("size")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Size
        {
            get { return _size; }

            set { SetProperty(ref _size, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private System.DateTimeOffset _created;
        private bool _expired;
        private System.DateTimeOffset? _expiresAt;
        private string _fileId;
        private File _file;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Expired
        {
            get { return _expired; }

            set { SetProperty(ref _expired, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fileId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FileId
        {
            get { return _fileId; }

            set { SetProperty(ref _fileId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("file")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File File
        {
            get { return _file; }

            set { SetProperty(ref _file, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum FilterBy
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Service")]
        Service = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Space")]
        Space = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Model")]
        Model = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FilterModelAI : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _category;
        private string _language;
        private bool? _isStandard;
        private string _gender;
        private string _dialect;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("language")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Language
        {
            get { return _language; }

            set { SetProperty(ref _language, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isStandard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? IsStandard
        {
            get { return _isStandard; }

            set { SetProperty(ref _isStandard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FilterModelPropertyValues : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _sender;
        private string _forginkey;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Sender
        {
            get { return _sender; }

            set { SetProperty(ref _sender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("forginkey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Forginkey
        {
            get { return _forginkey; }

            set { SetProperty(ref _forginkey, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ForgotPasswordRequest : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HttpStatusCode
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Continue")]
        Continue = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"SwitchingProtocols")]
        SwitchingProtocols = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Processing")]
        Processing = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"EarlyHints")]
        EarlyHints = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"OK")]
        OK = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Created")]
        Created = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Accepted")]
        Accepted = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"NonAuthoritativeInformation")]
        NonAuthoritativeInformation = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"NoContent")]
        NoContent = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"ResetContent")]
        ResetContent = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"PartialContent")]
        PartialContent = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"MultiStatus")]
        MultiStatus = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"AlreadyReported")]
        AlreadyReported = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"IMUsed")]
        IMUsed = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"MultipleChoices")]
        MultipleChoices = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"MovedPermanently")]
        MovedPermanently = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"Found")]
        Found = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"SeeOther")]
        SeeOther = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"NotModified")]
        NotModified = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"UseProxy")]
        UseProxy = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"Unused")]
        Unused = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"TemporaryRedirect")]
        TemporaryRedirect = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"PermanentRedirect")]
        PermanentRedirect = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"BadRequest")]
        BadRequest = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"Unauthorized")]
        Unauthorized = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"PaymentRequired")]
        PaymentRequired = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"Forbidden")]
        Forbidden = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"NotFound")]
        NotFound = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"MethodNotAllowed")]
        MethodNotAllowed = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"NotAcceptable")]
        NotAcceptable = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"ProxyAuthenticationRequired")]
        ProxyAuthenticationRequired = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"RequestTimeout")]
        RequestTimeout = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"Conflict")]
        Conflict = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"Gone")]
        Gone = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"LengthRequired")]
        LengthRequired = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"PreconditionFailed")]
        PreconditionFailed = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"RequestEntityTooLarge")]
        RequestEntityTooLarge = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"RequestUriTooLong")]
        RequestUriTooLong = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"UnsupportedMediaType")]
        UnsupportedMediaType = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"RequestedRangeNotSatisfiable")]
        RequestedRangeNotSatisfiable = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"ExpectationFailed")]
        ExpectationFailed = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"MisdirectedRequest")]
        MisdirectedRequest = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"UnprocessableEntity")]
        UnprocessableEntity = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"Locked")]
        Locked = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"FailedDependency")]
        FailedDependency = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"UpgradeRequired")]
        UpgradeRequired = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"PreconditionRequired")]
        PreconditionRequired = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"TooManyRequests")]
        TooManyRequests = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"RequestHeaderFieldsTooLarge")]
        RequestHeaderFieldsTooLarge = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"UnavailableForLegalReasons")]
        UnavailableForLegalReasons = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"InternalServerError")]
        InternalServerError = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"NotImplemented")]
        NotImplemented = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"BadGateway")]
        BadGateway = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"ServiceUnavailable")]
        ServiceUnavailable = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"GatewayTimeout")]
        GatewayTimeout = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"HttpVersionNotSupported")]
        HttpVersionNotSupported = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"VariantAlsoNegotiates")]
        VariantAlsoNegotiates = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"InsufficientStorage")]
        InsufficientStorage = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"LoopDetected")]
        LoopDetected = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"NotExtended")]
        NotExtended = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"NetworkAuthenticationRequired")]
        NetworkAuthenticationRequired = 60,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HttpValidationProblemDetails : Prism.Mvvm.BindableBase
    {
        private string _type;
        private string _title;
        private int? _status;
        private string _detail;
        private string _instance;
        private System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> _errors;

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int? Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Detail
        {
            get { return _detail; }

            set { SetProperty(ref _detail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Instance
        {
            get { return _instance; }

            set { SetProperty(ref _instance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>> Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IBalanceTransactionSource : Prism.Mvvm.BindableBase
    {
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IExternalAccount : Prism.Mvvm.BindableBase
    {
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private Account _account;
        private string _accountId;

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class IPaymentSource : Prism.Mvvm.BindableBase
    {
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InfoRequest : Prism.Mvvm.BindableBase
    {
        private string _newEmail;
        private string _newPassword;
        private string _oldPassword;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("newEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NewEmail
        {
            get { return _newEmail; }

            set { SetProperty(ref _newEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("newPassword")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NewPassword
        {
            get { return _newPassword; }

            set { SetProperty(ref _newPassword, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oldPassword")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OldPassword
        {
            get { return _oldPassword; }

            set { SetProperty(ref _oldPassword, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InfoResponse : Prism.Mvvm.BindableBase
    {
        private string _email;
        private bool _isEmailConfirmed;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isEmailConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public bool IsEmailConfirmed
        {
            get { return _isEmailConfirmed; }

            set { SetProperty(ref _isEmailConfirmed, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Invoice : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _accountCountry;
        private string _accountName;
        private System.Collections.Generic.ICollection<string> _accountTaxIdIds;
        private System.Collections.Generic.ICollection<TaxId> _accountTaxIds;
        private long _amountDue;
        private long _amountOverpaid;
        private long _amountPaid;
        private long _amountRemaining;
        private long _amountShipping;
        private System.Collections.Generic.ICollection<InvoiceAmountsDue> _amountsDue;
        private string _applicationId;
        private Application _application;
        private long? _applicationFeeAmount;
        private long _attemptCount;
        private bool _attempted;
        private bool _autoAdvance;
        private InvoiceAutomaticTax _automaticTax;
        private System.DateTimeOffset? _automaticallyFinalizesAt;
        private string _billingReason;
        private string _chargeId;
        private Charge _charge;
        private string _collectionMethod;
        private System.DateTimeOffset _created;
        private string _currency;
        private System.Collections.Generic.ICollection<InvoiceCustomField> _customFields;
        private string _customerId;
        private Customer _customer;
        private Address _customerAddress;
        private string _customerEmail;
        private string _customerName;
        private string _customerPhone;
        private Shipping _customerShipping;
        private string _customerTaxExempt;
        private System.Collections.Generic.ICollection<InvoiceCustomerTaxId> _customerTaxIds;
        private System.Collections.Generic.ICollection<string> _defaultMarginIds;
        private System.Collections.Generic.ICollection<Margin> _defaultMargins;
        private string _defaultPaymentMethodId;
        private PaymentMethod _defaultPaymentMethod;
        private string _defaultSourceId;
        private IPaymentSource _defaultSource;
        private System.Collections.Generic.ICollection<TaxRate> _defaultTaxRates;
        private bool? _deleted;
        private string _description;
        private Discount _discount;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private System.DateTimeOffset? _dueDate;
        private System.DateTimeOffset? _effectiveAt;
        private long? _endingBalance;
        private string _footer;
        private InvoiceFromInvoice _fromInvoice;
        private string _hostedInvoiceUrl;
        private string _invoicePdf;
        private InvoiceIssuer _issuer;
        private StripeError _lastFinalizationError;
        private string _latestRevisionId;
        private Invoice _latestRevision;
        private System.Collections.Generic.ICollection<InvoiceLineItem> _lines;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private System.DateTimeOffset? _nextPaymentAttempt;
        private string _number;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private bool _paid;
        private bool _paidOutOfBand;
        private string _paymentIntentId;
        private PaymentIntent _paymentIntent;
        private InvoicePaymentSettings _paymentSettings;
        private System.Collections.Generic.ICollection<InvoicePayment> _payments;
        private System.DateTimeOffset _periodEnd;
        private System.DateTimeOffset _periodStart;
        private long _postPaymentCreditNotesAmount;
        private long _prePaymentCreditNotesAmount;
        private string _quoteId;
        private Quote _quote;
        private string _receiptNumber;
        private InvoiceRendering _rendering;
        private InvoiceShippingCost _shippingCost;
        private InvoiceShippingDetails _shippingDetails;
        private long _startingBalance;
        private string _statementDescriptor;
        private string _status;
        private InvoiceStatusTransitions _statusTransitions;
        private string _subscriptionId;
        private Subscription _subscription;
        private InvoiceSubscriptionDetails _subscriptionDetails;
        private System.DateTimeOffset _subscriptionProrationDate;
        private long _subtotal;
        private long? _subtotalExcludingTax;
        private long? _tax;
        private string _testClockId;
        private TestClock _testClock;
        private InvoiceThresholdReason _thresholdReason;
        private long _total;
        private System.Collections.Generic.ICollection<InvoiceDiscountAmount> _totalDiscountAmounts;
        private long? _totalExcludingTax;
        private System.Collections.Generic.ICollection<InvoiceTotalMarginAmount> _totalMarginAmounts;
        private System.Collections.Generic.ICollection<InvoiceTotalPretaxCreditAmount> _totalPretaxCreditAmounts;
        private System.Collections.Generic.ICollection<InvoiceTaxAmount> _totalTaxAmounts;
        private InvoiceTransferData _transferData;
        private System.DateTimeOffset? _webhooksDeliveredAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountCountry")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountCountry
        {
            get { return _accountCountry; }

            set { SetProperty(ref _accountCountry, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountName
        {
            get { return _accountName; }

            set { SetProperty(ref _accountName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIdIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountTaxIdIds
        {
            get { return _accountTaxIdIds; }

            set { SetProperty(ref _accountTaxIdIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> AccountTaxIds
        {
            get { return _accountTaxIds; }

            set { SetProperty(ref _accountTaxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountDue
        {
            get { return _amountDue; }

            set { SetProperty(ref _amountDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountOverpaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountOverpaid
        {
            get { return _amountOverpaid; }

            set { SetProperty(ref _amountOverpaid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountPaid
        {
            get { return _amountPaid; }

            set { SetProperty(ref _amountPaid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRemaining")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountRemaining
        {
            get { return _amountRemaining; }

            set { SetProperty(ref _amountRemaining, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountShipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountShipping
        {
            get { return _amountShipping; }

            set { SetProperty(ref _amountShipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceAmountsDue> AmountsDue
        {
            get { return _amountsDue; }

            set { SetProperty(ref _amountsDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ApplicationFeeAmount
        {
            get { return _applicationFeeAmount; }

            set { SetProperty(ref _applicationFeeAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("attemptCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AttemptCount
        {
            get { return _attemptCount; }

            set { SetProperty(ref _attemptCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("attempted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Attempted
        {
            get { return _attempted; }

            set { SetProperty(ref _attempted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("autoAdvance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AutoAdvance
        {
            get { return _autoAdvance; }

            set { SetProperty(ref _autoAdvance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceAutomaticTax AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticallyFinalizesAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? AutomaticallyFinalizesAt
        {
            get { return _automaticallyFinalizesAt; }

            set { SetProperty(ref _automaticallyFinalizesAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingReason
        {
            get { return _billingReason; }

            set { SetProperty(ref _billingReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customFields")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceCustomField> CustomFields
        {
            get { return _customFields; }

            set { SetProperty(ref _customFields, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address CustomerAddress
        {
            get { return _customerAddress; }

            set { SetProperty(ref _customerAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerEmail
        {
            get { return _customerEmail; }

            set { SetProperty(ref _customerEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerName
        {
            get { return _customerName; }

            set { SetProperty(ref _customerName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerPhone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerPhone
        {
            get { return _customerPhone; }

            set { SetProperty(ref _customerPhone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerShipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Shipping CustomerShipping
        {
            get { return _customerShipping; }

            set { SetProperty(ref _customerShipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerTaxExempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerTaxExempt
        {
            get { return _customerTaxExempt; }

            set { SetProperty(ref _customerTaxExempt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceCustomerTaxId> CustomerTaxIds
        {
            get { return _customerTaxIds; }

            set { SetProperty(ref _customerTaxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultMarginIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DefaultMarginIds
        {
            get { return _defaultMarginIds; }

            set { SetProperty(ref _defaultMarginIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultMargins")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Margin> DefaultMargins
        {
            get { return _defaultMargins; }

            set { SetProperty(ref _defaultMargins, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPaymentMethodId
        {
            get { return _defaultPaymentMethodId; }

            set { SetProperty(ref _defaultPaymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod DefaultPaymentMethod
        {
            get { return _defaultPaymentMethod; }

            set { SetProperty(ref _defaultPaymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultSourceId
        {
            get { return _defaultSourceId; }

            set { SetProperty(ref _defaultSourceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource DefaultSource
        {
            get { return _defaultSource; }

            set { SetProperty(ref _defaultSource, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultTaxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> DefaultTaxRates
        {
            get { return _defaultTaxRates; }

            set { SetProperty(ref _defaultTaxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? DueDate
        {
            get { return _dueDate; }

            set { SetProperty(ref _dueDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectiveAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EffectiveAt
        {
            get { return _effectiveAt; }

            set { SetProperty(ref _effectiveAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endingBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? EndingBalance
        {
            get { return _endingBalance; }

            set { SetProperty(ref _endingBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("footer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Footer
        {
            get { return _footer; }

            set { SetProperty(ref _footer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fromInvoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceFromInvoice FromInvoice
        {
            get { return _fromInvoice; }

            set { SetProperty(ref _fromInvoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInvoiceUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInvoiceUrl
        {
            get { return _hostedInvoiceUrl; }

            set { SetProperty(ref _hostedInvoiceUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoicePdf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoicePdf
        {
            get { return _invoicePdf; }

            set { SetProperty(ref _invoicePdf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceIssuer Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastFinalizationError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeError LastFinalizationError
        {
            get { return _lastFinalizationError; }

            set { SetProperty(ref _lastFinalizationError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestRevisionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LatestRevisionId
        {
            get { return _latestRevisionId; }

            set { SetProperty(ref _latestRevisionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestRevision")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice LatestRevision
        {
            get { return _latestRevision; }

            set { SetProperty(ref _latestRevision, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lines")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceLineItem> Lines
        {
            get { return _lines; }

            set { SetProperty(ref _lines, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextPaymentAttempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? NextPaymentAttempt
        {
            get { return _nextPaymentAttempt; }

            set { SetProperty(ref _nextPaymentAttempt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("number")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Number
        {
            get { return _number; }

            set { SetProperty(ref _number, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Paid
        {
            get { return _paid; }

            set { SetProperty(ref _paid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paidOutOfBand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool PaidOutOfBand
        {
            get { return _paidOutOfBand; }

            set { SetProperty(ref _paidOutOfBand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentIntentId
        {
            get { return _paymentIntentId; }

            set { SetProperty(ref _paymentIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettings PaymentSettings
        {
            get { return _paymentSettings; }

            set { SetProperty(ref _paymentSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoicePayment> Payments
        {
            get { return _payments; }

            set { SetProperty(ref _payments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodEnd
        {
            get { return _periodEnd; }

            set { SetProperty(ref _periodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodStart
        {
            get { return _periodStart; }

            set { SetProperty(ref _periodStart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postPaymentCreditNotesAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long PostPaymentCreditNotesAmount
        {
            get { return _postPaymentCreditNotesAmount; }

            set { SetProperty(ref _postPaymentCreditNotesAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prePaymentCreditNotesAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long PrePaymentCreditNotesAmount
        {
            get { return _prePaymentCreditNotesAmount; }

            set { SetProperty(ref _prePaymentCreditNotesAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quoteId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string QuoteId
        {
            get { return _quoteId; }

            set { SetProperty(ref _quoteId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quote")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Quote Quote
        {
            get { return _quote; }

            set { SetProperty(ref _quote, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptNumber
        {
            get { return _receiptNumber; }

            set { SetProperty(ref _receiptNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rendering")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceRendering Rendering
        {
            get { return _rendering; }

            set { SetProperty(ref _rendering, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingCost")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceShippingCost ShippingCost
        {
            get { return _shippingCost; }

            set { SetProperty(ref _shippingCost, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceShippingDetails ShippingDetails
        {
            get { return _shippingDetails; }

            set { SetProperty(ref _shippingDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startingBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long StartingBalance
        {
            get { return _startingBalance; }

            set { SetProperty(ref _startingBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusTransitions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceStatusTransitions StatusTransitions
        {
            get { return _statusTransitions; }

            set { SetProperty(ref _statusTransitions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceSubscriptionDetails SubscriptionDetails
        {
            get { return _subscriptionDetails; }

            set { SetProperty(ref _subscriptionDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionProrationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset SubscriptionProrationDate
        {
            get { return _subscriptionProrationDate; }

            set { SetProperty(ref _subscriptionProrationDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Subtotal
        {
            get { return _subtotal; }

            set { SetProperty(ref _subtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subtotalExcludingTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? SubtotalExcludingTax
        {
            get { return _subtotalExcludingTax; }

            set { SetProperty(ref _subtotalExcludingTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Tax
        {
            get { return _tax; }

            set { SetProperty(ref _tax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("thresholdReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceThresholdReason ThresholdReason
        {
            get { return _thresholdReason; }

            set { SetProperty(ref _thresholdReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("total")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Total
        {
            get { return _total; }

            set { SetProperty(ref _total, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalDiscountAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceDiscountAmount> TotalDiscountAmounts
        {
            get { return _totalDiscountAmounts; }

            set { SetProperty(ref _totalDiscountAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalExcludingTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TotalExcludingTax
        {
            get { return _totalExcludingTax; }

            set { SetProperty(ref _totalExcludingTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalMarginAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceTotalMarginAmount> TotalMarginAmounts
        {
            get { return _totalMarginAmounts; }

            set { SetProperty(ref _totalMarginAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalPretaxCreditAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceTotalPretaxCreditAmount> TotalPretaxCreditAmounts
        {
            get { return _totalPretaxCreditAmounts; }

            set { SetProperty(ref _totalPretaxCreditAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalTaxAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceTaxAmount> TotalTaxAmounts
        {
            get { return _totalTaxAmounts; }

            set { SetProperty(ref _totalTaxAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("webhooksDeliveredAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? WebhooksDeliveredAt
        {
            get { return _webhooksDeliveredAt; }

            set { SetProperty(ref _webhooksDeliveredAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceAmountsDue : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private long _amountPaid;
        private long _amountRemaining;
        private long? _daysUntilDue;
        private string _description;
        private System.DateTimeOffset? _dueDate;
        private System.DateTimeOffset? _paidAt;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountPaid
        {
            get { return _amountPaid; }

            set { SetProperty(ref _amountPaid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRemaining")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountRemaining
        {
            get { return _amountRemaining; }

            set { SetProperty(ref _amountRemaining, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysUntilDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DaysUntilDue
        {
            get { return _daysUntilDue; }

            set { SetProperty(ref _daysUntilDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dueDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? DueDate
        {
            get { return _dueDate; }

            set { SetProperty(ref _dueDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paidAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? PaidAt
        {
            get { return _paidAt; }

            set { SetProperty(ref _paidAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceAutomaticTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private InvoiceAutomaticTaxLiability _liability;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("liability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceAutomaticTaxLiability Liability
        {
            get { return _liability; }

            set { SetProperty(ref _liability, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceAutomaticTaxLiability : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceCustomField : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;
        private string _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceCustomerTaxId : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;
        private string _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceDiscountAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _discountId;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceFromInvoice : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _action;
        private string _invoiceId;
        private Invoice _invoice;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("action")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Action
        {
            get { return _action; }

            set { SetProperty(ref _action, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceIssuer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private string _currency;
        private string _customerId;
        private Customer _customer;
        private System.DateTimeOffset _date;
        private bool? _deleted;
        private string _description;
        private bool _discountable;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private string _invoiceId;
        private Invoice _invoice;
        private bool _livemode;
        private System.Collections.Generic.ICollection<string> _marginIds;
        private System.Collections.Generic.ICollection<Margin> _margins;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private InvoiceItemPeriod _period;
        private Plan _plan;
        private Price _price;
        private bool _proration;
        private long _quantity;
        private string _subscriptionId;
        private Subscription _subscription;
        private string _subscriptionItem;
        private System.Collections.Generic.ICollection<TaxRate> _taxRates;
        private string _testClockId;
        private TestClock _testClock;
        private long? _unitAmount;
        private double? _unitAmountDecimal;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Discountable
        {
            get { return _discountable; }

            set { SetProperty(ref _discountable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> MarginIds
        {
            get { return _marginIds; }

            set { SetProperty(ref _marginIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margins")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Margin> Margins
        {
            get { return _margins; }

            set { SetProperty(ref _margins, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("period")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceItemPeriod Period
        {
            get { return _period; }

            set { SetProperty(ref _period, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Plan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("proration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Proration
        {
            get { return _proration; }

            set { SetProperty(ref _proration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionItem
        {
            get { return _subscriptionItem; }

            set { SetProperty(ref _subscriptionItem, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> TaxRates
        {
            get { return _taxRates; }

            set { SetProperty(ref _taxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceItemPeriod : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _end;
        private System.DateTimeOffset _start;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("end")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset End
        {
            get { return _end; }

            set { SetProperty(ref _end, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("start")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Start
        {
            get { return _start; }

            set { SetProperty(ref _start, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private long? _amountExcludingTax;
        private string _currency;
        private string _description;
        private System.Collections.Generic.ICollection<InvoiceLineItemDiscountAmount> _discountAmounts;
        private bool _discountable;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private string _invoice;
        private string _invoiceItemId;
        private InvoiceItem _invoiceItem;
        private bool _livemode;
        private System.Collections.Generic.ICollection<InvoiceLineItemMarginAmount> _marginAmounts;
        private System.Collections.Generic.ICollection<string> _marginIds;
        private System.Collections.Generic.ICollection<Margin> _margins;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private InvoiceLineItemPeriod _period;
        private Plan _plan;
        private System.Collections.Generic.ICollection<InvoiceLineItemPretaxCreditAmount> _pretaxCreditAmounts;
        private Price _price;
        private bool _proration;
        private InvoiceLineItemProrationDetails _prorationDetails;
        private long? _quantity;
        private string _subscriptionId;
        private Subscription _subscription;
        private string _subscriptionItemId;
        private SubscriptionItem _subscriptionItem;
        private System.Collections.Generic.ICollection<InvoiceLineItemTaxAmount> _taxAmounts;
        private System.Collections.Generic.ICollection<TaxRate> _taxRates;
        private string _type;
        private double? _unitAmountExcludingTax;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountExcludingTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountExcludingTax
        {
            get { return _amountExcludingTax; }

            set { SetProperty(ref _amountExcludingTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceLineItemDiscountAmount> DiscountAmounts
        {
            get { return _discountAmounts; }

            set { SetProperty(ref _discountAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Discountable
        {
            get { return _discountable; }

            set { SetProperty(ref _discountable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceItemId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceItemId
        {
            get { return _invoiceItemId; }

            set { SetProperty(ref _invoiceItemId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceItem InvoiceItem
        {
            get { return _invoiceItem; }

            set { SetProperty(ref _invoiceItem, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceLineItemMarginAmount> MarginAmounts
        {
            get { return _marginAmounts; }

            set { SetProperty(ref _marginAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> MarginIds
        {
            get { return _marginIds; }

            set { SetProperty(ref _marginIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margins")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Margin> Margins
        {
            get { return _margins; }

            set { SetProperty(ref _margins, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("period")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceLineItemPeriod Period
        {
            get { return _period; }

            set { SetProperty(ref _period, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Plan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pretaxCreditAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceLineItemPretaxCreditAmount> PretaxCreditAmounts
        {
            get { return _pretaxCreditAmounts; }

            set { SetProperty(ref _pretaxCreditAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("proration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Proration
        {
            get { return _proration; }

            set { SetProperty(ref _proration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prorationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceLineItemProrationDetails ProrationDetails
        {
            get { return _prorationDetails; }

            set { SetProperty(ref _prorationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionItemId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionItemId
        {
            get { return _subscriptionItemId; }

            set { SetProperty(ref _subscriptionItemId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionItem")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionItem SubscriptionItem
        {
            get { return _subscriptionItem; }

            set { SetProperty(ref _subscriptionItem, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxAmounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceLineItemTaxAmount> TaxAmounts
        {
            get { return _taxAmounts; }

            set { SetProperty(ref _taxAmounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> TaxRates
        {
            get { return _taxRates; }

            set { SetProperty(ref _taxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountExcludingTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountExcludingTax
        {
            get { return _unitAmountExcludingTax; }

            set { SetProperty(ref _unitAmountExcludingTax, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemDiscountAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _discountId;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemMarginAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _marginId;
        private Margin _margin;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MarginId
        {
            get { return _marginId; }

            set { SetProperty(ref _marginId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Margin Margin
        {
            get { return _margin; }

            set { SetProperty(ref _margin, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemPeriod : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _end;
        private System.DateTimeOffset _start;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("end")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset End
        {
            get { return _end; }

            set { SetProperty(ref _end, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("start")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Start
        {
            get { return _start; }

            set { SetProperty(ref _start, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemPretaxCreditAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _creditBalanceTransactionId;
        private CreditBalanceTransaction _creditBalanceTransaction;
        private string _discountId;
        private Discount _discount;
        private string _marginId;
        private Margin _margin;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditBalanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CreditBalanceTransactionId
        {
            get { return _creditBalanceTransactionId; }

            set { SetProperty(ref _creditBalanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditBalanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransaction CreditBalanceTransaction
        {
            get { return _creditBalanceTransaction; }

            set { SetProperty(ref _creditBalanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MarginId
        {
            get { return _marginId; }

            set { SetProperty(ref _marginId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Margin Margin
        {
            get { return _margin; }

            set { SetProperty(ref _margin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemProrationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoiceLineItemProrationDetailsCreditedItems _creditedItems;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditedItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceLineItemProrationDetailsCreditedItems CreditedItems
        {
            get { return _creditedItems; }

            set { SetProperty(ref _creditedItems, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemProrationDetailsCreditedItems : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _invoice;
        private System.Collections.Generic.ICollection<string> _invoiceLineItems;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceLineItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> InvoiceLineItems
        {
            get { return _invoiceLineItems; }

            set { SetProperty(ref _invoiceLineItems, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceLineItemTaxAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private bool _inclusive;
        private string _taxRateId;
        private TaxRate _taxRate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inclusive")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Inclusive
        {
            get { return _inclusive; }

            set { SetProperty(ref _inclusive, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxRateId
        {
            get { return _taxRateId; }

            set { SetProperty(ref _taxRateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate TaxRate
        {
            get { return _taxRate; }

            set { SetProperty(ref _taxRate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePayment : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long? _amountOverpaid;
        private long? _amountPaid;
        private long _amountRequested;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _invoiceId;
        private Invoice _invoice;
        private bool? _isDefault;
        private bool _livemode;
        private InvoicePaymentPayment _payment;
        private string _status;
        private InvoicePaymentStatusTransitions _statusTransitions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountOverpaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountOverpaid
        {
            get { return _amountOverpaid; }

            set { SetProperty(ref _amountOverpaid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPaid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountPaid
        {
            get { return _amountPaid; }

            set { SetProperty(ref _amountPaid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountRequested
        {
            get { return _amountRequested; }

            set { SetProperty(ref _amountRequested, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isDefault")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? IsDefault
        {
            get { return _isDefault; }

            set { SetProperty(ref _isDefault, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentPayment Payment
        {
            get { return _payment; }

            set { SetProperty(ref _payment, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusTransitions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentStatusTransitions StatusTransitions
        {
            get { return _statusTransitions; }

            set { SetProperty(ref _statusTransitions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentPayment : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _chargeId;
        private Charge _charge;
        private string _paymentIntentId;
        private PaymentIntent _paymentIntent;
        private string _paymentRecordId;
        private PaymentRecord _paymentRecord;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentIntentId
        {
            get { return _paymentIntentId; }

            set { SetProperty(ref _paymentIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentRecordId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentRecordId
        {
            get { return _paymentRecordId; }

            set { SetProperty(ref _paymentRecordId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentRecord")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecord PaymentRecord
        {
            get { return _paymentRecord; }

            set { SetProperty(ref _paymentRecord, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _defaultMandate;
        private InvoicePaymentSettingsPaymentMethodOptions _paymentMethodOptions;
        private System.Collections.Generic.ICollection<string> _paymentMethodTypes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultMandate
        {
            get { return _defaultMandate; }

            set { SetProperty(ref _defaultMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptions PaymentMethodOptions
        {
            get { return _paymentMethodOptions; }

            set { SetProperty(ref _paymentMethodOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PaymentMethodTypes
        {
            get { return _paymentMethodTypes; }

            set { SetProperty(ref _paymentMethodTypes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsAcssDebit _acssDebit;
        private InvoicePaymentSettingsPaymentMethodOptionsBancontact _bancontact;
        private InvoicePaymentSettingsPaymentMethodOptionsCard _card;
        private InvoicePaymentSettingsPaymentMethodOptionsCustomerBalance _customerBalance;
        private InvoicePaymentSettingsPaymentMethodOptionsIdBankTransfer _idBankTransfer;
        private InvoicePaymentSettingsPaymentMethodOptionsKonbini _konbini;
        private InvoicePaymentSettingsPaymentMethodOptionsSepaDebit _sepaDebit;
        private InvoicePaymentSettingsPaymentMethodOptionsUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsCustomerBalance CustomerBalance
        {
            get { return _customerBalance; }

            set { SetProperty(ref _customerBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbini")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsKonbini Konbini
        {
            get { return _konbini; }

            set { SetProperty(ref _konbini, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions _mandateOptions;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _transactionType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionType
        {
            get { return _transactionType; }

            set { SetProperty(ref _transactionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _preferredLanguage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsCardInstallments _installments;
        private string _requestThreeDSecure;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("installments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsCardInstallments Installments
        {
            get { return _installments; }

            set { SetProperty(ref _installments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestThreeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestThreeDSecure
        {
            get { return _requestThreeDSecure; }

            set { SetProperty(ref _requestThreeDSecure, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsCardInstallments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool? _enabled;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsCustomerBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer _bankTransfer;
        private string _fundingType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer BankTransfer
        {
            get { return _bankTransfer; }

            set { SetProperty(ref _bankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fundingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FundingType
        {
            get { return _fundingType; }

            set { SetProperty(ref _fundingType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer _euBankTransfer;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("euBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer EuBankTransfer
        {
            get { return _euBankTransfer; }

            set { SetProperty(ref _euBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsKonbini : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections _financialConnections;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialConnections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections FinancialConnections
        {
            get { return _financialConnections; }

            set { SetProperty(ref _financialConnections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters _filters;
        private System.Collections.Generic.ICollection<string> _permissions;
        private System.Collections.Generic.ICollection<string> _prefetch;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("filters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters Filters
        {
            get { return _filters; }

            set { SetProperty(ref _filters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prefetch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Prefetch
        {
            get { return _prefetch; }

            set { SetProperty(ref _prefetch, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountSubcategories;
        private string _institution;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountSubcategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountSubcategories
        {
            get { return _accountSubcategories; }

            set { SetProperty(ref _accountSubcategories, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institution")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Institution
        {
            get { return _institution; }

            set { SetProperty(ref _institution, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoicePaymentStatusTransitions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _canceledAt;
        private System.DateTimeOffset? _paidAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paidAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? PaidAt
        {
            get { return _paidAt; }

            set { SetProperty(ref _paidAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceRendering : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _amountTaxDisplay;
        private InvoiceRenderingPdf _pdf;
        private string _template;
        private long? _templateVersion;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTaxDisplay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountTaxDisplay
        {
            get { return _amountTaxDisplay; }

            set { SetProperty(ref _amountTaxDisplay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pdf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceRenderingPdf Pdf
        {
            get { return _pdf; }

            set { SetProperty(ref _pdf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("template")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Template
        {
            get { return _template; }

            set { SetProperty(ref _template, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("templateVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TemplateVersion
        {
            get { return _templateVersion; }

            set { SetProperty(ref _templateVersion, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceRenderingPdf : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _pageSize;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PageSize
        {
            get { return _pageSize; }

            set { SetProperty(ref _pageSize, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceShippingCost : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountSubtotal;
        private long _amountTax;
        private long _amountTotal;
        private string _shippingRateId;
        private ShippingRate _shippingRate;
        private System.Collections.Generic.ICollection<InvoiceShippingCostTax> _taxes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountSubtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountSubtotal
        {
            get { return _amountSubtotal; }

            set { SetProperty(ref _amountSubtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTax
        {
            get { return _amountTax; }

            set { SetProperty(ref _amountTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTotal
        {
            get { return _amountTotal; }

            set { SetProperty(ref _amountTotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingRateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ShippingRateId
        {
            get { return _shippingRateId; }

            set { SetProperty(ref _shippingRateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ShippingRate ShippingRate
        {
            get { return _shippingRate; }

            set { SetProperty(ref _shippingRate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceShippingCostTax> Taxes
        {
            get { return _taxes; }

            set { SetProperty(ref _taxes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceShippingCostTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private TaxRate _rate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate Rate
        {
            get { return _rate; }

            set { SetProperty(ref _rate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceShippingDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _address;
        private string _carrier;
        private string _name;
        private string _phone;
        private string _trackingNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carrier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Carrier
        {
            get { return _carrier; }

            set { SetProperty(ref _carrier, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trackingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TrackingNumber
        {
            get { return _trackingNumber; }

            set { SetProperty(ref _trackingNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceStatusTransitions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _finalizedAt;
        private System.DateTimeOffset? _markedUncollectibleAt;
        private System.DateTimeOffset? _paidAt;
        private System.DateTimeOffset? _voidedAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("finalizedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? FinalizedAt
        {
            get { return _finalizedAt; }

            set { SetProperty(ref _finalizedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("markedUncollectibleAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? MarkedUncollectibleAt
        {
            get { return _markedUncollectibleAt; }

            set { SetProperty(ref _markedUncollectibleAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paidAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? PaidAt
        {
            get { return _paidAt; }

            set { SetProperty(ref _paidAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("voidedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? VoidedAt
        {
            get { return _voidedAt; }

            set { SetProperty(ref _voidedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceSubscriptionDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private InvoiceSubscriptionDetailsPauseCollection _pauseCollection;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pauseCollection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public InvoiceSubscriptionDetailsPauseCollection PauseCollection
        {
            get { return _pauseCollection; }

            set { SetProperty(ref _pauseCollection, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceSubscriptionDetailsPauseCollection : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _behavior;
        private System.DateTimeOffset? _resumesAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("behavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Behavior
        {
            get { return _behavior; }

            set { SetProperty(ref _behavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resumesAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ResumesAt
        {
            get { return _resumesAt; }

            set { SetProperty(ref _resumesAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceTaxAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private bool _inclusive;
        private string _taxRateId;
        private TaxRate _taxRate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inclusive")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Inclusive
        {
            get { return _inclusive; }

            set { SetProperty(ref _inclusive, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxRateId
        {
            get { return _taxRateId; }

            set { SetProperty(ref _taxRateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate TaxRate
        {
            get { return _taxRate; }

            set { SetProperty(ref _taxRate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceThresholdReason : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountGte;
        private System.Collections.Generic.ICollection<InvoiceThresholdReasonItemReason> _itemReasons;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountGte
        {
            get { return _amountGte; }

            set { SetProperty(ref _amountGte, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("itemReasons")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<InvoiceThresholdReasonItemReason> ItemReasons
        {
            get { return _itemReasons; }

            set { SetProperty(ref _itemReasons, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceThresholdReasonItemReason : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _lineItemIds;
        private long _usageGte;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineItemIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> LineItemIds
        {
            get { return _lineItemIds; }

            set { SetProperty(ref _lineItemIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long UsageGte
        {
            get { return _usageGte; }

            set { SetProperty(ref _usageGte, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceTotalMarginAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _marginId;
        private Margin _margin;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MarginId
        {
            get { return _marginId; }

            set { SetProperty(ref _marginId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Margin Margin
        {
            get { return _margin; }

            set { SetProperty(ref _margin, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceTotalPretaxCreditAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _creditBalanceTransactionId;
        private CreditBalanceTransaction _creditBalanceTransaction;
        private string _discountId;
        private Discount _discount;
        private string _marginId;
        private Margin _margin;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditBalanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CreditBalanceTransactionId
        {
            get { return _creditBalanceTransactionId; }

            set { SetProperty(ref _creditBalanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creditBalanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public CreditBalanceTransaction CreditBalanceTransaction
        {
            get { return _creditBalanceTransaction; }

            set { SetProperty(ref _creditBalanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marginId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MarginId
        {
            get { return _marginId; }

            set { SetProperty(ref _marginId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("margin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Margin Margin
        {
            get { return _margin; }

            set { SetProperty(ref _margin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class InvoiceTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Item : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _icon;
        private string _description;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("icon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Icon
        {
            get { return _icon; }

            set { SetProperty(ref _icon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class JToken : System.Collections.ObjectModel.Collection<JToken>
    {

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LanguageCreate : Prism.Mvvm.BindableBase
    {
        private string _code;
        private System.Collections.Generic.IDictionary<string, string> _name = new System.Collections.Generic.Dictionary<string, string>();

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LanguageView : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _code;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LineItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private LineItemAdjustableQuantity _adjustableQuantity;
        private long _amountDiscount;
        private long _amountSubtotal;
        private long _amountTax;
        private long _amountTotal;
        private string _currency;
        private bool? _deleted;
        private string _description;
        private System.Collections.Generic.ICollection<LineItemDiscount> _discounts;
        private LineItemDisplay _display;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private Price _price;
        private string _productId;
        private Product _product;
        private long? _quantity;
        private System.Collections.Generic.ICollection<LineItemTax> _taxes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("adjustableQuantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public LineItemAdjustableQuantity AdjustableQuantity
        {
            get { return _adjustableQuantity; }

            set { SetProperty(ref _adjustableQuantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDiscount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountDiscount
        {
            get { return _amountDiscount; }

            set { SetProperty(ref _amountDiscount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountSubtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountSubtotal
        {
            get { return _amountSubtotal; }

            set { SetProperty(ref _amountSubtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTax
        {
            get { return _amountTax; }

            set { SetProperty(ref _amountTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTotal
        {
            get { return _amountTotal; }

            set { SetProperty(ref _amountTotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<LineItemDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("display")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public LineItemDisplay Display
        {
            get { return _display; }

            set { SetProperty(ref _display, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("product")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Product Product
        {
            get { return _product; }

            set { SetProperty(ref _product, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<LineItemTax> Taxes
        {
            get { return _taxes; }

            set { SetProperty(ref _taxes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LineItemAdjustableQuantity : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private long? _maximum;
        private long? _minimum;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maximum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Maximum
        {
            get { return _maximum; }

            set { SetProperty(ref _maximum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Minimum
        {
            get { return _minimum; }

            set { SetProperty(ref _minimum, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LineItemDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LineItemDisplay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _description;
        private System.Collections.Generic.ICollection<string> _images;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("images")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Images
        {
            get { return _images; }

            set { SetProperty(ref _images, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LineItemTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private TaxRate _rate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate Rate
        {
            get { return _rate; }

            set { SetProperty(ref _rate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class LoginRequest : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _password;
        private string _twoFactorCode;
        private string _twoFactorRecoveryCode;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("password")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Password
        {
            get { return _password; }

            set { SetProperty(ref _password, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twoFactorCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TwoFactorCode
        {
            get { return _twoFactorCode; }

            set { SetProperty(ref _twoFactorCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twoFactorRecoveryCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TwoFactorRecoveryCode
        {
            get { return _twoFactorRecoveryCode; }

            set { SetProperty(ref _twoFactorRecoveryCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Mandate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private MandateCustomerAcceptance _customerAcceptance;
        private bool _livemode;
        private MandateMultiUse _multiUse;
        private string _onBehalfOf;
        private string _paymentMethodId;
        private PaymentMethod _paymentMethod;
        private MandatePaymentMethodDetails _paymentMethodDetails;
        private MandateSingleUse _singleUse;
        private string _status;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandateCustomerAcceptance CustomerAcceptance
        {
            get { return _customerAcceptance; }

            set { SetProperty(ref _customerAcceptance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multiUse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandateMultiUse MultiUse
        {
            get { return _multiUse; }

            set { SetProperty(ref _multiUse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodId
        {
            get { return _paymentMethodId; }

            set { SetProperty(ref _paymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetails PaymentMethodDetails
        {
            get { return _paymentMethodDetails; }

            set { SetProperty(ref _paymentMethodDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("singleUse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandateSingleUse SingleUse
        {
            get { return _singleUse; }

            set { SetProperty(ref _singleUse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandateCustomerAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _acceptedAt;
        private MandateCustomerAcceptanceOffline _offline;
        private MandateCustomerAcceptanceOnline _online;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acceptedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? AcceptedAt
        {
            get { return _acceptedAt; }

            set { SetProperty(ref _acceptedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("offline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandateCustomerAcceptanceOffline Offline
        {
            get { return _offline; }

            set { SetProperty(ref _offline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("online")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandateCustomerAcceptanceOnline Online
        {
            get { return _online; }

            set { SetProperty(ref _online, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandateCustomerAcceptanceOffline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandateCustomerAcceptanceOnline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _ipAddress;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ipAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IpAddress
        {
            get { return _ipAddress; }

            set { SetProperty(ref _ipAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandateMultiUse : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private MandatePaymentMethodDetailsAcssDebit _acssDebit;
        private MandatePaymentMethodDetailsAmazonPay _amazonPay;
        private MandatePaymentMethodDetailsAuBecsDebit _auBecsDebit;
        private MandatePaymentMethodDetailsBacsDebit _bacsDebit;
        private MandatePaymentMethodDetailsCard _card;
        private MandatePaymentMethodDetailsCashapp _cashapp;
        private MandatePaymentMethodDetailsKakaoPay _kakaoPay;
        private MandatePaymentMethodDetailsKrCard _krCard;
        private MandatePaymentMethodDetailsLink _link;
        private MandatePaymentMethodDetailsPaypal _paypal;
        private MandatePaymentMethodDetailsPayto _payto;
        private MandatePaymentMethodDetailsRevolutPay _revolutPay;
        private MandatePaymentMethodDetailsSepaDebit _sepaDebit;
        private string _type;
        private MandatePaymentMethodDetailsUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsAuBecsDebit AuBecsDebit
        {
            get { return _auBecsDebit; }

            set { SetProperty(ref _auBecsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsKakaoPay KakaoPay
        {
            get { return _kakaoPay; }

            set { SetProperty(ref _kakaoPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsKrCard KrCard
        {
            get { return _krCard; }

            set { SetProperty(ref _krCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsRevolutPay RevolutPay
        {
            get { return _revolutPay; }

            set { SetProperty(ref _revolutPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public MandatePaymentMethodDetailsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _defaultFor;
        private string _intervalDescription;
        private string _paymentSchedule;
        private string _transactionType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultFor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DefaultFor
        {
            get { return _defaultFor; }

            set { SetProperty(ref _defaultFor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IntervalDescription
        {
            get { return _intervalDescription; }

            set { SetProperty(ref _intervalDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionType
        {
            get { return _transactionType; }

            set { SetProperty(ref _transactionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsAuBecsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _networkStatus;
        private string _reference;
        private string _revocationReason;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkStatus
        {
            get { return _networkStatus; }

            set { SetProperty(ref _networkStatus, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revocationReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RevocationReason
        {
            get { return _revocationReason; }

            set { SetProperty(ref _revocationReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsKakaoPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsKrCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _billingAgreementId;
        private string _fingerprint;
        private string _payerId;
        private string _verifiedEmail;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAgreementId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingAgreementId
        {
            get { return _billingAgreementId; }

            set { SetProperty(ref _billingAgreementId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerId
        {
            get { return _payerId; }

            set { SetProperty(ref _payerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedEmail
        {
            get { return _verifiedEmail; }

            set { SetProperty(ref _verifiedEmail, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _amountType;
        private string _endDate;
        private string _paymentSchedule;
        private long? _paymentsPerPeriod;
        private string _purpose;
        private string _startDate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentsPerPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? PaymentsPerPeriod
        {
            get { return _paymentsPerPeriod; }

            set { SetProperty(ref _paymentsPerPeriod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("purpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsRevolutPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandatePaymentMethodDetailsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _collectionMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MandateSingleUse : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _currency;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Margin : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private System.DateTimeOffset _created;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _name;
        private double _percentOff;
        private System.DateTimeOffset _updated;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("percentOff")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double PercentOff
        {
            get { return _percentOff; }

            set { SetProperty(ref _percentOff, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Updated
        {
            get { return _updated; }

            set { SetProperty(ref _updated, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelAiCreate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _token;
        private string _absolutePath;
        private string _category;
        private string _language;
        private bool? _isStandard;
        private string _gender;
        private string _dialect;
        private string _type;
        private string _modelGatewayId;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("language")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Language
        {
            get { return _language; }

            set { SetProperty(ref _language, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isStandard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? IsStandard
        {
            get { return _isStandard; }

            set { SetProperty(ref _isStandard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelGatewayId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ModelGatewayId
        {
            get { return _modelGatewayId; }

            set { SetProperty(ref _modelGatewayId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelAiResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _token;
        private string _absolutePath;
        private string _modelGatewayId;
        private string _category;
        private string _language;
        private bool? _isStandard;
        private string _gender;
        private string _dialect;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelGatewayId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelGatewayId
        {
            get { return _modelGatewayId; }

            set { SetProperty(ref _modelGatewayId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("language")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Language
        {
            get { return _language; }

            set { SetProperty(ref _language, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isStandard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? IsStandard
        {
            get { return _isStandard; }

            set { SetProperty(ref _isStandard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelAiServiceData : Prism.Mvvm.BindableBase
    {
        private string _modelAi;
        private int _usageCount;

        [System.Text.Json.Serialization.JsonPropertyName("modelAi")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelAi
        {
            get { return _modelAi; }

            set { SetProperty(ref _modelAi, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int UsageCount
        {
            get { return _usageCount; }

            set { SetProperty(ref _usageCount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelAiUpdate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _token;
        private string _absolutePath;
        private string _modelGatewayId;
        private string _category;
        private string _language;
        private bool? _isStandard;
        private string _gender;
        private string _dialect;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelGatewayId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelGatewayId
        {
            get { return _modelGatewayId; }

            set { SetProperty(ref _modelGatewayId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("language")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Language
        {
            get { return _language; }

            set { SetProperty(ref _language, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isStandard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? IsStandard
        {
            get { return _isStandard; }

            set { SetProperty(ref _isStandard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelGatewayCreate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelGatewayResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _url;
        private string _token;
        private bool _isDefault;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isDefault")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsDefault
        {
            get { return _isDefault; }

            set { SetProperty(ref _isDefault, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelGatewayUpdate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _url;
        private string _token;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ModelPropertyValues : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.ICollection<string> _usageCount;
        private System.Collections.Generic.ICollection<string> _modelImageUrl;
        private System.Collections.Generic.ICollection<string> _type;
        private System.Collections.Generic.ICollection<string> _voice;
        private System.Collections.Generic.ICollection<string> _language;
        private System.Collections.Generic.ICollection<string> _dialect;
        private System.Collections.Generic.ICollection<string> _quality;
        private System.Collections.Generic.ICollection<string> _token;
        private System.Collections.Generic.ICollection<string> _modelVersion;
        private System.Collections.Generic.ICollection<string> _creationDate;
        private System.Collections.Generic.ICollection<string> _lastUpdated;
        private System.Collections.Generic.ICollection<string> _description;
        private System.Collections.Generic.ICollection<string> _author;
        private System.Collections.Generic.ICollection<string> _accuracy;
        private System.Collections.Generic.ICollection<string> _speed;
        private System.Collections.Generic.ICollection<string> _framework;
        private System.Collections.Generic.ICollection<string> _parameters;

        [System.Text.Json.Serialization.JsonPropertyName("usageCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> UsageCount
        {
            get { return _usageCount; }

            set { SetProperty(ref _usageCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelImageUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> ModelImageUrl
        {
            get { return _modelImageUrl; }

            set { SetProperty(ref _modelImageUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("voice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Voice
        {
            get { return _voice; }

            set { SetProperty(ref _voice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("language")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Language
        {
            get { return _language; }

            set { SetProperty(ref _language, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quality")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Quality
        {
            get { return _quality; }

            set { SetProperty(ref _quality, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelVersion")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> ModelVersion
        {
            get { return _modelVersion; }

            set { SetProperty(ref _modelVersion, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> CreationDate
        {
            get { return _creationDate; }

            set { SetProperty(ref _creationDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastUpdated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> LastUpdated
        {
            get { return _lastUpdated; }

            set { SetProperty(ref _lastUpdated, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("author")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Author
        {
            get { return _author; }

            set { SetProperty(ref _author, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accuracy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Accuracy
        {
            get { return _accuracy; }

            set { SetProperty(ref _accuracy, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("speed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Speed
        {
            get { return _speed; }

            set { SetProperty(ref _speed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("framework")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Framework
        {
            get { return _framework; }

            set { SetProperty(ref _framework, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("parameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Parameters
        {
            get { return _parameters; }

            set { SetProperty(ref _parameters, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PauseCollectionBehaviorType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"keep_as_draft")]
        Keep_as_draft = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"mark_uncollectible")]
        Mark_uncollectible = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"void")]
        Void = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private long _amountCapturable;
        private PaymentIntentAmountDetails _amountDetails;
        private long _amountReceived;
        private string _applicationId;
        private Application _application;
        private long? _applicationFeeAmount;
        private PaymentIntentAsyncWorkflows _asyncWorkflows;
        private PaymentIntentAutomaticPaymentMethods _automaticPaymentMethods;
        private System.DateTimeOffset? _canceledAt;
        private string _cancellationReason;
        private string _captureMethod;
        private string _clientSecret;
        private string _confirmationMethod;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _customerId;
        private Customer _customer;
        private string _description;
        private string _invoiceId;
        private Invoice _invoice;
        private StripeError _lastPaymentError;
        private string _latestChargeId;
        private Charge _latestCharge;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private PaymentIntentNextAction _nextAction;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private PaymentIntentPaymentDetails _paymentDetails;
        private string _paymentMethodId;
        private PaymentMethod _paymentMethod;
        private PaymentIntentPaymentMethodConfigurationDetails _paymentMethodConfigurationDetails;
        private PaymentIntentPaymentMethodOptions _paymentMethodOptions;
        private System.Collections.Generic.ICollection<string> _paymentMethodTypes;
        private PaymentIntentProcessing _processing;
        private string _receiptEmail;
        private string _reviewId;
        private Review _review;
        private string _secretKeyConfirmation;
        private string _setupFutureUsage;
        private Shipping _shipping;
        private string _sourceId;
        private IPaymentSource _source;
        private string _statementDescriptor;
        private string _statementDescriptorSuffix;
        private string _status;
        private PaymentIntentTransferData _transferData;
        private string _transferGroup;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountCapturable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountCapturable
        {
            get { return _amountCapturable; }

            set { SetProperty(ref _amountCapturable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAmountDetails AmountDetails
        {
            get { return _amountDetails; }

            set { SetProperty(ref _amountDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountReceived")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountReceived
        {
            get { return _amountReceived; }

            set { SetProperty(ref _amountReceived, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ApplicationFeeAmount
        {
            get { return _applicationFeeAmount; }

            set { SetProperty(ref _applicationFeeAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("asyncWorkflows")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAsyncWorkflows AsyncWorkflows
        {
            get { return _asyncWorkflows; }

            set { SetProperty(ref _asyncWorkflows, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticPaymentMethods")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAutomaticPaymentMethods AutomaticPaymentMethods
        {
            get { return _automaticPaymentMethods; }

            set { SetProperty(ref _automaticPaymentMethods, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancellationReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CancellationReason
        {
            get { return _cancellationReason; }

            set { SetProperty(ref _cancellationReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("clientSecret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ClientSecret
        {
            get { return _clientSecret; }

            set { SetProperty(ref _clientSecret, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationMethod
        {
            get { return _confirmationMethod; }

            set { SetProperty(ref _confirmationMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastPaymentError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeError LastPaymentError
        {
            get { return _lastPaymentError; }

            set { SetProperty(ref _lastPaymentError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestChargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LatestChargeId
        {
            get { return _latestChargeId; }

            set { SetProperty(ref _latestChargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestCharge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge LatestCharge
        {
            get { return _latestCharge; }

            set { SetProperty(ref _latestCharge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextAction NextAction
        {
            get { return _nextAction; }

            set { SetProperty(ref _nextAction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetails PaymentDetails
        {
            get { return _paymentDetails; }

            set { SetProperty(ref _paymentDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodId
        {
            get { return _paymentMethodId; }

            set { SetProperty(ref _paymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodConfigurationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodConfigurationDetails PaymentMethodConfigurationDetails
        {
            get { return _paymentMethodConfigurationDetails; }

            set { SetProperty(ref _paymentMethodConfigurationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptions PaymentMethodOptions
        {
            get { return _paymentMethodOptions; }

            set { SetProperty(ref _paymentMethodOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PaymentMethodTypes
        {
            get { return _paymentMethodTypes; }

            set { SetProperty(ref _paymentMethodTypes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("processing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentProcessing Processing
        {
            get { return _processing; }

            set { SetProperty(ref _processing, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptEmail
        {
            get { return _receiptEmail; }

            set { SetProperty(ref _receiptEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reviewId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReviewId
        {
            get { return _reviewId; }

            set { SetProperty(ref _reviewId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("review")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Review Review
        {
            get { return _review; }

            set { SetProperty(ref _review, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("secretKeyConfirmation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SecretKeyConfirmation
        {
            get { return _secretKeyConfirmation; }

            set { SetProperty(ref _secretKeyConfirmation, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Shipping Shipping
        {
            get { return _shipping; }

            set { SetProperty(ref _shipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceId
        {
            get { return _sourceId; }

            set { SetProperty(ref _sourceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorSuffix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorSuffix
        {
            get { return _statementDescriptorSuffix; }

            set { SetProperty(ref _statementDescriptorSuffix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferGroup")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferGroup
        {
            get { return _transferGroup; }

            set { SetProperty(ref _transferGroup, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAmountDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentAmountDetailsTip _tip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAmountDetailsTip Tip
        {
            get { return _tip; }

            set { SetProperty(ref _tip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAmountDetailsTip : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAsyncWorkflows : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentAsyncWorkflowsInputs _inputs;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAsyncWorkflowsInputs Inputs
        {
            get { return _inputs; }

            set { SetProperty(ref _inputs, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAsyncWorkflowsInputs : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentAsyncWorkflowsInputsTax _tax;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentAsyncWorkflowsInputsTax Tax
        {
            get { return _tax; }

            set { SetProperty(ref _tax, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAsyncWorkflowsInputsTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _calculation;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("calculation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Calculation
        {
            get { return _calculation; }

            set { SetProperty(ref _calculation, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentAutomaticPaymentMethods : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _allowRedirects;
        private bool _enabled;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowRedirects")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AllowRedirects
        {
            get { return _allowRedirects; }

            set { SetProperty(ref _allowRedirects, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextAction : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentNextActionAlipayHandleRedirect _alipayHandleRedirect;
        private PaymentIntentNextActionBoletoDisplayDetails _boletoDisplayDetails;
        private PaymentIntentNextActionCardAwaitNotification _cardAwaitNotification;
        private PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode _cashappHandleRedirectOrDisplayQrCode;
        private PaymentIntentNextActionDisplayBankTransferInstructions _displayBankTransferInstructions;
        private PaymentIntentNextActionKonbiniDisplayDetails _konbiniDisplayDetails;
        private PaymentIntentNextActionMultibancoDisplayDetails _multibancoDisplayDetails;
        private PaymentIntentNextActionOxxoDisplayDetails _oxxoDisplayDetails;
        private PaymentIntentNextActionPaynowDisplayQrCode _paynowDisplayQrCode;
        private PaymentIntentNextActionPixDisplayQrCode _pixDisplayQrCode;
        private PaymentIntentNextActionPromptpayDisplayQrCode _promptpayDisplayQrCode;
        private PaymentIntentNextActionRedirectToUrl _redirectToUrl;
        private PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode _swishHandleRedirectOrDisplayQrCode;
        private string _type;
        private PaymentIntentNextActionUseStripeSdk _useStripeSdk;
        private PaymentIntentNextActionVerifyWithMicrodeposits _verifyWithMicrodeposits;
        private PaymentIntentNextActionWechatPayDisplayQrCode _wechatPayDisplayQrCode;
        private PaymentIntentNextActionWechatPayRedirectToAndroidApp _wechatPayRedirectToAndroidApp;
        private PaymentIntentNextActionWechatPayRedirectToIosApp _wechatPayRedirectToIosApp;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alipayHandleRedirect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionAlipayHandleRedirect AlipayHandleRedirect
        {
            get { return _alipayHandleRedirect; }

            set { SetProperty(ref _alipayHandleRedirect, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boletoDisplayDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionBoletoDisplayDetails BoletoDisplayDetails
        {
            get { return _boletoDisplayDetails; }

            set { SetProperty(ref _boletoDisplayDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardAwaitNotification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionCardAwaitNotification CardAwaitNotification
        {
            get { return _cardAwaitNotification; }

            set { SetProperty(ref _cardAwaitNotification, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashappHandleRedirectOrDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode CashappHandleRedirectOrDisplayQrCode
        {
            get { return _cashappHandleRedirectOrDisplayQrCode; }

            set { SetProperty(ref _cashappHandleRedirectOrDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayBankTransferInstructions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructions DisplayBankTransferInstructions
        {
            get { return _displayBankTransferInstructions; }

            set { SetProperty(ref _displayBankTransferInstructions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbiniDisplayDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetails KonbiniDisplayDetails
        {
            get { return _konbiniDisplayDetails; }

            set { SetProperty(ref _konbiniDisplayDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibancoDisplayDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionMultibancoDisplayDetails MultibancoDisplayDetails
        {
            get { return _multibancoDisplayDetails; }

            set { SetProperty(ref _multibancoDisplayDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oxxoDisplayDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionOxxoDisplayDetails OxxoDisplayDetails
        {
            get { return _oxxoDisplayDetails; }

            set { SetProperty(ref _oxxoDisplayDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynowDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionPaynowDisplayQrCode PaynowDisplayQrCode
        {
            get { return _paynowDisplayQrCode; }

            set { SetProperty(ref _paynowDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pixDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionPixDisplayQrCode PixDisplayQrCode
        {
            get { return _pixDisplayQrCode; }

            set { SetProperty(ref _pixDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promptpayDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionPromptpayDisplayQrCode PromptpayDisplayQrCode
        {
            get { return _promptpayDisplayQrCode; }

            set { SetProperty(ref _promptpayDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("redirectToUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionRedirectToUrl RedirectToUrl
        {
            get { return _redirectToUrl; }

            set { SetProperty(ref _redirectToUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swishHandleRedirectOrDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode SwishHandleRedirectOrDisplayQrCode
        {
            get { return _swishHandleRedirectOrDisplayQrCode; }

            set { SetProperty(ref _swishHandleRedirectOrDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("useStripeSdk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionUseStripeSdk UseStripeSdk
        {
            get { return _useStripeSdk; }

            set { SetProperty(ref _useStripeSdk, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifyWithMicrodeposits")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionVerifyWithMicrodeposits VerifyWithMicrodeposits
        {
            get { return _verifyWithMicrodeposits; }

            set { SetProperty(ref _verifyWithMicrodeposits, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPayDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionWechatPayDisplayQrCode WechatPayDisplayQrCode
        {
            get { return _wechatPayDisplayQrCode; }

            set { SetProperty(ref _wechatPayDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPayRedirectToAndroidApp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionWechatPayRedirectToAndroidApp WechatPayRedirectToAndroidApp
        {
            get { return _wechatPayRedirectToAndroidApp; }

            set { SetProperty(ref _wechatPayRedirectToAndroidApp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPayRedirectToIosApp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionWechatPayRedirectToIosApp WechatPayRedirectToIosApp
        {
            get { return _wechatPayRedirectToIosApp; }

            set { SetProperty(ref _wechatPayRedirectToIosApp, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionAlipayHandleRedirect : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _nativeData;
        private string _nativeUrl;
        private string _returnUrl;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nativeData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NativeData
        {
            get { return _nativeData; }

            set { SetProperty(ref _nativeData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nativeUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NativeUrl
        {
            get { return _nativeUrl; }

            set { SetProperty(ref _nativeUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionBoletoDisplayDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _expiresAt;
        private string _hostedVoucherUrl;
        private string _number;
        private string _pdf;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVoucherUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVoucherUrl
        {
            get { return _hostedVoucherUrl; }

            set { SetProperty(ref _hostedVoucherUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("number")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Number
        {
            get { return _number; }

            set { SetProperty(ref _number, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pdf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Pdf
        {
            get { return _pdf; }

            set { SetProperty(ref _pdf, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionCardAwaitNotification : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _chargeAttemptAt;
        private bool? _customerApprovalRequired;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeAttemptAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ChargeAttemptAt
        {
            get { return _chargeAttemptAt; }

            set { SetProperty(ref _chargeAttemptAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerApprovalRequired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? CustomerApprovalRequired
        {
            get { return _customerApprovalRequired; }

            set { SetProperty(ref _customerApprovalRequired, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _hostedInstructionsUrl;
        private string _mobileAuthUrl;
        private PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode _qrCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobileAuthUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MobileAuthUrl
        {
            get { return _mobileAuthUrl; }

            set { SetProperty(ref _mobileAuthUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode QrCode
        {
            get { return _qrCode; }

            set { SetProperty(ref _qrCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _expiresAt;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountRemaining;
        private string _currency;
        private System.Collections.Generic.ICollection<PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddress> _financialAddresses;
        private string _hostedInstructionsUrl;
        private string _reference;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRemaining")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountRemaining
        {
            get { return _amountRemaining; }

            set { SetProperty(ref _amountRemaining, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialAddresses")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddress> FinancialAddresses
        {
            get { return _financialAddresses; }

            set { SetProperty(ref _financialAddresses, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddress : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressAba _aba;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressIban _iban;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSortCode _sortCode;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSpei _spei;
        private System.Collections.Generic.ICollection<string> _supportedNetworks;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSwift _swift;
        private string _type;
        private PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressZengin _zengin;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("aba")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressAba Aba
        {
            get { return _aba; }

            set { SetProperty(ref _aba, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iban")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressIban Iban
        {
            get { return _iban; }

            set { SetProperty(ref _iban, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSortCode SortCode
        {
            get { return _sortCode; }

            set { SetProperty(ref _sortCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("spei")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSpei Spei
        {
            get { return _spei; }

            set { SetProperty(ref _spei, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportedNetworks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> SupportedNetworks
        {
            get { return _supportedNetworks; }

            set { SetProperty(ref _supportedNetworks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swift")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSwift Swift
        {
            get { return _swift; }

            set { SetProperty(ref _swift, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zengin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressZengin Zengin
        {
            get { return _zengin; }

            set { SetProperty(ref _zengin, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressAba : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private string _accountNumber;
        private string _accountType;
        private Address _bankAddress;
        private string _bankName;
        private string _routingNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RoutingNumber
        {
            get { return _routingNumber; }

            set { SetProperty(ref _routingNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressIban : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private Address _bankAddress;
        private string _bic;
        private string _country;
        private string _iban;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iban")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iban
        {
            get { return _iban; }

            set { SetProperty(ref _iban, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSortCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private string _accountNumber;
        private Address _bankAddress;
        private string _sortCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SortCode
        {
            get { return _sortCode; }

            set { SetProperty(ref _sortCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSpei : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private Address _bankAddress;
        private string _bankCode;
        private string _bankName;
        private string _clabe;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("clabe")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Clabe
        {
            get { return _clabe; }

            set { SetProperty(ref _clabe, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSwift : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private string _accountNumber;
        private string _accountType;
        private Address _bankAddress;
        private string _bankName;
        private string _swiftCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swiftCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SwiftCode
        {
            get { return _swiftCode; }

            set { SetProperty(ref _swiftCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressZengin : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _accountHolderAddress;
        private string _accountHolderName;
        private string _accountNumber;
        private string _accountType;
        private Address _bankAddress;
        private string _bankCode;
        private string _bankName;
        private string _branchCode;
        private string _branchName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address AccountHolderAddress
        {
            get { return _accountHolderAddress; }

            set { SetProperty(ref _accountHolderAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderName
        {
            get { return _accountHolderName; }

            set { SetProperty(ref _accountHolderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BankAddress
        {
            get { return _bankAddress; }

            set { SetProperty(ref _bankAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("branchCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BranchCode
        {
            get { return _branchCode; }

            set { SetProperty(ref _branchCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("branchName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BranchName
        {
            get { return _branchName; }

            set { SetProperty(ref _branchName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _expiresAt;
        private string _hostedVoucherUrl;
        private PaymentIntentNextActionKonbiniDisplayDetailsStores _stores;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVoucherUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVoucherUrl
        {
            get { return _hostedVoucherUrl; }

            set { SetProperty(ref _hostedVoucherUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stores")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetailsStores Stores
        {
            get { return _stores; }

            set { SetProperty(ref _stores, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetailsStores : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentNextActionKonbiniDisplayDetailsStoresFamilymart _familymart;
        private PaymentIntentNextActionKonbiniDisplayDetailsStoresLawson _lawson;
        private PaymentIntentNextActionKonbiniDisplayDetailsStoresMinistop _ministop;
        private PaymentIntentNextActionKonbiniDisplayDetailsStoresSeicomart _seicomart;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("familymart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetailsStoresFamilymart Familymart
        {
            get { return _familymart; }

            set { SetProperty(ref _familymart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lawson")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetailsStoresLawson Lawson
        {
            get { return _lawson; }

            set { SetProperty(ref _lawson, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ministop")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetailsStoresMinistop Ministop
        {
            get { return _ministop; }

            set { SetProperty(ref _ministop, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("seicomart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionKonbiniDisplayDetailsStoresSeicomart Seicomart
        {
            get { return _seicomart; }

            set { SetProperty(ref _seicomart, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetailsStoresFamilymart : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _confirmationNumber;
        private string _paymentCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationNumber
        {
            get { return _confirmationNumber; }

            set { SetProperty(ref _confirmationNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentCode
        {
            get { return _paymentCode; }

            set { SetProperty(ref _paymentCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetailsStoresLawson : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _confirmationNumber;
        private string _paymentCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationNumber
        {
            get { return _confirmationNumber; }

            set { SetProperty(ref _confirmationNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentCode
        {
            get { return _paymentCode; }

            set { SetProperty(ref _paymentCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetailsStoresMinistop : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _confirmationNumber;
        private string _paymentCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationNumber
        {
            get { return _confirmationNumber; }

            set { SetProperty(ref _confirmationNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentCode
        {
            get { return _paymentCode; }

            set { SetProperty(ref _paymentCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionKonbiniDisplayDetailsStoresSeicomart : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _confirmationNumber;
        private string _paymentCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationNumber
        {
            get { return _confirmationNumber; }

            set { SetProperty(ref _confirmationNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentCode
        {
            get { return _paymentCode; }

            set { SetProperty(ref _paymentCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionMultibancoDisplayDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _entity;
        private System.DateTimeOffset? _expiresAt;
        private string _hostedVoucherUrl;
        private string _reference;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("entity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Entity
        {
            get { return _entity; }

            set { SetProperty(ref _entity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVoucherUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVoucherUrl
        {
            get { return _hostedVoucherUrl; }

            set { SetProperty(ref _hostedVoucherUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionOxxoDisplayDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _expiresAfter;
        private string _hostedVoucherUrl;
        private string _number;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAfter
        {
            get { return _expiresAfter; }

            set { SetProperty(ref _expiresAfter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVoucherUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVoucherUrl
        {
            get { return _hostedVoucherUrl; }

            set { SetProperty(ref _hostedVoucherUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("number")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Number
        {
            get { return _number; }

            set { SetProperty(ref _number, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionPaynowDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _data;
        private string _hostedInstructionsUrl;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Data
        {
            get { return _data; }

            set { SetProperty(ref _data, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionPixDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _data;
        private System.DateTimeOffset _expiresAt;
        private string _hostedInstructionsUrl;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Data
        {
            get { return _data; }

            set { SetProperty(ref _data, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionPromptpayDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _data;
        private string _hostedInstructionsUrl;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Data
        {
            get { return _data; }

            set { SetProperty(ref _data, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionRedirectToUrl : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _returnUrl;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _hostedInstructionsUrl;
        private string _mobileAuthUrl;
        private PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCodeQrCode _qrCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobileAuthUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MobileAuthUrl
        {
            get { return _mobileAuthUrl; }

            set { SetProperty(ref _mobileAuthUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCodeQrCode QrCode
        {
            get { return _qrCode; }

            set { SetProperty(ref _qrCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCodeQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _data;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Data
        {
            get { return _data; }

            set { SetProperty(ref _data, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionUseStripeSdk : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionVerifyWithMicrodeposits : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _arrivalDate;
        private string _hostedVerificationUrl;
        private string _microdepositType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("arrivalDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ArrivalDate
        {
            get { return _arrivalDate; }

            set { SetProperty(ref _arrivalDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVerificationUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVerificationUrl
        {
            get { return _hostedVerificationUrl; }

            set { SetProperty(ref _hostedVerificationUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("microdepositType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MicrodepositType
        {
            get { return _microdepositType; }

            set { SetProperty(ref _microdepositType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionWechatPayDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _data;
        private string _hostedInstructionsUrl;
        private string _imageDataUrl;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Data
        {
            get { return _data; }

            set { SetProperty(ref _data, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageDataUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageDataUrl
        {
            get { return _imageDataUrl; }

            set { SetProperty(ref _imageDataUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionWechatPayRedirectToAndroidApp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _appId;
        private string _nonceStr;
        private string _package;
        private string _partnerId;
        private string _prepayId;
        private string _sign;
        private string _timestamp;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("appId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AppId
        {
            get { return _appId; }

            set { SetProperty(ref _appId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nonceStr")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NonceStr
        {
            get { return _nonceStr; }

            set { SetProperty(ref _nonceStr, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("package")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Package
        {
            get { return _package; }

            set { SetProperty(ref _package, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("partnerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PartnerId
        {
            get { return _partnerId; }

            set { SetProperty(ref _partnerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prepayId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PrepayId
        {
            get { return _prepayId; }

            set { SetProperty(ref _prepayId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sign")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Sign
        {
            get { return _sign; }

            set { SetProperty(ref _sign, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentNextActionWechatPayRedirectToIosApp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _nativeUrl;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nativeUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NativeUrl
        {
            get { return _nativeUrl; }

            set { SetProperty(ref _nativeUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentDetailsCarRental _carRental;
        private PaymentIntentPaymentDetailsEventDetails _eventDetails;
        private PaymentIntentPaymentDetailsSubscription _subscription;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carRental")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsCarRental CarRental
        {
            get { return _carRental; }

            set { SetProperty(ref _carRental, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eventDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsEventDetails EventDetails
        {
            get { return _eventDetails; }

            set { SetProperty(ref _eventDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsSubscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsCarRental : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentDetailsCarRentalAffiliate _affiliate;
        private string _bookingNumber;
        private string _carClassCode;
        private string _carMake;
        private string _carModel;
        private string _company;
        private string _customerServicePhoneNumber;
        private long _daysRented;
        private PaymentIntentPaymentDetailsCarRentalDelivery _delivery;
        private System.Collections.Generic.ICollection<PaymentIntentPaymentDetailsCarRentalDriver> _drivers;
        private System.Collections.Generic.ICollection<string> _extraCharges;
        private bool _noShow;
        private Address _pickupAddress;
        private System.DateTimeOffset _pickupAt;
        private long _rateAmount;
        private string _rateInterval;
        private string _renterName;
        private Address _returnAddress;
        private System.DateTimeOffset _returnAt;
        private bool _taxExempt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affiliate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsCarRentalAffiliate Affiliate
        {
            get { return _affiliate; }

            set { SetProperty(ref _affiliate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bookingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BookingNumber
        {
            get { return _bookingNumber; }

            set { SetProperty(ref _bookingNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carClassCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CarClassCode
        {
            get { return _carClassCode; }

            set { SetProperty(ref _carClassCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carMake")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CarMake
        {
            get { return _carMake; }

            set { SetProperty(ref _carMake, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carModel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CarModel
        {
            get { return _carModel; }

            set { SetProperty(ref _carModel, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("company")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Company
        {
            get { return _company; }

            set { SetProperty(ref _company, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerServicePhoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerServicePhoneNumber
        {
            get { return _customerServicePhoneNumber; }

            set { SetProperty(ref _customerServicePhoneNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysRented")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long DaysRented
        {
            get { return _daysRented; }

            set { SetProperty(ref _daysRented, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("delivery")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsCarRentalDelivery Delivery
        {
            get { return _delivery; }

            set { SetProperty(ref _delivery, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("drivers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PaymentIntentPaymentDetailsCarRentalDriver> Drivers
        {
            get { return _drivers; }

            set { SetProperty(ref _drivers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("extraCharges")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> ExtraCharges
        {
            get { return _extraCharges; }

            set { SetProperty(ref _extraCharges, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("noShow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool NoShow
        {
            get { return _noShow; }

            set { SetProperty(ref _noShow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pickupAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address PickupAddress
        {
            get { return _pickupAddress; }

            set { SetProperty(ref _pickupAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pickupAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PickupAt
        {
            get { return _pickupAt; }

            set { SetProperty(ref _pickupAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rateAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long RateAmount
        {
            get { return _rateAmount; }

            set { SetProperty(ref _rateAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rateInterval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RateInterval
        {
            get { return _rateInterval; }

            set { SetProperty(ref _rateInterval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("renterName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RenterName
        {
            get { return _renterName; }

            set { SetProperty(ref _renterName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address ReturnAddress
        {
            get { return _returnAddress; }

            set { SetProperty(ref _returnAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ReturnAt
        {
            get { return _returnAt; }

            set { SetProperty(ref _returnAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxExempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool TaxExempt
        {
            get { return _taxExempt; }

            set { SetProperty(ref _taxExempt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsCarRentalAffiliate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsCarRentalDelivery : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _mode;
        private PaymentIntentPaymentDetailsCarRentalDeliveryRecipient _recipient;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mode
        {
            get { return _mode; }

            set { SetProperty(ref _mode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recipient")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsCarRentalDeliveryRecipient Recipient
        {
            get { return _recipient; }

            set { SetProperty(ref _recipient, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsCarRentalDeliveryRecipient : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsCarRentalDriver : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsEventDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _accessControlledVenue;
        private Address _address;
        private PaymentIntentPaymentDetailsEventDetailsAffiliate _affiliate;
        private string _company;
        private PaymentIntentPaymentDetailsEventDetailsDelivery _delivery;
        private System.DateTimeOffset _endsAt;
        private string _genre;
        private string _name;
        private System.DateTimeOffset _startsAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accessControlledVenue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AccessControlledVenue
        {
            get { return _accessControlledVenue; }

            set { SetProperty(ref _accessControlledVenue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affiliate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsEventDetailsAffiliate Affiliate
        {
            get { return _affiliate; }

            set { SetProperty(ref _affiliate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("company")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Company
        {
            get { return _company; }

            set { SetProperty(ref _company, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("delivery")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsEventDetailsDelivery Delivery
        {
            get { return _delivery; }

            set { SetProperty(ref _delivery, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EndsAt
        {
            get { return _endsAt; }

            set { SetProperty(ref _endsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("genre")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Genre
        {
            get { return _genre; }

            set { SetProperty(ref _genre, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartsAt
        {
            get { return _startsAt; }

            set { SetProperty(ref _startsAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsEventDetailsAffiliate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsEventDetailsDelivery : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _mode;
        private PaymentIntentPaymentDetailsEventDetailsDeliveryRecipient _recipient;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mode
        {
            get { return _mode; }

            set { SetProperty(ref _mode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recipient")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsEventDetailsDeliveryRecipient Recipient
        {
            get { return _recipient; }

            set { SetProperty(ref _recipient, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsEventDetailsDeliveryRecipient : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsSubscription : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentDetailsSubscriptionAffiliate _affiliate;
        private bool _autoRenewal;
        private PaymentIntentPaymentDetailsSubscriptionBillingInterval _billingInterval;
        private System.DateTimeOffset _endsAt;
        private string _name;
        private System.DateTimeOffset _startsAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affiliate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsSubscriptionAffiliate Affiliate
        {
            get { return _affiliate; }

            set { SetProperty(ref _affiliate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("autoRenewal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AutoRenewal
        {
            get { return _autoRenewal; }

            set { SetProperty(ref _autoRenewal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingInterval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentDetailsSubscriptionBillingInterval BillingInterval
        {
            get { return _billingInterval; }

            set { SetProperty(ref _billingInterval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EndsAt
        {
            get { return _endsAt; }

            set { SetProperty(ref _endsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartsAt
        {
            get { return _startsAt; }

            set { SetProperty(ref _startsAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsSubscriptionAffiliate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentDetailsSubscriptionBillingInterval : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _count;
        private string _interval;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("count")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Count
        {
            get { return _count; }

            set { SetProperty(ref _count, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodConfigurationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _parent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("parent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Parent
        {
            get { return _parent; }

            set { SetProperty(ref _parent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsAcssDebit _acssDebit;
        private PaymentIntentPaymentMethodOptionsAffirm _affirm;
        private PaymentIntentPaymentMethodOptionsAfterpayClearpay _afterpayClearpay;
        private PaymentIntentPaymentMethodOptionsAlipay _alipay;
        private PaymentIntentPaymentMethodOptionsAlma _alma;
        private PaymentIntentPaymentMethodOptionsAmazonPay _amazonPay;
        private PaymentIntentPaymentMethodOptionsAuBecsDebit _auBecsDebit;
        private PaymentIntentPaymentMethodOptionsBacsDebit _bacsDebit;
        private PaymentIntentPaymentMethodOptionsBancontact _bancontact;
        private PaymentIntentPaymentMethodOptionsBlik _blik;
        private PaymentIntentPaymentMethodOptionsBoleto _boleto;
        private PaymentIntentPaymentMethodOptionsCard _card;
        private PaymentIntentPaymentMethodOptionsCardPresent _cardPresent;
        private PaymentIntentPaymentMethodOptionsCashapp _cashapp;
        private PaymentIntentPaymentMethodOptionsCustomerBalance _customerBalance;
        private PaymentIntentPaymentMethodOptionsEps _eps;
        private PaymentIntentPaymentMethodOptionsFpx _fpx;
        private PaymentIntentPaymentMethodOptionsGiropay _giropay;
        private PaymentIntentPaymentMethodOptionsGopay _gopay;
        private PaymentIntentPaymentMethodOptionsGrabpay _grabpay;
        private PaymentIntentPaymentMethodOptionsIdBankTransfer _idBankTransfer;
        private PaymentIntentPaymentMethodOptionsIdeal _ideal;
        private PaymentIntentPaymentMethodOptionsInteracPresent _interacPresent;
        private PaymentIntentPaymentMethodOptionsKakaoPay _kakaoPay;
        private PaymentIntentPaymentMethodOptionsKlarna _klarna;
        private PaymentIntentPaymentMethodOptionsKonbini _konbini;
        private PaymentIntentPaymentMethodOptionsKrCard _krCard;
        private PaymentIntentPaymentMethodOptionsLink _link;
        private PaymentIntentPaymentMethodOptionsMbWay _mbWay;
        private PaymentIntentPaymentMethodOptionsMobilepay _mobilepay;
        private PaymentIntentPaymentMethodOptionsMultibanco _multibanco;
        private PaymentIntentPaymentMethodOptionsNaverPay _naverPay;
        private PaymentIntentPaymentMethodOptionsOxxo _oxxo;
        private PaymentIntentPaymentMethodOptionsP24 _p24;
        private PaymentIntentPaymentMethodOptionsPayco _payco;
        private PaymentIntentPaymentMethodOptionsPaynow _paynow;
        private PaymentIntentPaymentMethodOptionsPaypal _paypal;
        private PaymentIntentPaymentMethodOptionsPayto _payto;
        private PaymentIntentPaymentMethodOptionsPix _pix;
        private PaymentIntentPaymentMethodOptionsPromptpay _promptpay;
        private PaymentIntentPaymentMethodOptionsQris _qris;
        private PaymentIntentPaymentMethodOptionsRechnung _rechnung;
        private PaymentIntentPaymentMethodOptionsRevolutPay _revolutPay;
        private PaymentIntentPaymentMethodOptionsSamsungPay _samsungPay;
        private PaymentIntentPaymentMethodOptionsSepaDebit _sepaDebit;
        private PaymentIntentPaymentMethodOptionsShopeepay _shopeepay;
        private PaymentIntentPaymentMethodOptionsSofort _sofort;
        private PaymentIntentPaymentMethodOptionsSwish _swish;
        private PaymentIntentPaymentMethodOptionsTwint _twint;
        private PaymentIntentPaymentMethodOptionsUsBankAccount _usBankAccount;
        private PaymentIntentPaymentMethodOptionsWechatPay _wechatPay;
        private PaymentIntentPaymentMethodOptionsZip _zip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affirm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAffirm Affirm
        {
            get { return _affirm; }

            set { SetProperty(ref _affirm, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("afterpayClearpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAfterpayClearpay AfterpayClearpay
        {
            get { return _afterpayClearpay; }

            set { SetProperty(ref _afterpayClearpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alipay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAlipay Alipay
        {
            get { return _alipay; }

            set { SetProperty(ref _alipay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alma")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAlma Alma
        {
            get { return _alma; }

            set { SetProperty(ref _alma, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAuBecsDebit AuBecsDebit
        {
            get { return _auBecsDebit; }

            set { SetProperty(ref _auBecsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blik")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsBlik Blik
        {
            get { return _blik; }

            set { SetProperty(ref _blik, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boleto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsBoleto Boleto
        {
            get { return _boleto; }

            set { SetProperty(ref _boleto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCustomerBalance CustomerBalance
        {
            get { return _customerBalance; }

            set { SetProperty(ref _customerBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eps")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsEps Eps
        {
            get { return _eps; }

            set { SetProperty(ref _eps, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fpx")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsFpx Fpx
        {
            get { return _fpx; }

            set { SetProperty(ref _fpx, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giropay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsGiropay Giropay
        {
            get { return _giropay; }

            set { SetProperty(ref _giropay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gopay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsGopay Gopay
        {
            get { return _gopay; }

            set { SetProperty(ref _gopay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("grabpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsGrabpay Grabpay
        {
            get { return _grabpay; }

            set { SetProperty(ref _grabpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ideal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsIdeal Ideal
        {
            get { return _ideal; }

            set { SetProperty(ref _ideal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interacPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsInteracPresent InteracPresent
        {
            get { return _interacPresent; }

            set { SetProperty(ref _interacPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsKakaoPay KakaoPay
        {
            get { return _kakaoPay; }

            set { SetProperty(ref _kakaoPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarna")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsKlarna Klarna
        {
            get { return _klarna; }

            set { SetProperty(ref _klarna, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbini")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsKonbini Konbini
        {
            get { return _konbini; }

            set { SetProperty(ref _konbini, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsKrCard KrCard
        {
            get { return _krCard; }

            set { SetProperty(ref _krCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mbWay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsMbWay MbWay
        {
            get { return _mbWay; }

            set { SetProperty(ref _mbWay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobilepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsMobilepay Mobilepay
        {
            get { return _mobilepay; }

            set { SetProperty(ref _mobilepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibanco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsMultibanco Multibanco
        {
            get { return _multibanco; }

            set { SetProperty(ref _multibanco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("naverPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsNaverPay NaverPay
        {
            get { return _naverPay; }

            set { SetProperty(ref _naverPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oxxo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsOxxo Oxxo
        {
            get { return _oxxo; }

            set { SetProperty(ref _oxxo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("p24")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsP24 P24
        {
            get { return _p24; }

            set { SetProperty(ref _p24, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPayco Payco
        {
            get { return _payco; }

            set { SetProperty(ref _payco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPaynow Paynow
        {
            get { return _paynow; }

            set { SetProperty(ref _paynow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPix Pix
        {
            get { return _pix; }

            set { SetProperty(ref _pix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promptpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPromptpay Promptpay
        {
            get { return _promptpay; }

            set { SetProperty(ref _promptpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qris")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsQris Qris
        {
            get { return _qris; }

            set { SetProperty(ref _qris, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rechnung")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsRechnung Rechnung
        {
            get { return _rechnung; }

            set { SetProperty(ref _rechnung, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsRevolutPay RevolutPay
        {
            get { return _revolutPay; }

            set { SetProperty(ref _revolutPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsSamsungPay SamsungPay
        {
            get { return _samsungPay; }

            set { SetProperty(ref _samsungPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shopeepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsShopeepay Shopeepay
        {
            get { return _shopeepay; }

            set { SetProperty(ref _shopeepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofort")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsSofort Sofort
        {
            get { return _sofort; }

            set { SetProperty(ref _sofort, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swish")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsSwish Swish
        {
            get { return _swish; }

            set { SetProperty(ref _swish, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsTwint Twint
        {
            get { return _twint; }

            set { SetProperty(ref _twint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsWechatPay WechatPay
        {
            get { return _wechatPay; }

            set { SetProperty(ref _wechatPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsZip Zip
        {
            get { return _zip; }

            set { SetProperty(ref _zip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsAcssDebitMandateOptions _mandateOptions;
        private string _setupFutureUsage;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsAcssDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAcssDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _customMandateUrl;
        private string _intervalDescription;
        private string _paymentSchedule;
        private string _transactionType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customMandateUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomMandateUrl
        {
            get { return _customMandateUrl; }

            set { SetProperty(ref _customMandateUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IntervalDescription
        {
            get { return _intervalDescription; }

            set { SetProperty(ref _intervalDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionType
        {
            get { return _transactionType; }

            set { SetProperty(ref _transactionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAffirm : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _preferredLocale;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLocale
        {
            get { return _preferredLocale; }

            set { SetProperty(ref _preferredLocale, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAfterpayClearpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _reference;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAlipay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAlma : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsAuBecsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsBacsDebitMandateOptions _mandateOptions;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsBacsDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsBacsDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _preferredLanguage;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsBlik : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsBoleto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _expiresAfterDays;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfterDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpiresAfterDays
        {
            get { return _expiresAfterDays; }

            set { SetProperty(ref _expiresAfterDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private PaymentIntentPaymentMethodOptionsCardInstallments _installments;
        private PaymentIntentPaymentMethodOptionsCardMandateOptions _mandateOptions;
        private string _network;
        private string _requestDecrementalAuthorization;
        private string _requestExtendedAuthorization;
        private string _requestIncrementalAuthorization;
        private string _requestMulticapture;
        private string _requestOvercapture;
        private string _requestPartialAuthorization;
        private string _requestThreeDSecure;
        private bool _requireCvcRecollection;
        private string _setupFutureUsage;
        private string _statementDescriptorSuffixKana;
        private string _statementDescriptorSuffixKanji;
        private PaymentIntentPaymentMethodOptionsCardStatementDetails _statementDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("installments")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardInstallments Installments
        {
            get { return _installments; }

            set { SetProperty(ref _installments, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestDecrementalAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestDecrementalAuthorization
        {
            get { return _requestDecrementalAuthorization; }

            set { SetProperty(ref _requestDecrementalAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestExtendedAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestExtendedAuthorization
        {
            get { return _requestExtendedAuthorization; }

            set { SetProperty(ref _requestExtendedAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestIncrementalAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestIncrementalAuthorization
        {
            get { return _requestIncrementalAuthorization; }

            set { SetProperty(ref _requestIncrementalAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestMulticapture")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestMulticapture
        {
            get { return _requestMulticapture; }

            set { SetProperty(ref _requestMulticapture, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestOvercapture")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestOvercapture
        {
            get { return _requestOvercapture; }

            set { SetProperty(ref _requestOvercapture, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestPartialAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestPartialAuthorization
        {
            get { return _requestPartialAuthorization; }

            set { SetProperty(ref _requestPartialAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestThreeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestThreeDSecure
        {
            get { return _requestThreeDSecure; }

            set { SetProperty(ref _requestThreeDSecure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requireCvcRecollection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool RequireCvcRecollection
        {
            get { return _requireCvcRecollection; }

            set { SetProperty(ref _requireCvcRecollection, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorSuffixKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorSuffixKana
        {
            get { return _statementDescriptorSuffixKana; }

            set { SetProperty(ref _statementDescriptorSuffixKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptorSuffixKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptorSuffixKanji
        {
            get { return _statementDescriptorSuffixKanji; }

            set { SetProperty(ref _statementDescriptorSuffixKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardStatementDetails StatementDetails
        {
            get { return _statementDetails; }

            set { SetProperty(ref _statementDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardInstallments : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<PaymentIntentPaymentMethodOptionsCardInstallmentsPlan> _availablePlans;
        private bool _enabled;
        private PaymentIntentPaymentMethodOptionsCardInstallmentsPlan _plan;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("availablePlans")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PaymentIntentPaymentMethodOptionsCardInstallmentsPlan> AvailablePlans
        {
            get { return _availablePlans; }

            set { SetProperty(ref _availablePlans, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardInstallmentsPlan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardInstallmentsPlan : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _count;
        private string _interval;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("count")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Count
        {
            get { return _count; }

            set { SetProperty(ref _count, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _amountType;
        private string _description;
        private System.DateTimeOffset? _endDate;
        private string _interval;
        private long? _intervalCount;
        private string _reference;
        private System.DateTimeOffset _startDate;
        private System.Collections.Generic.ICollection<string> _supportedTypes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportedTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> SupportedTypes
        {
            get { return _supportedTypes; }

            set { SetProperty(ref _supportedTypes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool? _requestExtendedAuthorization;
        private bool? _requestIncrementalAuthorizationSupport;
        private PaymentIntentPaymentMethodOptionsCardPresentRouting _routing;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestExtendedAuthorization")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? RequestExtendedAuthorization
        {
            get { return _requestExtendedAuthorization; }

            set { SetProperty(ref _requestExtendedAuthorization, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestIncrementalAuthorizationSupport")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? RequestIncrementalAuthorizationSupport
        {
            get { return _requestIncrementalAuthorizationSupport; }

            set { SetProperty(ref _requestIncrementalAuthorizationSupport, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardPresentRouting Routing
        {
            get { return _routing; }

            set { SetProperty(ref _routing, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardPresentRouting : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _requestedPriority;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestedPriority")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestedPriority
        {
            get { return _requestedPriority; }

            set { SetProperty(ref _requestedPriority, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardStatementDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsCardStatementDetailsAddress _address;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCardStatementDetailsAddress Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCardStatementDetailsAddress : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCustomerBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransfer _bankTransfer;
        private string _fundingType;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransfer BankTransfer
        {
            get { return _bankTransfer; }

            set { SetProperty(ref _bankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fundingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FundingType
        {
            get { return _fundingType; }

            set { SetProperty(ref _fundingType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer _euBankTransfer;
        private System.Collections.Generic.ICollection<string> _requestedAddressTypes;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("euBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer EuBankTransfer
        {
            get { return _euBankTransfer; }

            set { SetProperty(ref _euBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestedAddressTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> RequestedAddressTypes
        {
            get { return _requestedAddressTypes; }

            set { SetProperty(ref _requestedAddressTypes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsEps : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsFpx : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsGiropay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsGopay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsGrabpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _expiresAfter;
        private System.DateTimeOffset? _expiresAt;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpiresAfter
        {
            get { return _expiresAfter; }

            set { SetProperty(ref _expiresAfter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsIdeal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsInteracPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsKakaoPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsKlarna : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _preferredLocale;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLocale
        {
            get { return _preferredLocale; }

            set { SetProperty(ref _preferredLocale, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsKonbini : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _confirmationNumber;
        private long? _expiresAfterDays;
        private System.DateTimeOffset? _expiresAt;
        private string _productDescription;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmationNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmationNumber
        {
            get { return _confirmationNumber; }

            set { SetProperty(ref _confirmationNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfterDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpiresAfterDays
        {
            get { return _expiresAfterDays; }

            set { SetProperty(ref _expiresAfterDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductDescription
        {
            get { return _productDescription; }

            set { SetProperty(ref _productDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsKrCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _persistentToken;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("persistentToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Obsolete]
        public string PersistentToken
        {
            get { return _persistentToken; }

            set { SetProperty(ref _persistentToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsMbWay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsMobilepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsMultibanco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsNaverPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsOxxo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _expiresAfterDays;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfterDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpiresAfterDays
        {
            get { return _expiresAfterDays; }

            set { SetProperty(ref _expiresAfterDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsP24 : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPayco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPaynow : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private System.Collections.Generic.ICollection<PaymentIntentPaymentMethodOptionsPaypalLineItem> _lineItems;
        private string _preferredLocale;
        private string _reference;
        private string _referenceId;
        private string _setupFutureUsage;
        private System.Collections.Generic.ICollection<string> _subsellers;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PaymentIntentPaymentMethodOptionsPaypalLineItem> LineItems
        {
            get { return _lineItems; }

            set { SetProperty(ref _lineItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLocale
        {
            get { return _preferredLocale; }

            set { SetProperty(ref _preferredLocale, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceId
        {
            get { return _referenceId; }

            set { SetProperty(ref _referenceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subsellers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Subsellers
        {
            get { return _subsellers; }

            set { SetProperty(ref _subsellers, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPaypalLineItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _category;
        private string _description;
        private string _name;
        private long _quantity;
        private string _sku;
        private string _soldBy;
        private PaymentIntentPaymentMethodOptionsPaypalLineItemTax _tax;
        private long _unitAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("category")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Category
        {
            get { return _category; }

            set { SetProperty(ref _category, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sku")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Sku
        {
            get { return _sku; }

            set { SetProperty(ref _sku, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("soldBy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SoldBy
        {
            get { return _soldBy; }

            set { SetProperty(ref _soldBy, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPaypalLineItemTax Tax
        {
            get { return _tax; }

            set { SetProperty(ref _tax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPaypalLineItemTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _behavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("behavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Behavior
        {
            get { return _behavior; }

            set { SetProperty(ref _behavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsPaytoMandateOptions _mandateOptions;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsPaytoMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPaytoMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _amountType;
        private string _endDate;
        private string _paymentSchedule;
        private long? _paymentsPerPeriod;
        private string _purpose;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentsPerPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? PaymentsPerPeriod
        {
            get { return _paymentsPerPeriod; }

            set { SetProperty(ref _paymentsPerPeriod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("purpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPix : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _expiresAfterSeconds;
        private System.DateTimeOffset? _expiresAt;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAfterSeconds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpiresAfterSeconds
        {
            get { return _expiresAfterSeconds; }

            set { SetProperty(ref _expiresAfterSeconds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsPromptpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsQris : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsRechnung : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsRevolutPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsSamsungPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _captureMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CaptureMethod
        {
            get { return _captureMethod; }

            set { SetProperty(ref _captureMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsSepaDebitMandateOptions _mandateOptions;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsSepaDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsSepaDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsShopeepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsSofort : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _preferredLanguage;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsSwish : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsTwint : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnections _financialConnections;
        private PaymentIntentPaymentMethodOptionsUsBankAccountMandateOptions _mandateOptions;
        private string _preferredSettlementSpeed;
        private string _setupFutureUsage;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialConnections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnections FinancialConnections
        {
            get { return _financialConnections; }

            set { SetProperty(ref _financialConnections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsUsBankAccountMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredSettlementSpeed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredSettlementSpeed
        {
            get { return _preferredSettlementSpeed; }

            set { SetProperty(ref _preferredSettlementSpeed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnections : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters _filters;
        private PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry _manualEntry;
        private System.Collections.Generic.ICollection<string> _permissions;
        private System.Collections.Generic.ICollection<string> _prefetch;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("filters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters Filters
        {
            get { return _filters; }

            set { SetProperty(ref _filters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("manualEntry")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry ManualEntry
        {
            get { return _manualEntry; }

            set { SetProperty(ref _manualEntry, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prefetch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Prefetch
        {
            get { return _prefetch; }

            set { SetProperty(ref _prefetch, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountSubcategories;
        private string _institution;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountSubcategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountSubcategories
        {
            get { return _accountSubcategories; }

            set { SetProperty(ref _accountSubcategories, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institution")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Institution
        {
            get { return _institution; }

            set { SetProperty(ref _institution, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _mode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mode
        {
            get { return _mode; }

            set { SetProperty(ref _mode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsUsBankAccountMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _collectionMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsWechatPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _appId;
        private string _client;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("appId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AppId
        {
            get { return _appId; }

            set { SetProperty(ref _appId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("client")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Client
        {
            get { return _client; }

            set { SetProperty(ref _client, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentPaymentMethodOptionsZip : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _setupFutureUsage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupFutureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupFutureUsage
        {
            get { return _setupFutureUsage; }

            set { SetProperty(ref _setupFutureUsage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentProcessing : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentProcessingCard _card;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentProcessingCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentProcessingCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentIntentProcessingCardCustomerNotification _customerNotification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerNotification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntentProcessingCardCustomerNotification CustomerNotification
        {
            get { return _customerNotification; }

            set { SetProperty(ref _customerNotification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentProcessingCardCustomerNotification : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool? _approvalRequested;
        private System.DateTimeOffset? _completesAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("approvalRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? ApprovalRequested
        {
            get { return _approvalRequested; }

            set { SetProperty(ref _approvalRequested, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("completesAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CompletesAt
        {
            get { return _completesAt; }

            set { SetProperty(ref _completesAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentIntentTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethod : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private PaymentMethodAcssDebit _acssDebit;
        private PaymentMethodAffirm _affirm;
        private PaymentMethodAfterpayClearpay _afterpayClearpay;
        private PaymentMethodAlipay _alipay;
        private string _allowRedisplay;
        private PaymentMethodAlma _alma;
        private PaymentMethodAmazonPay _amazonPay;
        private PaymentMethodAuBecsDebit _auBecsDebit;
        private PaymentMethodBacsDebit _bacsDebit;
        private PaymentMethodBancontact _bancontact;
        private PaymentMethodBillingDetails _billingDetails;
        private PaymentMethodBlik _blik;
        private PaymentMethodBoleto _boleto;
        private PaymentMethodCard _card;
        private PaymentMethodCardPresent _cardPresent;
        private PaymentMethodCashapp _cashapp;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private PaymentMethodCustomerBalance _customerBalance;
        private PaymentMethodEps _eps;
        private PaymentMethodFpx _fpx;
        private PaymentMethodGiropay _giropay;
        private PaymentMethodGopay _gopay;
        private PaymentMethodGrabpay _grabpay;
        private PaymentMethodIdBankTransfer _idBankTransfer;
        private PaymentMethodIdeal _ideal;
        private PaymentMethodInteracPresent _interacPresent;
        private PaymentMethodKakaoPay _kakaoPay;
        private PaymentMethodKlarna _klarna;
        private PaymentMethodKonbini _konbini;
        private PaymentMethodKrCard _krCard;
        private PaymentMethodLink _link;
        private bool _livemode;
        private PaymentMethodMbWay _mbWay;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private PaymentMethodMobilepay _mobilepay;
        private PaymentMethodMultibanco _multibanco;
        private PaymentMethodNaverPay _naverPay;
        private PaymentMethodOxxo _oxxo;
        private PaymentMethodP24 _p24;
        private PaymentMethodPayco _payco;
        private PaymentMethodPaynow _paynow;
        private PaymentMethodPaypal _paypal;
        private PaymentMethodPayto _payto;
        private PaymentMethodPix _pix;
        private PaymentMethodPromptpay _promptpay;
        private PaymentMethodQris _qris;
        private PaymentMethodRadarOptions _radarOptions;
        private PaymentMethodRechnung _rechnung;
        private PaymentMethodRevolutPay _revolutPay;
        private PaymentMethodSamsungPay _samsungPay;
        private PaymentMethodSepaDebit _sepaDebit;
        private PaymentMethodShopeepay _shopeepay;
        private PaymentMethodSofort _sofort;
        private PaymentMethodSwish _swish;
        private PaymentMethodTwint _twint;
        private string _type;
        private PaymentMethodUsBankAccount _usBankAccount;
        private PaymentMethodWechatPay _wechatPay;
        private PaymentMethodZip _zip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affirm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAffirm Affirm
        {
            get { return _affirm; }

            set { SetProperty(ref _affirm, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("afterpayClearpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAfterpayClearpay AfterpayClearpay
        {
            get { return _afterpayClearpay; }

            set { SetProperty(ref _afterpayClearpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alipay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAlipay Alipay
        {
            get { return _alipay; }

            set { SetProperty(ref _alipay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowRedisplay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AllowRedisplay
        {
            get { return _allowRedisplay; }

            set { SetProperty(ref _allowRedisplay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alma")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAlma Alma
        {
            get { return _alma; }

            set { SetProperty(ref _alma, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodAuBecsDebit AuBecsDebit
        {
            get { return _auBecsDebit; }

            set { SetProperty(ref _auBecsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBillingDetails BillingDetails
        {
            get { return _billingDetails; }

            set { SetProperty(ref _billingDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blik")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBlik Blik
        {
            get { return _blik; }

            set { SetProperty(ref _blik, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boleto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBoleto Boleto
        {
            get { return _boleto; }

            set { SetProperty(ref _boleto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCustomerBalance CustomerBalance
        {
            get { return _customerBalance; }

            set { SetProperty(ref _customerBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eps")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodEps Eps
        {
            get { return _eps; }

            set { SetProperty(ref _eps, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fpx")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodFpx Fpx
        {
            get { return _fpx; }

            set { SetProperty(ref _fpx, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giropay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodGiropay Giropay
        {
            get { return _giropay; }

            set { SetProperty(ref _giropay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gopay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodGopay Gopay
        {
            get { return _gopay; }

            set { SetProperty(ref _gopay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("grabpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodGrabpay Grabpay
        {
            get { return _grabpay; }

            set { SetProperty(ref _grabpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ideal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodIdeal Ideal
        {
            get { return _ideal; }

            set { SetProperty(ref _ideal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interacPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodInteracPresent InteracPresent
        {
            get { return _interacPresent; }

            set { SetProperty(ref _interacPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodKakaoPay KakaoPay
        {
            get { return _kakaoPay; }

            set { SetProperty(ref _kakaoPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarna")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodKlarna Klarna
        {
            get { return _klarna; }

            set { SetProperty(ref _klarna, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbini")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodKonbini Konbini
        {
            get { return _konbini; }

            set { SetProperty(ref _konbini, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodKrCard KrCard
        {
            get { return _krCard; }

            set { SetProperty(ref _krCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mbWay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodMbWay MbWay
        {
            get { return _mbWay; }

            set { SetProperty(ref _mbWay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobilepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodMobilepay Mobilepay
        {
            get { return _mobilepay; }

            set { SetProperty(ref _mobilepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibanco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodMultibanco Multibanco
        {
            get { return _multibanco; }

            set { SetProperty(ref _multibanco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("naverPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodNaverPay NaverPay
        {
            get { return _naverPay; }

            set { SetProperty(ref _naverPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("oxxo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodOxxo Oxxo
        {
            get { return _oxxo; }

            set { SetProperty(ref _oxxo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("p24")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodP24 P24
        {
            get { return _p24; }

            set { SetProperty(ref _p24, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPayco Payco
        {
            get { return _payco; }

            set { SetProperty(ref _payco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPaynow Paynow
        {
            get { return _paynow; }

            set { SetProperty(ref _paynow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPix Pix
        {
            get { return _pix; }

            set { SetProperty(ref _pix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promptpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodPromptpay Promptpay
        {
            get { return _promptpay; }

            set { SetProperty(ref _promptpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qris")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodQris Qris
        {
            get { return _qris; }

            set { SetProperty(ref _qris, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("radarOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodRadarOptions RadarOptions
        {
            get { return _radarOptions; }

            set { SetProperty(ref _radarOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rechnung")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodRechnung Rechnung
        {
            get { return _rechnung; }

            set { SetProperty(ref _rechnung, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodRevolutPay RevolutPay
        {
            get { return _revolutPay; }

            set { SetProperty(ref _revolutPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodSamsungPay SamsungPay
        {
            get { return _samsungPay; }

            set { SetProperty(ref _samsungPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shopeepay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodShopeepay Shopeepay
        {
            get { return _shopeepay; }

            set { SetProperty(ref _shopeepay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofort")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodSofort Sofort
        {
            get { return _sofort; }

            set { SetProperty(ref _sofort, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swish")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodSwish Swish
        {
            get { return _swish; }

            set { SetProperty(ref _swish, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodTwint Twint
        {
            get { return _twint; }

            set { SetProperty(ref _twint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodWechatPay WechatPay
        {
            get { return _wechatPay; }

            set { SetProperty(ref _wechatPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodZip Zip
        {
            get { return _zip; }

            set { SetProperty(ref _zip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankName;
        private string _fingerprint;
        private string _institutionNumber;
        private string _last4;
        private string _transitNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institutionNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InstitutionNumber
        {
            get { return _institutionNumber; }

            set { SetProperty(ref _institutionNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transitNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransitNumber
        {
            get { return _transitNumber; }

            set { SetProperty(ref _transitNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAffirm : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAfterpayClearpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAlipay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAlma : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodAuBecsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bsbNumber;
        private string _fingerprint;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bsbNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BsbNumber
        {
            get { return _bsbNumber; }

            set { SetProperty(ref _bsbNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _fingerprint;
        private string _last4;
        private string _sortCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sortCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SortCode
        {
            get { return _sortCode; }

            set { SetProperty(ref _sortCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBillingDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _address;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBillingDetailsResponse : Prism.Mvvm.BindableBase
    {
        private Address _address;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBlik : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodBoleto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _taxId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxId
        {
            get { return _taxId; }

            set { SetProperty(ref _taxId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private PaymentMethodCardChecks _checks;
        private string _country;
        private string _description;
        private string _displayBrand;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private PaymentMethodCardGeneratedFrom _generatedFrom;
        private string _iin;
        private string _issuer;
        private string _last4;
        private PaymentMethodCardNetworks _networks;
        private PaymentMethodCardThreeDSecureUsage _threeDSecureUsage;
        private PaymentMethodCardWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("checks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardChecks Checks
        {
            get { return _checks; }

            set { SetProperty(ref _checks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayBrand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayBrand
        {
            get { return _displayBrand; }

            set { SetProperty(ref _displayBrand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFrom GeneratedFrom
        {
            get { return _generatedFrom; }

            set { SetProperty(ref _generatedFrom, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardNetworks Networks
        {
            get { return _networks; }

            set { SetProperty(ref _networks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("threeDSecureUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardThreeDSecureUsage ThreeDSecureUsage
        {
            get { return _threeDSecureUsage; }

            set { SetProperty(ref _threeDSecureUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardChecks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _addressLine1Check;
        private string _addressPostalCodeCheck;
        private string _cvcCheck;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressLine1Check")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressLine1Check
        {
            get { return _addressLine1Check; }

            set { SetProperty(ref _addressLine1Check, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressPostalCodeCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressPostalCodeCheck
        {
            get { return _addressPostalCodeCheck; }

            set { SetProperty(ref _addressPostalCodeCheck, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cvcCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CvcCheck
        {
            get { return _cvcCheck; }

            set { SetProperty(ref _cvcCheck, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFrom : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _charge;
        private PaymentMethodCardGeneratedFromPaymentMethodDetails _paymentMethodDetails;
        private string _setupAttemptId;
        private SetupAttempt _setupAttempt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFromPaymentMethodDetails PaymentMethodDetails
        {
            get { return _paymentMethodDetails; }

            set { SetProperty(ref _paymentMethodDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupAttemptId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupAttemptId
        {
            get { return _setupAttemptId; }

            set { SetProperty(ref _setupAttemptId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupAttempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttempt SetupAttempt
        {
            get { return _setupAttempt; }

            set { SetProperty(ref _setupAttempt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFromPaymentMethodDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresent _cardPresent;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountAuthorized;
        private string _brand;
        private string _brandProduct;
        private System.DateTimeOffset _captureBefore;
        private string _cardholderName;
        private string _country;
        private string _description;
        private string _emvAuthData;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _generatedCard;
        private string _iin;
        private bool _incrementalAuthorizationSupported;
        private string _issuer;
        private string _last4;
        private string _network;
        private string _networkTransactionId;
        private PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOffline _offline;
        private bool _overcaptureSupported;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private string _readMethod;
        private PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceipt _receipt;
        private PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountAuthorized")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountAuthorized
        {
            get { return _amountAuthorized; }

            set { SetProperty(ref _amountAuthorized, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brandProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BrandProduct
        {
            get { return _brandProduct; }

            set { SetProperty(ref _brandProduct, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("captureBefore")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CaptureBefore
        {
            get { return _captureBefore; }

            set { SetProperty(ref _captureBefore, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderName
        {
            get { return _cardholderName; }

            set { SetProperty(ref _cardholderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emvAuthData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EmvAuthData
        {
            get { return _emvAuthData; }

            set { SetProperty(ref _emvAuthData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedCard
        {
            get { return _generatedCard; }

            set { SetProperty(ref _generatedCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("incrementalAuthorizationSupported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IncrementalAuthorizationSupported
        {
            get { return _incrementalAuthorizationSupported; }

            set { SetProperty(ref _incrementalAuthorizationSupported, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkTransactionId
        {
            get { return _networkTransactionId; }

            set { SetProperty(ref _networkTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("offline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOffline Offline
        {
            get { return _offline; }

            set { SetProperty(ref _offline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("overcaptureSupported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool OvercaptureSupported
        {
            get { return _overcaptureSupported; }

            set { SetProperty(ref _overcaptureSupported, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("readMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReadMethod
        {
            get { return _readMethod; }

            set { SetProperty(ref _readMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receipt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceipt Receipt
        {
            get { return _receipt; }

            set { SetProperty(ref _receipt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOffline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _storedAt;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("storedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? StoredAt
        {
            get { return _storedAt; }

            set { SetProperty(ref _storedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceipt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountType;
        private string _applicationCryptogram;
        private string _applicationPreferredName;
        private string _authorizationCode;
        private string _authorizationResponseCode;
        private string _cardholderVerificationMethod;
        private string _dedicatedFileName;
        private string _terminalVerificationResults;
        private string _transactionStatusInformation;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationCryptogram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationCryptogram
        {
            get { return _applicationCryptogram; }

            set { SetProperty(ref _applicationCryptogram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationPreferredName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationPreferredName
        {
            get { return _applicationPreferredName; }

            set { SetProperty(ref _applicationPreferredName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationCode
        {
            get { return _authorizationCode; }

            set { SetProperty(ref _authorizationCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationResponseCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationResponseCode
        {
            get { return _authorizationResponseCode; }

            set { SetProperty(ref _authorizationResponseCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderVerificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderVerificationMethod
        {
            get { return _cardholderVerificationMethod; }

            set { SetProperty(ref _cardholderVerificationMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dedicatedFileName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DedicatedFileName
        {
            get { return _dedicatedFileName; }

            set { SetProperty(ref _dedicatedFileName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("terminalVerificationResults")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TerminalVerificationResults
        {
            get { return _terminalVerificationResults; }

            set { SetProperty(ref _terminalVerificationResults, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionStatusInformation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionStatusInformation
        {
            get { return _transactionStatusInformation; }

            set { SetProperty(ref _transactionStatusInformation, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardNetworks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _available;
        private string _preferred;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Available
        {
            get { return _available; }

            set { SetProperty(ref _available, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferred")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Preferred
        {
            get { return _preferred; }

            set { SetProperty(ref _preferred, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _brandProduct;
        private string _cardholderName;
        private string _country;
        private string _description;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _iin;
        private string _issuer;
        private string _last4;
        private PaymentMethodCardPresentNetworks _networks;
        private PaymentMethodCardPresentOffline _offline;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private string _readMethod;
        private PaymentMethodCardPresentWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brandProduct")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BrandProduct
        {
            get { return _brandProduct; }

            set { SetProperty(ref _brandProduct, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderName
        {
            get { return _cardholderName; }

            set { SetProperty(ref _cardholderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardPresentNetworks Networks
        {
            get { return _networks; }

            set { SetProperty(ref _networks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("offline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardPresentOffline Offline
        {
            get { return _offline; }

            set { SetProperty(ref _offline, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("readMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReadMethod
        {
            get { return _readMethod; }

            set { SetProperty(ref _readMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardPresentWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardPresentNetworks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _available;
        private string _preferred;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Available
        {
            get { return _available; }

            set { SetProperty(ref _available, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferred")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Preferred
        {
            get { return _preferred; }

            set { SetProperty(ref _preferred, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardPresentOffline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _storedAt;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("storedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? StoredAt
        {
            get { return _storedAt; }

            set { SetProperty(ref _storedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardPresentWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardResponse : Prism.Mvvm.BindableBase
    {
        private string _brand;
        private PaymentMethodCardChecks _checks;
        private string _country;
        private string _description;
        private string _displayBrand;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _iin;
        private string _issuer;
        private string _last4;
        private PaymentMethodCardWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("checks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardChecks Checks
        {
            get { return _checks; }

            set { SetProperty(ref _checks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayBrand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayBrand
        {
            get { return _displayBrand; }

            set { SetProperty(ref _displayBrand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardThreeDSecureUsage : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _supported;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Supported
        {
            get { return _supported; }

            set { SetProperty(ref _supported, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentMethodCardWalletAmexExpressCheckout _amexExpressCheckout;
        private PaymentMethodCardWalletApplePay _applePay;
        private string _dynamicLast4;
        private PaymentMethodCardWalletGooglePay _googlePay;
        private PaymentMethodCardWalletLink _link;
        private PaymentMethodCardWalletMasterpass _masterpass;
        private PaymentMethodCardWalletSamsungPay _samsungPay;
        private string _type;
        private PaymentMethodCardWalletVisaCheckout _visaCheckout;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amexExpressCheckout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletAmexExpressCheckout AmexExpressCheckout
        {
            get { return _amexExpressCheckout; }

            set { SetProperty(ref _amexExpressCheckout, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletApplePay ApplePay
        {
            get { return _applePay; }

            set { SetProperty(ref _applePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dynamicLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DynamicLast4
        {
            get { return _dynamicLast4; }

            set { SetProperty(ref _dynamicLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("googlePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletGooglePay GooglePay
        {
            get { return _googlePay; }

            set { SetProperty(ref _googlePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("masterpass")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletMasterpass Masterpass
        {
            get { return _masterpass; }

            set { SetProperty(ref _masterpass, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("samsungPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletSamsungPay SamsungPay
        {
            get { return _samsungPay; }

            set { SetProperty(ref _samsungPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("visaCheckout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardWalletVisaCheckout VisaCheckout
        {
            get { return _visaCheckout; }

            set { SetProperty(ref _visaCheckout, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletAmexExpressCheckout : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletApplePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletGooglePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletMasterpass : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _billingAddress;
        private string _email;
        private string _name;
        private Address _shippingAddress;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BillingAddress
        {
            get { return _billingAddress; }

            set { SetProperty(ref _billingAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address ShippingAddress
        {
            get { return _shippingAddress; }

            set { SetProperty(ref _shippingAddress, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletSamsungPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCardWalletVisaCheckout : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _billingAddress;
        private string _email;
        private string _name;
        private Address _shippingAddress;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address BillingAddress
        {
            get { return _billingAddress; }

            set { SetProperty(ref _billingAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address ShippingAddress
        {
            get { return _shippingAddress; }

            set { SetProperty(ref _shippingAddress, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _buyerId;
        private string _cashtag;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("buyerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BuyerId
        {
            get { return _buyerId; }

            set { SetProperty(ref _buyerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashtag")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Cashtag
        {
            get { return _cashtag; }

            set { SetProperty(ref _cashtag, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodCustomerBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodEps : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodFpx : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderType;
        private string _bank;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderType
        {
            get { return _accountHolderType; }

            set { SetProperty(ref _accountHolderType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodGiropay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodGopay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodGrabpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _bankCode;
        private string _bankName;
        private string _displayName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodIdeal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _bic;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodInteracPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _cardholderName;
        private string _country;
        private string _description;
        private long _expMonth;
        private long _expYear;
        private string _fingerprint;
        private string _funding;
        private string _iin;
        private string _issuer;
        private string _last4;
        private PaymentMethodInteracPresentNetworks _networks;
        private System.Collections.Generic.ICollection<string> _preferredLocales;
        private string _readMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardholderName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CardholderName
        {
            get { return _cardholderName; }

            set { SetProperty(ref _cardholderName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodInteracPresentNetworks Networks
        {
            get { return _networks; }

            set { SetProperty(ref _networks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLocales")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PreferredLocales
        {
            get { return _preferredLocales; }

            set { SetProperty(ref _preferredLocales, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("readMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReadMethod
        {
            get { return _readMethod; }

            set { SetProperty(ref _readMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodInteracPresentNetworks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _available;
        private string _preferred;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Available
        {
            get { return _available; }

            set { SetProperty(ref _available, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferred")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Preferred
        {
            get { return _preferred; }

            set { SetProperty(ref _preferred, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodKakaoPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodKlarna : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentMethodKlarnaDob _dob;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dob")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodKlarnaDob Dob
        {
            get { return _dob; }

            set { SetProperty(ref _dob, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodKlarnaDob : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _day;
        private long? _month;
        private long? _year;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("day")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Day
        {
            get { return _day; }

            set { SetProperty(ref _day, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Month
        {
            get { return _month; }

            set { SetProperty(ref _month, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("year")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Year
        {
            get { return _year; }

            set { SetProperty(ref _year, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodKonbini : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodKrCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _email;
        private string _persistentToken;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("persistentToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Obsolete]
        public string PersistentToken
        {
            get { return _persistentToken; }

            set { SetProperty(ref _persistentToken, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodMbWay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodMobilepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodMultibanco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodNaverPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _funding;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodOxxo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodP24 : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPayco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPaynow : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _fingerprint;
        private string _payerEmail;
        private string _payerId;
        private string _verifiedEmail;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerEmail
        {
            get { return _payerEmail; }

            set { SetProperty(ref _payerEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayerId
        {
            get { return _payerId; }

            set { SetProperty(ref _payerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedEmail
        {
            get { return _verifiedEmail; }

            set { SetProperty(ref _verifiedEmail, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bsbNumber;
        private string _last4;
        private string _payId;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bsbNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BsbNumber
        {
            get { return _bsbNumber; }

            set { SetProperty(ref _bsbNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PayId
        {
            get { return _payId; }

            set { SetProperty(ref _payId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPix : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodPromptpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodQris : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodRadarOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _session;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("session")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Session
        {
            get { return _session; }

            set { SetProperty(ref _session, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodRechnung : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentMethodRechnungDob _dob;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dob")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodRechnungDob Dob
        {
            get { return _dob; }

            set { SetProperty(ref _dob, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodRechnungDob : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _day;
        private long _month;
        private long _year;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("day")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Day
        {
            get { return _day; }

            set { SetProperty(ref _day, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Month
        {
            get { return _month; }

            set { SetProperty(ref _month, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("year")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Year
        {
            get { return _year; }

            set { SetProperty(ref _year, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _allowRedisplay;
        private PaymentMethodBillingDetailsResponse _billingDetails;
        private PaymentMethodCardResponse _card;
        private System.DateTimeOffset _created;
        private string _customerId;
        private bool _livemode;
        private string _type;
        private PaymentMethodUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowRedisplay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AllowRedisplay
        {
            get { return _allowRedisplay; }

            set { SetProperty(ref _allowRedisplay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodBillingDetailsResponse BillingDetails
        {
            get { return _billingDetails; }

            set { SetProperty(ref _billingDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodCardResponse Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodRevolutPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodSamsungPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _branchCode;
        private string _country;
        private string _fingerprint;
        private PaymentMethodSepaDebitGeneratedFrom _generatedFrom;
        private string _last4;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("branchCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BranchCode
        {
            get { return _branchCode; }

            set { SetProperty(ref _branchCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodSepaDebitGeneratedFrom GeneratedFrom
        {
            get { return _generatedFrom; }

            set { SetProperty(ref _generatedFrom, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodSepaDebitGeneratedFrom : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _chargeId;
        private Charge _charge;
        private string _setupAttemptId;
        private SetupAttempt _setupAttempt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupAttemptId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupAttemptId
        {
            get { return _setupAttemptId; }

            set { SetProperty(ref _setupAttemptId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupAttempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttempt SetupAttempt
        {
            get { return _setupAttempt; }

            set { SetProperty(ref _setupAttempt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodShopeepay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodSofort : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodSwish : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodTwint : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountHolderType;
        private string _accountNumber;
        private string _accountType;
        private string _bankName;
        private string _financialConnectionsAccount;
        private string _fingerprint;
        private string _last4;
        private PaymentMethodUsBankAccountNetworks _networks;
        private string _routingNumber;
        private PaymentMethodUsBankAccountStatusDetails _statusDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountHolderType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountHolderType
        {
            get { return _accountHolderType; }

            set { SetProperty(ref _accountHolderType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountNumber
        {
            get { return _accountNumber; }

            set { SetProperty(ref _accountNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountType
        {
            get { return _accountType; }

            set { SetProperty(ref _accountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialConnectionsAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FinancialConnectionsAccount
        {
            get { return _financialConnectionsAccount; }

            set { SetProperty(ref _financialConnectionsAccount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodUsBankAccountNetworks Networks
        {
            get { return _networks; }

            set { SetProperty(ref _networks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("routingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RoutingNumber
        {
            get { return _routingNumber; }

            set { SetProperty(ref _routingNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodUsBankAccountStatusDetails StatusDetails
        {
            get { return _statusDetails; }

            set { SetProperty(ref _statusDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodUsBankAccountNetworks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _preferred;
        private System.Collections.Generic.ICollection<string> _supported;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferred")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Preferred
        {
            get { return _preferred; }

            set { SetProperty(ref _preferred, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Supported
        {
            get { return _supported; }

            set { SetProperty(ref _supported, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodUsBankAccountStatusDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentMethodUsBankAccountStatusDetailsBlocked _blocked;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blocked")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethodUsBankAccountStatusDetailsBlocked Blocked
        {
            get { return _blocked; }

            set { SetProperty(ref _blocked, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodUsBankAccountStatusDetailsBlocked : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _networkCode;
        private string _reason;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkCode
        {
            get { return _networkCode; }

            set { SetProperty(ref _networkCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodWechatPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodZip : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentMethodsRequest : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.ICollection<string> _paymentMethodTypes;

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PaymentMethodTypes
        {
            get { return _paymentMethodTypes; }

            set { SetProperty(ref _paymentMethodTypes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecord : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private PaymentRecordAmountCanceled _amountCanceled;
        private PaymentRecordAmountFailed _amountFailed;
        private PaymentRecordAmountGuaranteed _amountGuaranteed;
        private PaymentRecordAmountRefunded _amountRefunded;
        private PaymentRecordAmountRequested _amountRequested;
        private System.DateTimeOffset _created;
        private PaymentRecordCustomerDetails _customerDetails;
        private string _customerPresence;
        private string _description;
        private string _latestPaymentAttemptRecord;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private PaymentRecordPaymentMethodDetails _paymentMethodDetails;
        private string _paymentReference;
        private PaymentRecordShippingDetails _shippingDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountCanceled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordAmountCanceled AmountCanceled
        {
            get { return _amountCanceled; }

            set { SetProperty(ref _amountCanceled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountFailed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordAmountFailed AmountFailed
        {
            get { return _amountFailed; }

            set { SetProperty(ref _amountFailed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountGuaranteed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordAmountGuaranteed AmountGuaranteed
        {
            get { return _amountGuaranteed; }

            set { SetProperty(ref _amountGuaranteed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRefunded")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordAmountRefunded AmountRefunded
        {
            get { return _amountRefunded; }

            set { SetProperty(ref _amountRefunded, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountRequested")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordAmountRequested AmountRequested
        {
            get { return _amountRequested; }

            set { SetProperty(ref _amountRequested, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordCustomerDetails CustomerDetails
        {
            get { return _customerDetails; }

            set { SetProperty(ref _customerDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerPresence")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerPresence
        {
            get { return _customerPresence; }

            set { SetProperty(ref _customerPresence, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestPaymentAttemptRecord")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LatestPaymentAttemptRecord
        {
            get { return _latestPaymentAttemptRecord; }

            set { SetProperty(ref _latestPaymentAttemptRecord, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordPaymentMethodDetails PaymentMethodDetails
        {
            get { return _paymentMethodDetails; }

            set { SetProperty(ref _paymentMethodDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentReference
        {
            get { return _paymentReference; }

            set { SetProperty(ref _paymentReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordShippingDetails ShippingDetails
        {
            get { return _shippingDetails; }

            set { SetProperty(ref _shippingDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordAmountCanceled : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordAmountFailed : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordAmountGuaranteed : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordAmountRefunded : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordAmountRequested : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordCustomerDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _customer;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordPaymentMethodDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentRecordPaymentMethodDetailsBillingDetails _billingDetails;
        private PaymentRecordPaymentMethodDetailsCustom _custom;
        private string _paymentMethod;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordPaymentMethodDetailsBillingDetails BillingDetails
        {
            get { return _billingDetails; }

            set { SetProperty(ref _billingDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("custom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordPaymentMethodDetailsCustom Custom
        {
            get { return _custom; }

            set { SetProperty(ref _custom, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordPaymentMethodDetailsBillingDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentRecordPaymentMethodDetailsBillingDetailsAddress _address;
        private string _email;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordPaymentMethodDetailsBillingDetailsAddress Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordPaymentMethodDetailsBillingDetailsAddress : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordPaymentMethodDetailsCustom : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _displayName;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordShippingDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PaymentRecordShippingDetailsAddress _address;
        private string _name;
        private string _phone;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentRecordShippingDetailsAddress Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentRecordShippingDetailsAddress : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private string _line1;
        private string _line2;
        private string _postalCode;
        private string _state;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line1")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line1
        {
            get { return _line1; }

            set { SetProperty(ref _line1, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("line2")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Line2
        {
            get { return _line2; }

            set { SetProperty(ref _line2, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("postalCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PostalCode
        {
            get { return _postalCode; }

            set { SetProperty(ref _postalCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PaymentResponse : Prism.Mvvm.BindableBase
    {
        private string _clientSecret;

        [System.Text.Json.Serialization.JsonPropertyName("clientSecret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ClientSecret
        {
            get { return _clientSecret; }

            set { SetProperty(ref _clientSecret, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Person : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _account;
        private PersonAdditionalTosAcceptances _additionalTosAcceptances;
        private Address _address;
        private AddressJapan _addressKana;
        private AddressJapan _addressKanji;
        private System.DateTimeOffset _created;
        private bool? _deleted;
        private Dob _dob;
        private string _email;
        private string _firstName;
        private string _firstNameKana;
        private string _firstNameKanji;
        private System.Collections.Generic.ICollection<string> _fullNameAliases;
        private PersonFutureRequirements _futureRequirements;
        private string _gender;
        private bool _idNumberProvided;
        private bool _idNumberSecondaryProvided;
        private string _lastName;
        private string _lastNameKana;
        private string _lastNameKanji;
        private string _maidenName;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _nationality;
        private string _phone;
        private string _politicalExposure;
        private Address _registeredAddress;
        private PersonRelationship _relationship;
        private PersonRequirements _requirements;
        private bool _ssnLast4Provided;
        private PersonVerification _verification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("additionalTosAcceptances")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonAdditionalTosAcceptances AdditionalTosAcceptances
        {
            get { return _additionalTosAcceptances; }

            set { SetProperty(ref _additionalTosAcceptances, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AddressJapan AddressKana
        {
            get { return _addressKana; }

            set { SetProperty(ref _addressKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public AddressJapan AddressKanji
        {
            get { return _addressKanji; }

            set { SetProperty(ref _addressKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dob")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Dob Dob
        {
            get { return _dob; }

            set { SetProperty(ref _dob, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("firstName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FirstName
        {
            get { return _firstName; }

            set { SetProperty(ref _firstName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("firstNameKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FirstNameKana
        {
            get { return _firstNameKana; }

            set { SetProperty(ref _firstNameKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("firstNameKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FirstNameKanji
        {
            get { return _firstNameKanji; }

            set { SetProperty(ref _firstNameKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fullNameAliases")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> FullNameAliases
        {
            get { return _fullNameAliases; }

            set { SetProperty(ref _fullNameAliases, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("futureRequirements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonFutureRequirements FutureRequirements
        {
            get { return _futureRequirements; }

            set { SetProperty(ref _futureRequirements, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idNumberProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IdNumberProvided
        {
            get { return _idNumberProvided; }

            set { SetProperty(ref _idNumberProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idNumberSecondaryProvided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IdNumberSecondaryProvided
        {
            get { return _idNumberSecondaryProvided; }

            set { SetProperty(ref _idNumberSecondaryProvided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LastName
        {
            get { return _lastName; }

            set { SetProperty(ref _lastName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastNameKana")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LastNameKana
        {
            get { return _lastNameKana; }

            set { SetProperty(ref _lastNameKana, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastNameKanji")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LastNameKanji
        {
            get { return _lastNameKanji; }

            set { SetProperty(ref _lastNameKanji, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maidenName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MaidenName
        {
            get { return _maidenName; }

            set { SetProperty(ref _maidenName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nationality")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Nationality
        {
            get { return _nationality; }

            set { SetProperty(ref _nationality, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("politicalExposure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PoliticalExposure
        {
            get { return _politicalExposure; }

            set { SetProperty(ref _politicalExposure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("registeredAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address RegisteredAddress
        {
            get { return _registeredAddress; }

            set { SetProperty(ref _registeredAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("relationship")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonRelationship Relationship
        {
            get { return _relationship; }

            set { SetProperty(ref _relationship, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirements")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonRequirements Requirements
        {
            get { return _requirements; }

            set { SetProperty(ref _requirements, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ssnLast4Provided")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool SsnLast4Provided
        {
            get { return _ssnLast4Provided; }

            set { SetProperty(ref _ssnLast4Provided, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonVerification Verification
        {
            get { return _verification; }

            set { SetProperty(ref _verification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonAdditionalTosAcceptances : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PersonAdditionalTosAcceptancesAccount _account;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonAdditionalTosAcceptancesAccount Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonAdditionalTosAcceptancesAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _date;
        private string _ip;
        private string _userAgent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Ip
        {
            get { return _ip; }

            set { SetProperty(ref _ip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userAgent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserAgent
        {
            get { return _userAgent; }

            set { SetProperty(ref _userAgent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonFutureRequirements : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<PersonFutureRequirementsAlternative> _alternatives;
        private System.Collections.Generic.ICollection<string> _currentlyDue;
        private System.Collections.Generic.ICollection<PersonFutureRequirementsError> _errors;
        private System.Collections.Generic.ICollection<string> _eventuallyDue;
        private System.Collections.Generic.ICollection<string> _pastDue;
        private System.Collections.Generic.ICollection<string> _pendingVerification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternatives")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PersonFutureRequirementsAlternative> Alternatives
        {
            get { return _alternatives; }

            set { SetProperty(ref _alternatives, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentlyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> CurrentlyDue
        {
            get { return _currentlyDue; }

            set { SetProperty(ref _currentlyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PersonFutureRequirementsError> Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eventuallyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> EventuallyDue
        {
            get { return _eventuallyDue; }

            set { SetProperty(ref _eventuallyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PastDue
        {
            get { return _pastDue; }

            set { SetProperty(ref _pastDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingVerification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PendingVerification
        {
            get { return _pendingVerification; }

            set { SetProperty(ref _pendingVerification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonFutureRequirementsAlternative : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _alternativeFieldsDue;
        private System.Collections.Generic.ICollection<string> _originalFieldsDue;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternativeFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AlternativeFieldsDue
        {
            get { return _alternativeFieldsDue; }

            set { SetProperty(ref _alternativeFieldsDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originalFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OriginalFieldsDue
        {
            get { return _originalFieldsDue; }

            set { SetProperty(ref _originalFieldsDue, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonFutureRequirementsError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _code;
        private string _reason;
        private string _requirement;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Requirement
        {
            get { return _requirement; }

            set { SetProperty(ref _requirement, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonRelationship : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool? _authorizer;
        private bool? _director;
        private bool? _executive;
        private bool? _legalGuardian;
        private bool? _owner;
        private double? _percentOwnership;
        private bool? _representative;
        private string _title;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Authorizer
        {
            get { return _authorizer; }

            set { SetProperty(ref _authorizer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("director")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Director
        {
            get { return _director; }

            set { SetProperty(ref _director, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("executive")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Executive
        {
            get { return _executive; }

            set { SetProperty(ref _executive, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("legalGuardian")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? LegalGuardian
        {
            get { return _legalGuardian; }

            set { SetProperty(ref _legalGuardian, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("owner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Owner
        {
            get { return _owner; }

            set { SetProperty(ref _owner, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("percentOwnership")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? PercentOwnership
        {
            get { return _percentOwnership; }

            set { SetProperty(ref _percentOwnership, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("representative")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Representative
        {
            get { return _representative; }

            set { SetProperty(ref _representative, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonRequirements : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<PersonRequirementsAlternative> _alternatives;
        private System.Collections.Generic.ICollection<string> _currentlyDue;
        private System.Collections.Generic.ICollection<PersonRequirementsError> _errors;
        private System.Collections.Generic.ICollection<string> _eventuallyDue;
        private System.Collections.Generic.ICollection<string> _pastDue;
        private System.Collections.Generic.ICollection<string> _pendingVerification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternatives")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PersonRequirementsAlternative> Alternatives
        {
            get { return _alternatives; }

            set { SetProperty(ref _alternatives, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentlyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> CurrentlyDue
        {
            get { return _currentlyDue; }

            set { SetProperty(ref _currentlyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PersonRequirementsError> Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eventuallyDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> EventuallyDue
        {
            get { return _eventuallyDue; }

            set { SetProperty(ref _eventuallyDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pastDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PastDue
        {
            get { return _pastDue; }

            set { SetProperty(ref _pastDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingVerification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PendingVerification
        {
            get { return _pendingVerification; }

            set { SetProperty(ref _pendingVerification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonRequirementsAlternative : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _alternativeFieldsDue;
        private System.Collections.Generic.ICollection<string> _originalFieldsDue;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alternativeFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AlternativeFieldsDue
        {
            get { return _alternativeFieldsDue; }

            set { SetProperty(ref _alternativeFieldsDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("originalFieldsDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OriginalFieldsDue
        {
            get { return _originalFieldsDue; }

            set { SetProperty(ref _originalFieldsDue, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonRequirementsError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _code;
        private string _reason;
        private string _requirement;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requirement")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Requirement
        {
            get { return _requirement; }

            set { SetProperty(ref _requirement, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonVerification : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PersonVerificationAdditionalDocument _additionalDocument;
        private string _details;
        private string _detailsCode;
        private PersonVerificationDocument _document;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("additionalDocument")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonVerificationAdditionalDocument AdditionalDocument
        {
            get { return _additionalDocument; }

            set { SetProperty(ref _additionalDocument, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("details")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Details
        {
            get { return _details; }

            set { SetProperty(ref _details, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detailsCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DetailsCode
        {
            get { return _detailsCode; }

            set { SetProperty(ref _detailsCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("document")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PersonVerificationDocument Document
        {
            get { return _document; }

            set { SetProperty(ref _document, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonVerificationAdditionalDocument : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _backId;
        private File _back;
        private string _details;
        private string _detailsCode;
        private string _frontId;
        private File _front;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("backId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BackId
        {
            get { return _backId; }

            set { SetProperty(ref _backId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("back")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Back
        {
            get { return _back; }

            set { SetProperty(ref _back, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("details")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Details
        {
            get { return _details; }

            set { SetProperty(ref _details, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detailsCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DetailsCode
        {
            get { return _detailsCode; }

            set { SetProperty(ref _detailsCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("frontId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FrontId
        {
            get { return _frontId; }

            set { SetProperty(ref _frontId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("front")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Front
        {
            get { return _front; }

            set { SetProperty(ref _front, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PersonVerificationDocument : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _backId;
        private File _back;
        private string _details;
        private string _detailsCode;
        private string _frontId;
        private File _front;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("backId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BackId
        {
            get { return _backId; }

            set { SetProperty(ref _backId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("back")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Back
        {
            get { return _back; }

            set { SetProperty(ref _back, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("details")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Details
        {
            get { return _details; }

            set { SetProperty(ref _details, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detailsCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DetailsCode
        {
            get { return _detailsCode; }

            set { SetProperty(ref _detailsCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("frontId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FrontId
        {
            get { return _frontId; }

            set { SetProperty(ref _frontId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("front")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public File Front
        {
            get { return _front; }

            set { SetProperty(ref _front, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Plan : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private string _aggregateUsage;
        private long? _amount;
        private double? _amountDecimal;
        private string _billingScheme;
        private System.DateTimeOffset _created;
        private string _currency;
        private bool? _deleted;
        private string _interval;
        private long _intervalCount;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _meter;
        private string _nickname;
        private string _productId;
        private Product _product;
        private System.Collections.Generic.ICollection<PlanTier> _tiers;
        private string _tiersMode;
        private PlanTransformUsage _transformUsage;
        private long? _trialPeriodDays;
        private string _usageType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("aggregateUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AggregateUsage
        {
            get { return _aggregateUsage; }

            set { SetProperty(ref _aggregateUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? AmountDecimal
        {
            get { return _amountDecimal; }

            set { SetProperty(ref _amountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingScheme")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingScheme
        {
            get { return _billingScheme; }

            set { SetProperty(ref _billingScheme, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("meter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Meter
        {
            get { return _meter; }

            set { SetProperty(ref _meter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nickname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Nickname
        {
            get { return _nickname; }

            set { SetProperty(ref _nickname, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("product")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Product Product
        {
            get { return _product; }

            set { SetProperty(ref _product, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tiers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PlanTier> Tiers
        {
            get { return _tiers; }

            set { SetProperty(ref _tiers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tiersMode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TiersMode
        {
            get { return _tiersMode; }

            set { SetProperty(ref _tiersMode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transformUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PlanTransformUsage TransformUsage
        {
            get { return _transformUsage; }

            set { SetProperty(ref _transformUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialPeriodDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TrialPeriodDays
        {
            get { return _trialPeriodDays; }

            set { SetProperty(ref _trialPeriodDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UsageType
        {
            get { return _usageType; }

            set { SetProperty(ref _usageType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanCreate : Prism.Mvvm.BindableBase
    {
        private string _productId;
        private string _id;
        private double _price;
        private System.Collections.Generic.IDictionary<string, string> _name;
        private System.Collections.Generic.IDictionary<string, string> _description;
        private string _currency;
        private double _amount;
        private string _interval;
        private System.Collections.Generic.ICollection<PlanFeatureCreate> _features;

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public double Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("features")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PlanFeatureCreate> Features
        {
            get { return _features; }

            set { SetProperty(ref _features, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanFeatureCreate : Prism.Mvvm.BindableBase
    {
        private bool _active;
        private System.Collections.Generic.IDictionary<string, string> _name;
        private System.Collections.Generic.IDictionary<string, string> _description;

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanFeatureView : Prism.Mvvm.BindableBase
    {
        private int _id;
        private string _name;
        private string _description;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _productName;
        private string _productId;
        private string _billingPeriod;
        private int _numberRequests;
        private double _amount;
        private bool _active;
        private string _description;
        private System.Collections.Generic.ICollection<string> _images;
        private System.DateTimeOffset _updatedAt;
        private System.DateTimeOffset _createdAt;
        private System.Collections.Generic.ICollection<PlanServicesResponse> _planServices;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductName
        {
            get { return _productName; }

            set { SetProperty(ref _productName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingPeriod
        {
            get { return _billingPeriod; }

            set { SetProperty(ref _billingPeriod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("numberRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int NumberRequests
        {
            get { return _numberRequests; }

            set { SetProperty(ref _numberRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("images")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Images
        {
            get { return _images; }

            set { SetProperty(ref _images, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset UpdatedAt
        {
            get { return _updatedAt; }

            set { SetProperty(ref _updatedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CreatedAt
        {
            get { return _createdAt; }

            set { SetProperty(ref _createdAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("planServices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PlanServicesResponse> PlanServices
        {
            get { return _planServices; }

            set { SetProperty(ref _planServices, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanServicesResponse : Prism.Mvvm.BindableBase
    {
        private string _serviceId;
        private string _name;
        private string _token;
        private string _absolutePath;
        private long _numberRequests;
        private ProcessorType _processor;
        private ConnectionType _connectionType;

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("numberRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long NumberRequests
        {
            get { return _numberRequests; }

            set { SetProperty(ref _numberRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("processor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProcessorType Processor
        {
            get { return _processor; }

            set { SetProperty(ref _processor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("connectionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ConnectionType ConnectionType
        {
            get { return _connectionType; }

            set { SetProperty(ref _connectionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanServicesUpdate : Prism.Mvvm.BindableBase
    {
        private long _numberRequests;
        private int _scope;
        private ProcessorType _processor;
        private ConnectionType _connectionType;
        private string _serviceId;

        [System.Text.Json.Serialization.JsonPropertyName("numberRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long NumberRequests
        {
            get { return _numberRequests; }

            set { SetProperty(ref _numberRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("scope")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Scope
        {
            get { return _scope; }

            set { SetProperty(ref _scope, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("processor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ProcessorType Processor
        {
            get { return _processor; }

            set { SetProperty(ref _processor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("connectionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public ConnectionType ConnectionType
        {
            get { return _connectionType; }

            set { SetProperty(ref _connectionType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanTier : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _flatAmount;
        private double? _flatAmountDecimal;
        private long? _unitAmount;
        private double? _unitAmountDecimal;
        private long? _upTo;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? FlatAmount
        {
            get { return _flatAmount; }

            set { SetProperty(ref _flatAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? FlatAmountDecimal
        {
            get { return _flatAmountDecimal; }

            set { SetProperty(ref _flatAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("upTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UpTo
        {
            get { return _upTo; }

            set { SetProperty(ref _upTo, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanTransformUsage : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _divideBy;
        private string _round;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("divideBy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long DivideBy
        {
            get { return _divideBy; }

            set { SetProperty(ref _divideBy, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("round")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Round
        {
            get { return _round; }

            set { SetProperty(ref _round, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanUpdate : Prism.Mvvm.BindableBase
    {
        private bool _active;
        private bool _reLoadFromStripe;
        private System.Collections.Generic.ICollection<PlanServicesUpdate> _planServices;

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reLoadFromStripe")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ReLoadFromStripe
        {
            get { return _reLoadFromStripe; }

            set { SetProperty(ref _reLoadFromStripe, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("planServices")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PlanServicesUpdate> PlanServices
        {
            get { return _planServices; }

            set { SetProperty(ref _planServices, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PlanView : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _billingPeriod;
        private double _amount;
        private bool _active;
        private string _description;
        private string _name;
        private System.Collections.Generic.ICollection<PlanFeatureView> _planFeatures;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingPeriod
        {
            get { return _billingPeriod; }

            set { SetProperty(ref _billingPeriod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("planFeatures")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PlanFeatureView> PlanFeatures
        {
            get { return _planFeatures; }

            set { SetProperty(ref _planFeatures, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Price : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private string _billingScheme;
        private System.DateTimeOffset _created;
        private string _currency;
        private System.Collections.Generic.IDictionary<string, PriceCurrencyOptions> _currencyOptions;
        private PriceCustomUnitAmount _customUnitAmount;
        private bool? _deleted;
        private bool _livemode;
        private string _lookupKey;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private PriceMigrateTo _migrateTo;
        private string _nickname;
        private string _productId;
        private Product _product;
        private PriceRecurring _recurring;
        private string _taxBehavior;
        private System.Collections.Generic.ICollection<PriceTier> _tiers;
        private string _tiersMode;
        private PriceTransformQuantity _transformQuantity;
        private string _type;
        private long? _unitAmount;
        private double? _unitAmountDecimal;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingScheme")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingScheme
        {
            get { return _billingScheme; }

            set { SetProperty(ref _billingScheme, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currencyOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, PriceCurrencyOptions> CurrencyOptions
        {
            get { return _currencyOptions; }

            set { SetProperty(ref _currencyOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customUnitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PriceCustomUnitAmount CustomUnitAmount
        {
            get { return _customUnitAmount; }

            set { SetProperty(ref _customUnitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lookupKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LookupKey
        {
            get { return _lookupKey; }

            set { SetProperty(ref _lookupKey, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("migrateTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PriceMigrateTo MigrateTo
        {
            get { return _migrateTo; }

            set { SetProperty(ref _migrateTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nickname")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Nickname
        {
            get { return _nickname; }

            set { SetProperty(ref _nickname, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("product")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Product Product
        {
            get { return _product; }

            set { SetProperty(ref _product, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recurring")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PriceRecurring Recurring
        {
            get { return _recurring; }

            set { SetProperty(ref _recurring, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxBehavior
        {
            get { return _taxBehavior; }

            set { SetProperty(ref _taxBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tiers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PriceTier> Tiers
        {
            get { return _tiers; }

            set { SetProperty(ref _tiers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tiersMode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TiersMode
        {
            get { return _tiersMode; }

            set { SetProperty(ref _tiersMode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transformQuantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PriceTransformQuantity TransformQuantity
        {
            get { return _transformQuantity; }

            set { SetProperty(ref _transformQuantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceCreate : Prism.Mvvm.BindableBase
    {
        private string _productId;
        private string _currency;
        private long _unitAmount;
        private string _interval;

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ProductId
        {
            get { return _productId; }

            set { SetProperty(ref _productId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public long UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceCurrencyOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private PriceCurrencyOptionsCustomUnitAmount _customUnitAmount;
        private string _taxBehavior;
        private System.Collections.Generic.ICollection<PriceCurrencyOptionsTier> _tiers;
        private long? _unitAmount;
        private double? _unitAmountDecimal;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customUnitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PriceCurrencyOptionsCustomUnitAmount CustomUnitAmount
        {
            get { return _customUnitAmount; }

            set { SetProperty(ref _customUnitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxBehavior
        {
            get { return _taxBehavior; }

            set { SetProperty(ref _taxBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("tiers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<PriceCurrencyOptionsTier> Tiers
        {
            get { return _tiers; }

            set { SetProperty(ref _tiers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceCurrencyOptionsCustomUnitAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _maximum;
        private long? _minimum;
        private long? _preset;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maximum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Maximum
        {
            get { return _maximum; }

            set { SetProperty(ref _maximum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Minimum
        {
            get { return _minimum; }

            set { SetProperty(ref _minimum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preset")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Preset
        {
            get { return _preset; }

            set { SetProperty(ref _preset, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceCurrencyOptionsTier : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _flatAmount;
        private double? _flatAmountDecimal;
        private long? _unitAmount;
        private double? _unitAmountDecimal;
        private long? _upTo;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? FlatAmount
        {
            get { return _flatAmount; }

            set { SetProperty(ref _flatAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? FlatAmountDecimal
        {
            get { return _flatAmountDecimal; }

            set { SetProperty(ref _flatAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("upTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UpTo
        {
            get { return _upTo; }

            set { SetProperty(ref _upTo, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceCustomUnitAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _maximum;
        private long? _minimum;
        private long? _preset;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maximum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Maximum
        {
            get { return _maximum; }

            set { SetProperty(ref _maximum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Minimum
        {
            get { return _minimum; }

            set { SetProperty(ref _minimum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preset")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Preset
        {
            get { return _preset; }

            set { SetProperty(ref _preset, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceMigrateTo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _behavior;
        private System.DateTimeOffset _effectiveAfter;
        private string _price;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("behavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Behavior
        {
            get { return _behavior; }

            set { SetProperty(ref _behavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectiveAfter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EffectiveAfter
        {
            get { return _effectiveAfter; }

            set { SetProperty(ref _effectiveAfter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceRecurring : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _aggregateUsage;
        private string _interval;
        private long _intervalCount;
        private string _meter;
        private long? _trialPeriodDays;
        private string _usageType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("aggregateUsage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AggregateUsage
        {
            get { return _aggregateUsage; }

            set { SetProperty(ref _aggregateUsage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("meter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Meter
        {
            get { return _meter; }

            set { SetProperty(ref _meter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialPeriodDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TrialPeriodDays
        {
            get { return _trialPeriodDays; }

            set { SetProperty(ref _trialPeriodDays, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UsageType
        {
            get { return _usageType; }

            set { SetProperty(ref _usageType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _object;
        private bool _active;
        private string _currency;
        private string _interval;
        private double _unitAmountDecimal;
        private long _unitAmount;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceSearchOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.ICollection<string> _expand;
        private System.Collections.Generic.IDictionary<string, object> _extraParams;
        private long? _limit;
        private string _page;
        private string _query;

        [System.Text.Json.Serialization.JsonPropertyName("expand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Expand
        {
            get { return _expand; }

            set { SetProperty(ref _expand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("extraParams")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, object> ExtraParams
        {
            get { return _extraParams; }

            set { SetProperty(ref _extraParams, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("limit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Limit
        {
            get { return _limit; }

            set { SetProperty(ref _limit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("page")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Page
        {
            get { return _page; }

            set { SetProperty(ref _page, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("query")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Query
        {
            get { return _query; }

            set { SetProperty(ref _query, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceTier : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _flatAmount;
        private double? _flatAmountDecimal;
        private long? _unitAmount;
        private double? _unitAmountDecimal;
        private long? _upTo;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? FlatAmount
        {
            get { return _flatAmount; }

            set { SetProperty(ref _flatAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? FlatAmountDecimal
        {
            get { return _flatAmountDecimal; }

            set { SetProperty(ref _flatAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UnitAmount
        {
            get { return _unitAmount; }

            set { SetProperty(ref _unitAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitAmountDecimal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? UnitAmountDecimal
        {
            get { return _unitAmountDecimal; }

            set { SetProperty(ref _unitAmountDecimal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("upTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UpTo
        {
            get { return _upTo; }

            set { SetProperty(ref _upTo, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceTransformQuantity : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _divideBy;
        private string _round;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("divideBy")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long DivideBy
        {
            get { return _divideBy; }

            set { SetProperty(ref _divideBy, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("round")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Round
        {
            get { return _round; }

            set { SetProperty(ref _round, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceUpdate : Prism.Mvvm.BindableBase
    {
        private bool _active;
        private string _lookupKey;

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lookupKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LookupKey
        {
            get { return _lookupKey; }

            set { SetProperty(ref _lookupKey, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProblemDetails : Prism.Mvvm.BindableBase
    {
        private string _type;
        private string _title;
        private int? _status;
        private string _detail;
        private string _instance;

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("title")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Title
        {
            get { return _title; }

            set { SetProperty(ref _title, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int? Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Detail
        {
            get { return _detail; }

            set { SetProperty(ref _detail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Instance
        {
            get { return _instance; }

            set { SetProperty(ref _instance, value); }
        }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ProcessorType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Gpu")]
        Gpu = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Cpu")]
        Cpu = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Product : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private System.DateTimeOffset _created;
        private string _defaultPriceId;
        private Price _defaultPrice;
        private bool? _deleted;
        private string _description;
        private System.Collections.Generic.ICollection<string> _images;
        private bool _livemode;
        private System.Collections.Generic.ICollection<ProductMarketingFeature> _marketingFeatures;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _name;
        private ProductPackageDimensions _packageDimensions;
        private ProductProvisioning _provisioning;
        private bool? _shippable;
        private string _statementDescriptor;
        private string _taxCodeId;
        private TaxCode _taxCode;
        private string _type;
        private string _unitLabel;
        private System.DateTimeOffset _updated;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPriceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPriceId
        {
            get { return _defaultPriceId; }

            set { SetProperty(ref _defaultPriceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price DefaultPrice
        {
            get { return _defaultPrice; }

            set { SetProperty(ref _defaultPrice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("images")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Images
        {
            get { return _images; }

            set { SetProperty(ref _images, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("marketingFeatures")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<ProductMarketingFeature> MarketingFeatures
        {
            get { return _marketingFeatures; }

            set { SetProperty(ref _marketingFeatures, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("packageDimensions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ProductPackageDimensions PackageDimensions
        {
            get { return _packageDimensions; }

            set { SetProperty(ref _packageDimensions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("provisioning")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ProductProvisioning Provisioning
        {
            get { return _provisioning; }

            set { SetProperty(ref _provisioning, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Shippable
        {
            get { return _shippable; }

            set { SetProperty(ref _shippable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statementDescriptor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StatementDescriptor
        {
            get { return _statementDescriptor; }

            set { SetProperty(ref _statementDescriptor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxCodeId
        {
            get { return _taxCodeId; }

            set { SetProperty(ref _taxCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxCode TaxCode
        {
            get { return _taxCode; }

            set { SetProperty(ref _taxCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitLabel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UnitLabel
        {
            get { return _unitLabel; }

            set { SetProperty(ref _unitLabel, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updated")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Updated
        {
            get { return _updated; }

            set { SetProperty(ref _updated, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductCreate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _description;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductMarketingFeature : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductPackageDimensions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private double _height;
        private double _length;
        private double _weight;
        private double _width;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("height")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Height
        {
            get { return _height; }

            set { SetProperty(ref _height, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("length")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Length
        {
            get { return _length; }

            set { SetProperty(ref _length, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("weight")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Weight
        {
            get { return _weight; }

            set { SetProperty(ref _weight, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("width")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Width
        {
            get { return _width; }

            set { SetProperty(ref _width, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductProvisioning : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ProductProvisioningGiftCard _giftCard;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giftCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ProductProvisioningGiftCard GiftCard
        {
            get { return _giftCard; }

            set { SetProperty(ref _giftCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductProvisioningGiftCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ProductProvisioningGiftCardFixedAmount _fixedAmount;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fixedAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ProductProvisioningGiftCardFixedAmount FixedAmount
        {
            get { return _fixedAmount; }

            set { SetProperty(ref _fixedAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductProvisioningGiftCardFixedAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _currency;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _object;
        private bool _active;
        private string _description;
        private bool? _deleted;
        private System.Collections.Generic.ICollection<string> _images;
        private bool? _shippable;
        private string _type;
        private string _unitLabel;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("images")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Images
        {
            get { return _images; }

            set { SetProperty(ref _images, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Shippable
        {
            get { return _shippable; }

            set { SetProperty(ref _shippable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitLabel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UnitLabel
        {
            get { return _unitLabel; }

            set { SetProperty(ref _unitLabel, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ProductUpdate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private bool _active;
        private string _description;
        private System.Collections.Generic.ICollection<string> _images;
        private bool? _shippable;
        private string _unitLabel;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("images")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Images
        {
            get { return _images; }

            set { SetProperty(ref _images, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("shippable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Shippable
        {
            get { return _shippable; }

            set { SetProperty(ref _shippable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unitLabel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UnitLabel
        {
            get { return _unitLabel; }

            set { SetProperty(ref _unitLabel, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PromotionCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private string _code;
        private Coupon _coupon;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private System.DateTimeOffset? _expiresAt;
        private bool _livemode;
        private long? _maxRedemptions;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private PromotionCodeRestrictions _restrictions;
        private long _timesRedeemed;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maxRedemptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? MaxRedemptions
        {
            get { return _maxRedemptions; }

            set { SetProperty(ref _maxRedemptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("restrictions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PromotionCodeRestrictions Restrictions
        {
            get { return _restrictions; }

            set { SetProperty(ref _restrictions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timesRedeemed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long TimesRedeemed
        {
            get { return _timesRedeemed; }

            set { SetProperty(ref _timesRedeemed, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PromotionCodeRestrictions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.IDictionary<string, PromotionCodeRestrictionsCurrencyOptions> _currencyOptions;
        private bool _firstTimeTransaction;
        private long? _minimumAmount;
        private string _minimumAmountCurrency;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currencyOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, PromotionCodeRestrictionsCurrencyOptions> CurrencyOptions
        {
            get { return _currencyOptions; }

            set { SetProperty(ref _currencyOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("firstTimeTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool FirstTimeTransaction
        {
            get { return _firstTimeTransaction; }

            set { SetProperty(ref _firstTimeTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimumAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? MinimumAmount
        {
            get { return _minimumAmount; }

            set { SetProperty(ref _minimumAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimumAmountCurrency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MinimumAmountCurrency
        {
            get { return _minimumAmountCurrency; }

            set { SetProperty(ref _minimumAmountCurrency, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PromotionCodeRestrictionsCurrencyOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _minimumAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimumAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long MinimumAmount
        {
            get { return _minimumAmount; }

            set { SetProperty(ref _minimumAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Quote : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool? _allowBackdatedLines;
        private long _amountSubtotal;
        private long _amountTotal;
        private string _applicationId;
        private Application _application;
        private long? _applicationFeeAmount;
        private double? _applicationFeePercent;
        private QuoteAutomaticTax _automaticTax;
        private string _collectionMethod;
        private QuoteComputed _computed;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _customerId;
        private Customer _customer;
        private System.Collections.Generic.ICollection<string> _defaultTaxRateIds;
        private System.Collections.Generic.ICollection<TaxRate> _defaultTaxRates;
        private string _description;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private System.DateTimeOffset _expiresAt;
        private string _footer;
        private QuoteFromQuote _fromQuote;
        private string _header;
        private string _invoiceId;
        private Invoice _invoice;
        private QuoteInvoiceSettings _invoiceSettings;
        private System.Collections.Generic.ICollection<LineItem> _lineItems;
        private System.Collections.Generic.ICollection<string> _lines;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _number;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private string _status;
        private QuoteStatusDetails _statusDetails;
        private QuoteStatusTransitions _statusTransitions;
        private string _subscriptionId;
        private Subscription _subscription;
        private QuoteSubscriptionData _subscriptionData;
        private System.Collections.Generic.ICollection<QuoteSubscriptionDataOverride> _subscriptionDataOverrides;
        private string _subscriptionScheduleId;
        private SubscriptionSchedule _subscriptionSchedule;
        private System.Collections.Generic.ICollection<QuoteSubscriptionSchedule> _subscriptionSchedules;
        private string _testClockId;
        private TestClock _testClock;
        private QuoteTotalDetails _totalDetails;
        private QuoteTransferData _transferData;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowBackdatedLines")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? AllowBackdatedLines
        {
            get { return _allowBackdatedLines; }

            set { SetProperty(ref _allowBackdatedLines, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountSubtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountSubtotal
        {
            get { return _amountSubtotal; }

            set { SetProperty(ref _amountSubtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTotal
        {
            get { return _amountTotal; }

            set { SetProperty(ref _amountTotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeeAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ApplicationFeeAmount
        {
            get { return _applicationFeeAmount; }

            set { SetProperty(ref _applicationFeeAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeePercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? ApplicationFeePercent
        {
            get { return _applicationFeePercent; }

            set { SetProperty(ref _applicationFeePercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteAutomaticTax AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("computed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputed Computed
        {
            get { return _computed; }

            set { SetProperty(ref _computed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultTaxRateIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DefaultTaxRateIds
        {
            get { return _defaultTaxRateIds; }

            set { SetProperty(ref _defaultTaxRateIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultTaxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> DefaultTaxRates
        {
            get { return _defaultTaxRates; }

            set { SetProperty(ref _defaultTaxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("footer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Footer
        {
            get { return _footer; }

            set { SetProperty(ref _footer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fromQuote")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteFromQuote FromQuote
        {
            get { return _fromQuote; }

            set { SetProperty(ref _fromQuote, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("header")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Header
        {
            get { return _header; }

            set { SetProperty(ref _header, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteInvoiceSettings InvoiceSettings
        {
            get { return _invoiceSettings; }

            set { SetProperty(ref _invoiceSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<LineItem> LineItems
        {
            get { return _lineItems; }

            set { SetProperty(ref _lineItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lines")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Lines
        {
            get { return _lines; }

            set { SetProperty(ref _lines, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("number")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Number
        {
            get { return _number; }

            set { SetProperty(ref _number, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetails StatusDetails
        {
            get { return _statusDetails; }

            set { SetProperty(ref _statusDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusTransitions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusTransitions StatusTransitions
        {
            get { return _statusTransitions; }

            set { SetProperty(ref _statusTransitions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionData SubscriptionData
        {
            get { return _subscriptionData; }

            set { SetProperty(ref _subscriptionData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionDataOverrides")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteSubscriptionDataOverride> SubscriptionDataOverrides
        {
            get { return _subscriptionDataOverrides; }

            set { SetProperty(ref _subscriptionDataOverrides, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionScheduleId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionScheduleId
        {
            get { return _subscriptionScheduleId; }

            set { SetProperty(ref _subscriptionScheduleId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedule SubscriptionSchedule
        {
            get { return _subscriptionSchedule; }

            set { SetProperty(ref _subscriptionSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionSchedules")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteSubscriptionSchedule> SubscriptionSchedules
        {
            get { return _subscriptionSchedules; }

            set { SetProperty(ref _subscriptionSchedules, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteTotalDetails TotalDetails
        {
            get { return _totalDetails; }

            set { SetProperty(ref _totalDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteAutomaticTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private QuoteAutomaticTaxLiability _liability;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("liability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteAutomaticTaxLiability Liability
        {
            get { return _liability; }

            set { SetProperty(ref _liability, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteAutomaticTaxLiability : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputed : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteComputedLastReestimationDetails _lastReestimationDetails;
        private QuoteComputedRecurring _recurring;
        private System.DateTimeOffset? _updatedAt;
        private QuoteComputedUpfront _upfront;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastReestimationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedLastReestimationDetails LastReestimationDetails
        {
            get { return _lastReestimationDetails; }

            set { SetProperty(ref _lastReestimationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recurring")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedRecurring Recurring
        {
            get { return _recurring; }

            set { SetProperty(ref _recurring, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? UpdatedAt
        {
            get { return _updatedAt; }

            set { SetProperty(ref _updatedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("upfront")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedUpfront Upfront
        {
            get { return _upfront; }

            set { SetProperty(ref _upfront, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedLastReestimationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteComputedLastReestimationDetailsFailed _failed;
        private string _status;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedLastReestimationDetailsFailed Failed
        {
            get { return _failed; }

            set { SetProperty(ref _failed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedLastReestimationDetailsFailed : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _failureCode;
        private string _message;
        private string _reason;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureCode
        {
            get { return _failureCode; }

            set { SetProperty(ref _failureCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Message
        {
            get { return _message; }

            set { SetProperty(ref _message, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedRecurring : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountSubtotal;
        private long _amountTotal;
        private string _interval;
        private long _intervalCount;
        private QuoteComputedRecurringTotalDetails _totalDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountSubtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountSubtotal
        {
            get { return _amountSubtotal; }

            set { SetProperty(ref _amountSubtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTotal
        {
            get { return _amountTotal; }

            set { SetProperty(ref _amountTotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedRecurringTotalDetails TotalDetails
        {
            get { return _totalDetails; }

            set { SetProperty(ref _totalDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedRecurringTotalDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountDiscount;
        private long? _amountShipping;
        private long _amountTax;
        private QuoteComputedRecurringTotalDetailsBreakdown _breakdown;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDiscount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountDiscount
        {
            get { return _amountDiscount; }

            set { SetProperty(ref _amountDiscount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountShipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountShipping
        {
            get { return _amountShipping; }

            set { SetProperty(ref _amountShipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTax
        {
            get { return _amountTax; }

            set { SetProperty(ref _amountTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("breakdown")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedRecurringTotalDetailsBreakdown Breakdown
        {
            get { return _breakdown; }

            set { SetProperty(ref _breakdown, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedRecurringTotalDetailsBreakdown : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<QuoteComputedRecurringTotalDetailsBreakdownDiscount> _discounts;
        private System.Collections.Generic.ICollection<QuoteComputedRecurringTotalDetailsBreakdownTax> _taxes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteComputedRecurringTotalDetailsBreakdownDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteComputedRecurringTotalDetailsBreakdownTax> Taxes
        {
            get { return _taxes; }

            set { SetProperty(ref _taxes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedRecurringTotalDetailsBreakdownDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedRecurringTotalDetailsBreakdownTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private TaxRate _rate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate Rate
        {
            get { return _rate; }

            set { SetProperty(ref _rate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedUpfront : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountSubtotal;
        private long _amountTotal;
        private System.Collections.Generic.ICollection<LineItem> _lineItems;
        private QuoteComputedUpfrontTotalDetails _totalDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountSubtotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountSubtotal
        {
            get { return _amountSubtotal; }

            set { SetProperty(ref _amountSubtotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTotal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTotal
        {
            get { return _amountTotal; }

            set { SetProperty(ref _amountTotal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<LineItem> LineItems
        {
            get { return _lineItems; }

            set { SetProperty(ref _lineItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("totalDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedUpfrontTotalDetails TotalDetails
        {
            get { return _totalDetails; }

            set { SetProperty(ref _totalDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedUpfrontTotalDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountDiscount;
        private long? _amountShipping;
        private long _amountTax;
        private QuoteComputedUpfrontTotalDetailsBreakdown _breakdown;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDiscount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountDiscount
        {
            get { return _amountDiscount; }

            set { SetProperty(ref _amountDiscount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountShipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountShipping
        {
            get { return _amountShipping; }

            set { SetProperty(ref _amountShipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTax
        {
            get { return _amountTax; }

            set { SetProperty(ref _amountTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("breakdown")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteComputedUpfrontTotalDetailsBreakdown Breakdown
        {
            get { return _breakdown; }

            set { SetProperty(ref _breakdown, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedUpfrontTotalDetailsBreakdown : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<QuoteComputedUpfrontTotalDetailsBreakdownDiscount> _discounts;
        private System.Collections.Generic.ICollection<QuoteComputedUpfrontTotalDetailsBreakdownTax> _taxes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteComputedUpfrontTotalDetailsBreakdownDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteComputedUpfrontTotalDetailsBreakdownTax> Taxes
        {
            get { return _taxes; }

            set { SetProperty(ref _taxes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedUpfrontTotalDetailsBreakdownDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteComputedUpfrontTotalDetailsBreakdownTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private TaxRate _rate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate Rate
        {
            get { return _rate; }

            set { SetProperty(ref _rate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteFromQuote : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _isRevision;
        private string _quoteId;
        private Quote _quote;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isRevision")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsRevision
        {
            get { return _isRevision; }

            set { SetProperty(ref _isRevision, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quoteId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string QuoteId
        {
            get { return _quoteId; }

            set { SetProperty(ref _quoteId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quote")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Quote Quote
        {
            get { return _quote; }

            set { SetProperty(ref _quote, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteInvoiceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _daysUntilDue;
        private QuoteInvoiceSettingsIssuer _issuer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysUntilDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DaysUntilDue
        {
            get { return _daysUntilDue; }

            set { SetProperty(ref _daysUntilDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteInvoiceSettingsIssuer Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteInvoiceSettingsIssuer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteStatusDetailsCanceled _canceled;
        private QuoteStatusDetailsStale _stale;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetailsCanceled Canceled
        {
            get { return _canceled; }

            set { SetProperty(ref _canceled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetailsStale Stale
        {
            get { return _stale; }

            set { SetProperty(ref _stale, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsCanceled : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reason;
        private System.DateTimeOffset? _transitionedAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transitionedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TransitionedAt
        {
            get { return _transitionedAt; }

            set { SetProperty(ref _transitionedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsStale : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _expiresAt;
        private QuoteStatusDetailsStaleLastReason _lastReason;
        private System.DateTimeOffset? _lastUpdatedAt;
        private System.DateTimeOffset? _transitionedAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetailsStaleLastReason LastReason
        {
            get { return _lastReason; }

            set { SetProperty(ref _lastReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastUpdatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? LastUpdatedAt
        {
            get { return _lastUpdatedAt; }

            set { SetProperty(ref _lastUpdatedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transitionedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TransitionedAt
        {
            get { return _transitionedAt; }

            set { SetProperty(ref _transitionedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsStaleLastReason : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _lineInvalid;
        private System.Collections.Generic.ICollection<QuoteStatusDetailsStaleLastReasonLinesInvalid> _linesInvalid;
        private string _markedStale;
        private string _subscriptionCanceled;
        private QuoteStatusDetailsStaleLastReasonSubscriptionChanged _subscriptionChanged;
        private string _subscriptionExpired;
        private string _subscriptionScheduleCanceled;
        private QuoteStatusDetailsStaleLastReasonSubscriptionScheduleChanged _subscriptionScheduleChanged;
        private string _subscriptionScheduleReleased;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineInvalid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LineInvalid
        {
            get { return _lineInvalid; }

            set { SetProperty(ref _lineInvalid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("linesInvalid")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteStatusDetailsStaleLastReasonLinesInvalid> LinesInvalid
        {
            get { return _linesInvalid; }

            set { SetProperty(ref _linesInvalid, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("markedStale")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MarkedStale
        {
            get { return _markedStale; }

            set { SetProperty(ref _markedStale, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionCanceled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionCanceled
        {
            get { return _subscriptionCanceled; }

            set { SetProperty(ref _subscriptionCanceled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionChanged")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetailsStaleLastReasonSubscriptionChanged SubscriptionChanged
        {
            get { return _subscriptionChanged; }

            set { SetProperty(ref _subscriptionChanged, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionExpired")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionExpired
        {
            get { return _subscriptionExpired; }

            set { SetProperty(ref _subscriptionExpired, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionScheduleCanceled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionScheduleCanceled
        {
            get { return _subscriptionScheduleCanceled; }

            set { SetProperty(ref _subscriptionScheduleCanceled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionScheduleChanged")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteStatusDetailsStaleLastReasonSubscriptionScheduleChanged SubscriptionScheduleChanged
        {
            get { return _subscriptionScheduleChanged; }

            set { SetProperty(ref _subscriptionScheduleChanged, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionScheduleReleased")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionScheduleReleased
        {
            get { return _subscriptionScheduleReleased; }

            set { SetProperty(ref _subscriptionScheduleReleased, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsStaleLastReasonLinesInvalid : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _invalidAt;
        private System.Collections.Generic.ICollection<string> _lines;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invalidAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset InvalidAt
        {
            get { return _invalidAt; }

            set { SetProperty(ref _invalidAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lines")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Lines
        {
            get { return _lines; }

            set { SetProperty(ref _lines, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsStaleLastReasonSubscriptionChanged : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Subscription _previousSubscription;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("previousSubscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription PreviousSubscription
        {
            get { return _previousSubscription; }

            set { SetProperty(ref _previousSubscription, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusDetailsStaleLastReasonSubscriptionScheduleChanged : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionSchedule _previousSubscriptionSchedule;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("previousSubscriptionSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedule PreviousSubscriptionSchedule
        {
            get { return _previousSubscriptionSchedule; }

            set { SetProperty(ref _previousSubscriptionSchedule, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteStatusTransitions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _acceptedAt;
        private System.DateTimeOffset? _canceledAt;
        private System.DateTimeOffset? _finalizedAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acceptedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? AcceptedAt
        {
            get { return _acceptedAt; }

            set { SetProperty(ref _acceptedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("finalizedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? FinalizedAt
        {
            get { return _finalizedAt; }

            set { SetProperty(ref _finalizedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteSubscriptionDataBillOnAcceptance _billOnAcceptance;
        private string _billingBehavior;
        private string _billingCycleAnchor;
        private string _description;
        private System.DateTimeOffset? _effectiveDate;
        private string _endBehavior;
        private string _fromSubscriptionId;
        private Subscription _fromSubscription;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private QuoteSubscriptionDataPrebilling _prebilling;
        private string _prorationBehavior;
        private long? _trialPeriodDays;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billOnAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptance BillOnAcceptance
        {
            get { return _billOnAcceptance; }

            set { SetProperty(ref _billOnAcceptance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingBehavior
        {
            get { return _billingBehavior; }

            set { SetProperty(ref _billingBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingCycleAnchor
        {
            get { return _billingCycleAnchor; }

            set { SetProperty(ref _billingCycleAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectiveDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EffectiveDate
        {
            get { return _effectiveDate; }

            set { SetProperty(ref _effectiveDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndBehavior
        {
            get { return _endBehavior; }

            set { SetProperty(ref _endBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fromSubscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FromSubscriptionId
        {
            get { return _fromSubscriptionId; }

            set { SetProperty(ref _fromSubscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fromSubscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription FromSubscription
        {
            get { return _fromSubscription; }

            set { SetProperty(ref _fromSubscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prebilling")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataPrebilling Prebilling
        {
            get { return _prebilling; }

            set { SetProperty(ref _prebilling, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prorationBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProrationBehavior
        {
            get { return _prorationBehavior; }

            set { SetProperty(ref _prorationBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialPeriodDays")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TrialPeriodDays
        {
            get { return _trialPeriodDays; }

            set { SetProperty(ref _trialPeriodDays, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteSubscriptionDataBillOnAcceptanceBillFrom _billFrom;
        private QuoteSubscriptionDataBillOnAcceptanceBillUntil _billUntil;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptanceBillFrom BillFrom
        {
            get { return _billFrom; }

            set { SetProperty(ref _billFrom, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billUntil")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptanceBillUntil BillUntil
        {
            get { return _billUntil; }

            set { SetProperty(ref _billUntil, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptanceBillFrom : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _computed;
        private QuoteSubscriptionDataBillOnAcceptanceBillFromLineStartsAt _lineStartsAt;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("computed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Computed
        {
            get { return _computed; }

            set { SetProperty(ref _computed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineStartsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptanceBillFromLineStartsAt LineStartsAt
        {
            get { return _lineStartsAt; }

            set { SetProperty(ref _lineStartsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptanceBillFromLineStartsAt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptanceBillUntil : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _computed;
        private QuoteSubscriptionDataBillOnAcceptanceBillUntilDuration _duration;
        private QuoteSubscriptionDataBillOnAcceptanceBillUntilLineEndsAt _lineEndsAt;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("computed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Computed
        {
            get { return _computed; }

            set { SetProperty(ref _computed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("duration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptanceBillUntilDuration Duration
        {
            get { return _duration; }

            set { SetProperty(ref _duration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineEndsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataBillOnAcceptanceBillUntilLineEndsAt LineEndsAt
        {
            get { return _lineEndsAt; }

            set { SetProperty(ref _lineEndsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptanceBillUntilDuration : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _interval;
        private long _intervalCount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataBillOnAcceptanceBillUntilLineEndsAt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverride : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteSubscriptionDataOverrideAppliesTo _appliesTo;
        private QuoteSubscriptionDataOverrideBillOnAcceptance _billOnAcceptance;
        private string _billingBehavior;
        private string _customer;
        private string _description;
        private string _endBehavior;
        private string _prorationBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("appliesTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideAppliesTo AppliesTo
        {
            get { return _appliesTo; }

            set { SetProperty(ref _appliesTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billOnAcceptance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptance BillOnAcceptance
        {
            get { return _billOnAcceptance; }

            set { SetProperty(ref _billOnAcceptance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingBehavior
        {
            get { return _billingBehavior; }

            set { SetProperty(ref _billingBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndBehavior
        {
            get { return _endBehavior; }

            set { SetProperty(ref _endBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prorationBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProrationBehavior
        {
            get { return _prorationBehavior; }

            set { SetProperty(ref _prorationBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideAppliesTo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _newReference;
        private string _subscriptionSchedule;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("newReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NewReference
        {
            get { return _newReference; }

            set { SetProperty(ref _newReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionSchedule
        {
            get { return _subscriptionSchedule; }

            set { SetProperty(ref _subscriptionSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteSubscriptionDataOverrideBillOnAcceptanceBillFrom _billFrom;
        private QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntil _billUntil;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billFrom")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptanceBillFrom BillFrom
        {
            get { return _billFrom; }

            set { SetProperty(ref _billFrom, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billUntil")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntil BillUntil
        {
            get { return _billUntil; }

            set { SetProperty(ref _billUntil, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptanceBillFrom : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _computed;
        private QuoteSubscriptionDataOverrideBillOnAcceptanceBillFromLineStartsAt _lineStartsAt;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("computed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Computed
        {
            get { return _computed; }

            set { SetProperty(ref _computed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineStartsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptanceBillFromLineStartsAt LineStartsAt
        {
            get { return _lineStartsAt; }

            set { SetProperty(ref _lineStartsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptanceBillFromLineStartsAt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntil : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _computed;
        private QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilDuration _duration;
        private QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilLineEndsAt _lineEndsAt;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("computed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Computed
        {
            get { return _computed; }

            set { SetProperty(ref _computed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("duration")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilDuration Duration
        {
            get { return _duration; }

            set { SetProperty(ref _duration, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lineEndsAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilLineEndsAt LineEndsAt
        {
            get { return _lineEndsAt; }

            set { SetProperty(ref _lineEndsAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilDuration : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _interval;
        private long _intervalCount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataOverrideBillOnAcceptanceBillUntilLineEndsAt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionDataPrebilling : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _iterations;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iterations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Iterations
        {
            get { return _iterations; }

            set { SetProperty(ref _iterations, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionSchedule : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private QuoteSubscriptionScheduleAppliesTo _appliesTo;
        private string _subscriptionSchedule;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("appliesTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteSubscriptionScheduleAppliesTo AppliesTo
        {
            get { return _appliesTo; }

            set { SetProperty(ref _appliesTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionSchedule
        {
            get { return _subscriptionSchedule; }

            set { SetProperty(ref _subscriptionSchedule, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteSubscriptionScheduleAppliesTo : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _newReference;
        private string _subscriptionSchedule;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("newReference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NewReference
        {
            get { return _newReference; }

            set { SetProperty(ref _newReference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionSchedule
        {
            get { return _subscriptionSchedule; }

            set { SetProperty(ref _subscriptionSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteTotalDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amountDiscount;
        private long? _amountShipping;
        private long _amountTax;
        private QuoteTotalDetailsBreakdown _breakdown;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountDiscount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountDiscount
        {
            get { return _amountDiscount; }

            set { SetProperty(ref _amountDiscount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountShipping")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountShipping
        {
            get { return _amountShipping; }

            set { SetProperty(ref _amountShipping, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountTax
        {
            get { return _amountTax; }

            set { SetProperty(ref _amountTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("breakdown")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public QuoteTotalDetailsBreakdown Breakdown
        {
            get { return _breakdown; }

            set { SetProperty(ref _breakdown, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteTotalDetailsBreakdown : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<QuoteTotalDetailsBreakdownDiscount> _discounts;
        private System.Collections.Generic.ICollection<QuoteTotalDetailsBreakdownTax> _taxes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteTotalDetailsBreakdownDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<QuoteTotalDetailsBreakdownTax> Taxes
        {
            get { return _taxes; }

            set { SetProperty(ref _taxes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteTotalDetailsBreakdownDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private Discount _discount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteTotalDetailsBreakdownTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private TaxRate _rate;
        private string _taxabilityReason;
        private long? _taxableAmount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRate Rate
        {
            get { return _rate; }

            set { SetProperty(ref _rate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxabilityReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxabilityReason
        {
            get { return _taxabilityReason; }

            set { SetProperty(ref _taxabilityReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxableAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? TaxableAmount
        {
            get { return _taxableAmount; }

            set { SetProperty(ref _taxableAmount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class QuoteTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private double? _amountPercent;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? AmountPercent
        {
            get { return _amountPercent; }

            set { SetProperty(ref _amountPercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefreshRequest : Prism.Mvvm.BindableBase
    {
        private string _refreshToken;

        [System.Text.Json.Serialization.JsonPropertyName("refreshToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string RefreshToken
        {
            get { return _refreshToken; }

            set { SetProperty(ref _refreshToken, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Refund : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private string _chargeId;
        private Charge _charge;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _description;
        private RefundDestinationDetails _destinationDetails;
        private string _failureBalanceTransactionId;
        private BalanceTransaction _failureBalanceTransaction;
        private string _failureReason;
        private string _instructionsEmail;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private RefundNextAction _nextAction;
        private string _paymentIntentId;
        private PaymentIntent _paymentIntent;
        private string _reason;
        private string _receiptNumber;
        private string _sourceTransferReversalId;
        private TransferReversal _sourceTransferReversal;
        private string _status;
        private string _transferReversalId;
        private TransferReversal _transferReversal;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetails DestinationDetails
        {
            get { return _destinationDetails; }

            set { SetProperty(ref _destinationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureBalanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureBalanceTransactionId
        {
            get { return _failureBalanceTransactionId; }

            set { SetProperty(ref _failureBalanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureBalanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction FailureBalanceTransaction
        {
            get { return _failureBalanceTransaction; }

            set { SetProperty(ref _failureBalanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failureReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FailureReason
        {
            get { return _failureReason; }

            set { SetProperty(ref _failureReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("instructionsEmail")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InstructionsEmail
        {
            get { return _instructionsEmail; }

            set { SetProperty(ref _instructionsEmail, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundNextAction NextAction
        {
            get { return _nextAction; }

            set { SetProperty(ref _nextAction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentIntentId
        {
            get { return _paymentIntentId; }

            set { SetProperty(ref _paymentIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("receiptNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReceiptNumber
        {
            get { return _receiptNumber; }

            set { SetProperty(ref _receiptNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransferReversalId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceTransferReversalId
        {
            get { return _sourceTransferReversalId; }

            set { SetProperty(ref _sourceTransferReversalId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransferReversal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TransferReversal SourceTransferReversal
        {
            get { return _sourceTransferReversal; }

            set { SetProperty(ref _sourceTransferReversal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferReversalId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferReversalId
        {
            get { return _transferReversalId; }

            set { SetProperty(ref _transferReversalId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferReversal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TransferReversal TransferReversal
        {
            get { return _transferReversal; }

            set { SetProperty(ref _transferReversal, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private RefundDestinationDetailsAffirm _affirm;
        private RefundDestinationDetailsAfterpayClearpay _afterpayClearpay;
        private RefundDestinationDetailsAlipay _alipay;
        private RefundDestinationDetailsAlma _alma;
        private RefundDestinationDetailsAmazonPay _amazonPay;
        private RefundDestinationDetailsAuBankTransfer _auBankTransfer;
        private RefundDestinationDetailsBlik _blik;
        private RefundDestinationDetailsBrBankTransfer _brBankTransfer;
        private RefundDestinationDetailsCard _card;
        private RefundDestinationDetailsCashapp _cashapp;
        private RefundDestinationDetailsCustomerCashBalance _customerCashBalance;
        private RefundDestinationDetailsEps _eps;
        private RefundDestinationDetailsEuBankTransfer _euBankTransfer;
        private RefundDestinationDetailsGbBankTransfer _gbBankTransfer;
        private RefundDestinationDetailsGiropay _giropay;
        private RefundDestinationDetailsGrabpay _grabpay;
        private RefundDestinationDetailsIdBankTransfer _idBankTransfer;
        private RefundDestinationDetailsJpBankTransfer _jpBankTransfer;
        private RefundDestinationDetailsKlarna _klarna;
        private RefundDestinationDetailsMultibanco _multibanco;
        private RefundDestinationDetailsMxBankTransfer _mxBankTransfer;
        private RefundDestinationDetailsP24 _p24;
        private RefundDestinationDetailsPaynow _paynow;
        private RefundDestinationDetailsPaypal _paypal;
        private RefundDestinationDetailsPix _pix;
        private RefundDestinationDetailsRevolut _revolut;
        private RefundDestinationDetailsSofort _sofort;
        private RefundDestinationDetailsSwish _swish;
        private RefundDestinationDetailsThBankTransfer _thBankTransfer;
        private string _type;
        private RefundDestinationDetailsUsBankTransfer _usBankTransfer;
        private RefundDestinationDetailsWechatPay _wechatPay;
        private RefundDestinationDetailsZip _zip;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("affirm")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAffirm Affirm
        {
            get { return _affirm; }

            set { SetProperty(ref _affirm, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("afterpayClearpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAfterpayClearpay AfterpayClearpay
        {
            get { return _afterpayClearpay; }

            set { SetProperty(ref _afterpayClearpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alipay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAlipay Alipay
        {
            get { return _alipay; }

            set { SetProperty(ref _alipay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("alma")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAlma Alma
        {
            get { return _alma; }

            set { SetProperty(ref _alma, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsAuBankTransfer AuBankTransfer
        {
            get { return _auBankTransfer; }

            set { SetProperty(ref _auBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("blik")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsBlik Blik
        {
            get { return _blik; }

            set { SetProperty(ref _blik, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsBrBankTransfer BrBankTransfer
        {
            get { return _brBankTransfer; }

            set { SetProperty(ref _brBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerCashBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsCustomerCashBalance CustomerCashBalance
        {
            get { return _customerCashBalance; }

            set { SetProperty(ref _customerCashBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("eps")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsEps Eps
        {
            get { return _eps; }

            set { SetProperty(ref _eps, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("euBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsEuBankTransfer EuBankTransfer
        {
            get { return _euBankTransfer; }

            set { SetProperty(ref _euBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gbBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsGbBankTransfer GbBankTransfer
        {
            get { return _gbBankTransfer; }

            set { SetProperty(ref _gbBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("giropay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsGiropay Giropay
        {
            get { return _giropay; }

            set { SetProperty(ref _giropay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("grabpay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsGrabpay Grabpay
        {
            get { return _grabpay; }

            set { SetProperty(ref _grabpay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("jpBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsJpBankTransfer JpBankTransfer
        {
            get { return _jpBankTransfer; }

            set { SetProperty(ref _jpBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarna")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsKlarna Klarna
        {
            get { return _klarna; }

            set { SetProperty(ref _klarna, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("multibanco")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsMultibanco Multibanco
        {
            get { return _multibanco; }

            set { SetProperty(ref _multibanco, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mxBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsMxBankTransfer MxBankTransfer
        {
            get { return _mxBankTransfer; }

            set { SetProperty(ref _mxBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("p24")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsP24 P24
        {
            get { return _p24; }

            set { SetProperty(ref _p24, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paynow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsPaynow Paynow
        {
            get { return _paynow; }

            set { SetProperty(ref _paynow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pix")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsPix Pix
        {
            get { return _pix; }

            set { SetProperty(ref _pix, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolut")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsRevolut Revolut
        {
            get { return _revolut; }

            set { SetProperty(ref _revolut, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofort")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsSofort Sofort
        {
            get { return _sofort; }

            set { SetProperty(ref _sofort, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("swish")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsSwish Swish
        {
            get { return _swish; }

            set { SetProperty(ref _swish, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("thBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsThBankTransfer ThBankTransfer
        {
            get { return _thBankTransfer; }

            set { SetProperty(ref _thBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsUsBankTransfer UsBankTransfer
        {
            get { return _usBankTransfer; }

            set { SetProperty(ref _usBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wechatPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsWechatPay WechatPay
        {
            get { return _wechatPay; }

            set { SetProperty(ref _wechatPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("zip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundDestinationDetailsZip Zip
        {
            get { return _zip; }

            set { SetProperty(ref _zip, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAffirm : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAfterpayClearpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAlipay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAlma : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsAuBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsBlik : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _networkDeclineCode;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkDeclineCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkDeclineCode
        {
            get { return _networkDeclineCode; }

            set { SetProperty(ref _networkDeclineCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsBrBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;
        private string _referenceType;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceType
        {
            get { return _referenceType; }

            set { SetProperty(ref _referenceType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsCustomerCashBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsEps : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsEuBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsGbBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsGiropay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsGrabpay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsJpBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsKlarna : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsMultibanco : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsMxBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsP24 : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsPaynow : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsPix : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsRevolut : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsSofort : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsSwish : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _networkDeclineCode;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("networkDeclineCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string NetworkDeclineCode
        {
            get { return _networkDeclineCode; }

            set { SetProperty(ref _networkDeclineCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsThBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsUsBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _reference;
        private string _referenceStatus;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("referenceStatus")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReferenceStatus
        {
            get { return _referenceStatus; }

            set { SetProperty(ref _referenceStatus, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsWechatPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundDestinationDetailsZip : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundNextAction : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private RefundNextActionDisplayDetails _displayDetails;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundNextActionDisplayDetails DisplayDetails
        {
            get { return _displayDetails; }

            set { SetProperty(ref _displayDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundNextActionDisplayDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private RefundNextActionDisplayDetailsEmailSent _emailSent;
        private System.DateTimeOffset _expiresAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emailSent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public RefundNextActionDisplayDetailsEmailSent EmailSent
        {
            get { return _emailSent; }

            set { SetProperty(ref _emailSent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RefundNextActionDisplayDetailsEmailSent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _emailSentAt;
        private string _emailSentTo;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emailSentAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EmailSentAt
        {
            get { return _emailSentAt; }

            set { SetProperty(ref _emailSentAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("emailSentTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EmailSentTo
        {
            get { return _emailSentTo; }

            set { SetProperty(ref _emailSentTo, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RegisterRequest : Prism.Mvvm.BindableBase
    {
        private string _firsName;
        private string _lastName;
        private string _phoneNumber;
        private string _email;
        private string _password;
        private string _confirmPassword;
        private string _avatar;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("firsName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string FirsName
        {
            get { return _firsName; }

            set { SetProperty(ref _firsName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LastName
        {
            get { return _lastName; }

            set { SetProperty(ref _lastName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string PhoneNumber
        {
            get { return _phoneNumber; }

            set { SetProperty(ref _phoneNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("password")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(50, MinimumLength = 1)]
        public string Password
        {
            get { return _password; }

            set { SetProperty(ref _password, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("confirmPassword")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ConfirmPassword
        {
            get { return _confirmPassword; }

            set { SetProperty(ref _confirmPassword, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("avatar")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Avatar
        {
            get { return _avatar; }

            set { SetProperty(ref _avatar, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestAllowed : Prism.Mvvm.BindableBase
    {
        private long _numberRequests;
        private long _currentNumberRequests;
        private bool _allowed;

        [System.Text.Json.Serialization.JsonPropertyName("numberRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long NumberRequests
        {
            get { return _numberRequests; }

            set { SetProperty(ref _numberRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentNumberRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long CurrentNumberRequests
        {
            get { return _currentNumberRequests; }

            set { SetProperty(ref _currentNumberRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Allowed
        {
            get { return _allowed; }

            set { SetProperty(ref _allowed, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestCreate : Prism.Mvvm.BindableBase
    {
        private string _value;
        private string _spaceId;
        private string _serviceId;

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("spaceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string SpaceId
        {
            get { return _spaceId; }

            set { SetProperty(ref _spaceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestData : Prism.Mvvm.BindableBase
    {
        private object _dateTime;
        private int _requests;
        private int _errors;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("dateTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public object DateTime
        {
            get { return _dateTime; }

            set { SetProperty(ref _dateTime, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Requests
        {
            get { return _requests; }

            set { SetProperty(ref _requests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errors")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Errors
        {
            get { return _errors; }

            set { SetProperty(ref _errors, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RequestResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _status;
        private string _question;
        private string _answer;
        private string _modelGateway;
        private string _modelAi;
        private string _userId;
        private string _subscriptionId;
        private string _serviceId;
        private System.Collections.Generic.ICollection<EventRequestResponse> _events;
        private System.DateTimeOffset _createdAt;
        private System.DateTimeOffset _updatedAt;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("question")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Question
        {
            get { return _question; }

            set { SetProperty(ref _question, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("answer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Answer
        {
            get { return _answer; }

            set { SetProperty(ref _answer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelGateway")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelGateway
        {
            get { return _modelGateway; }

            set { SetProperty(ref _modelGateway, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelAi")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelAi
        {
            get { return _modelAi; }

            set { SetProperty(ref _modelAi, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string UserId
        {
            get { return _userId; }

            set { SetProperty(ref _userId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("events")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<EventRequestResponse> Events
        {
            get { return _events; }

            set { SetProperty(ref _events, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("createdAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CreatedAt
        {
            get { return _createdAt; }

            set { SetProperty(ref _createdAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updatedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset UpdatedAt
        {
            get { return _updatedAt; }

            set { SetProperty(ref _updatedAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RequestType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"All")]
        All = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Requests")]
        Requests = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Errors")]
        Errors = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResendConfirmationEmailRequest : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResetPasswordRequest : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _resetCode;
        private string _newPassword;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ResetCode
        {
            get { return _resetCode; }

            set { SetProperty(ref _resetCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("newPassword")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string NewPassword
        {
            get { return _newPassword; }

            set { SetProperty(ref _newPassword, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Review : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _billingZip;
        private string _chargeId;
        private Charge _charge;
        private string _closedReason;
        private System.DateTimeOffset _created;
        private string _ipAddress;
        private ReviewLocation _ipAddressLocation;
        private bool _livemode;
        private bool _open;
        private string _openedReason;
        private string _paymentIntentId;
        private PaymentIntent _paymentIntent;
        private string _reason;
        private ReviewSession _session;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingZip")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingZip
        {
            get { return _billingZip; }

            set { SetProperty(ref _billingZip, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("chargeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ChargeId
        {
            get { return _chargeId; }

            set { SetProperty(ref _chargeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("closedReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ClosedReason
        {
            get { return _closedReason; }

            set { SetProperty(ref _closedReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ipAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IpAddress
        {
            get { return _ipAddress; }

            set { SetProperty(ref _ipAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ipAddressLocation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ReviewLocation IpAddressLocation
        {
            get { return _ipAddressLocation; }

            set { SetProperty(ref _ipAddressLocation, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("open")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Open
        {
            get { return _open; }

            set { SetProperty(ref _open, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("openedReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OpenedReason
        {
            get { return _openedReason; }

            set { SetProperty(ref _openedReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentIntentId
        {
            get { return _paymentIntentId; }

            set { SetProperty(ref _paymentIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("session")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ReviewSession Session
        {
            get { return _session; }

            set { SetProperty(ref _session, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReviewLocation : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _city;
        private string _country;
        private double? _latitude;
        private double? _longitude;
        private string _region;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("city")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string City
        {
            get { return _city; }

            set { SetProperty(ref _city, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latitude")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? Latitude
        {
            get { return _latitude; }

            set { SetProperty(ref _latitude, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("longitude")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? Longitude
        {
            get { return _longitude; }

            set { SetProperty(ref _longitude, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("region")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Region
        {
            get { return _region; }

            set { SetProperty(ref _region, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ReviewSession : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _browser;
        private string _device;
        private string _platform;
        private string _version;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("browser")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Browser
        {
            get { return _browser; }

            set { SetProperty(ref _browser, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("device")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Device
        {
            get { return _device; }

            set { SetProperty(ref _device, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("platform")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Platform
        {
            get { return _platform; }

            set { SetProperty(ref _platform, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Version
        {
            get { return _version; }

            set { SetProperty(ref _version, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RoleAssign : Prism.Mvvm.BindableBase
    {
        private string _email;
        private string _roleId;

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("roleId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string RoleId
        {
            get { return _roleId; }

            set { SetProperty(ref _roleId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RoleCreate : Prism.Mvvm.BindableBase
    {
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RolePermitionAssign : Prism.Mvvm.BindableBase
    {
        private string _roleId;
        private System.Collections.Generic.ICollection<string> _permissions = new System.Collections.ObjectModel.Collection<string>();

        [System.Text.Json.Serialization.JsonPropertyName("roleId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string RoleId
        {
            get { return _roleId; }

            set { SetProperty(ref _roleId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RoleResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private System.Collections.Generic.ICollection<string> _permissions;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Rule : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _action;
        private bool? _deleted;
        private string _predicate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("action")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Action
        {
            get { return _action; }

            set { SetProperty(ref _action, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("predicate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Predicate
        {
            get { return _predicate; }

            set { SetProperty(ref _predicate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceCreate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _token;
        private string _modelAiId;
        private string _absolutePath;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelAiId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelAiId
        {
            get { return _modelAiId; }

            set { SetProperty(ref _modelAiId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceDataTod : Prism.Mvvm.BindableBase
    {
        private int _value;
        private string _status;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceMethodCreate : Prism.Mvvm.BindableBase
    {
        private string _serviceId;
        private string _method;
        private System.Collections.Generic.ICollection<string> _inputParameters;
        private System.Collections.Generic.ICollection<string> _outputParameters;
        private string _inputs;
        private string _outputs;

        [System.Text.Json.Serialization.JsonPropertyName("serviceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ServiceId
        {
            get { return _serviceId; }

            set { SetProperty(ref _serviceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("method")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Method
        {
            get { return _method; }

            set { SetProperty(ref _method, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> InputParameters
        {
            get { return _inputParameters; }

            set { SetProperty(ref _inputParameters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OutputParameters
        {
            get { return _outputParameters; }

            set { SetProperty(ref _outputParameters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Inputs
        {
            get { return _inputs; }

            set { SetProperty(ref _inputs, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Outputs
        {
            get { return _outputs; }

            set { SetProperty(ref _outputs, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceMethodResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _method;
        private System.Collections.Generic.ICollection<string> _inputParameters;
        private System.Collections.Generic.ICollection<string> _outputParameters;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("method")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Method
        {
            get { return _method; }

            set { SetProperty(ref _method, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> InputParameters
        {
            get { return _inputParameters; }

            set { SetProperty(ref _inputParameters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OutputParameters
        {
            get { return _outputParameters; }

            set { SetProperty(ref _outputParameters, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceMethodUpdate : Prism.Mvvm.BindableBase
    {
        private string _method;
        private System.Collections.Generic.ICollection<string> _inputParameters;
        private System.Collections.Generic.ICollection<string> _outputParameters;
        private string _inputs;
        private string _outputs;

        [System.Text.Json.Serialization.JsonPropertyName("method")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Method
        {
            get { return _method; }

            set { SetProperty(ref _method, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> InputParameters
        {
            get { return _inputParameters; }

            set { SetProperty(ref _inputParameters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outputParameters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> OutputParameters
        {
            get { return _outputParameters; }

            set { SetProperty(ref _outputParameters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Inputs
        {
            get { return _inputs; }

            set { SetProperty(ref _inputs, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("outputs")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Outputs
        {
            get { return _outputs; }

            set { SetProperty(ref _outputs, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _absolutePath;
        private string _token;
        private string _modelAiId;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("absolutePath")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AbsolutePath
        {
            get { return _absolutePath; }

            set { SetProperty(ref _absolutePath, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelAiId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelAiId
        {
            get { return _modelAiId; }

            set { SetProperty(ref _modelAiId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceUpdate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _token;
        private string _modelAiId;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelAiId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ModelAiId
        {
            get { return _modelAiId; }

            set { SetProperty(ref _modelAiId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ServiceUsersCount : Prism.Mvvm.BindableBase
    {
        private string _serviceType;
        private int _count;

        [System.Text.Json.Serialization.JsonPropertyName("serviceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ServiceType
        {
            get { return _serviceType; }

            set { SetProperty(ref _serviceType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("count")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Count
        {
            get { return _count; }

            set { SetProperty(ref _count, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SessionCreate : Prism.Mvvm.BindableBase
    {
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SessionVm : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _sessionToken;
        private string _userToken;
        private string _authorizationType;
        private System.DateTimeOffset _startTime;
        private System.DateTimeOffset? _endTime;
        private bool _isActive;
        private string _ipAddress;
        private string _deviceInfo;
        private System.Collections.Generic.ICollection<string> _services;
        private string _modelGatewayId;
        private string _subscription;
        private System.DateTimeOffset _creationDate;
        private string _apiEndPoint;
        private bool _status;
        private System.Collections.Generic.ICollection<SpaceResponse> _spaces;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sessionToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SessionToken
        {
            get { return _sessionToken; }

            set { SetProperty(ref _sessionToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserToken
        {
            get { return _userToken; }

            set { SetProperty(ref _userToken, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authorizationType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthorizationType
        {
            get { return _authorizationType; }

            set { SetProperty(ref _authorizationType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartTime
        {
            get { return _startTime; }

            set { SetProperty(ref _startTime, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EndTime
        {
            get { return _endTime; }

            set { SetProperty(ref _endTime, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isActive")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsActive
        {
            get { return _isActive; }

            set { SetProperty(ref _isActive, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ipAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IpAddress
        {
            get { return _ipAddress; }

            set { SetProperty(ref _ipAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deviceInfo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DeviceInfo
        {
            get { return _deviceInfo; }

            set { SetProperty(ref _deviceInfo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("services")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Services
        {
            get { return _services; }

            set { SetProperty(ref _services, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("modelGatewayId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ModelGatewayId
        {
            get { return _modelGatewayId; }

            set { SetProperty(ref _modelGatewayId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("creationDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CreationDate
        {
            get { return _creationDate; }

            set { SetProperty(ref _creationDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("apiEndPoint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApiEndPoint
        {
            get { return _apiEndPoint; }

            set { SetProperty(ref _apiEndPoint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("spaces")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SpaceResponse> Spaces
        {
            get { return _spaces; }

            set { SetProperty(ref _spaces, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SettingCreate : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _value;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SettingUpdate : Prism.Mvvm.BindableBase
    {
        private string _value;

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttempt : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _applicationId;
        private Application _application;
        private bool _attachToSelf;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private System.Collections.Generic.ICollection<string> _flowDirections;
        private bool _livemode;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private string _paymentMethodId;
        private PaymentMethod _paymentMethod;
        private SetupAttemptPaymentMethodDetails _paymentMethodDetails;
        private StripeError _setupError;
        private string _setupIntentId;
        private SetupIntent _setupIntent;
        private string _status;
        private string _usage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("attachToSelf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AttachToSelf
        {
            get { return _attachToSelf; }

            set { SetProperty(ref _attachToSelf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flowDirections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> FlowDirections
        {
            get { return _flowDirections; }

            set { SetProperty(ref _flowDirections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodId
        {
            get { return _paymentMethodId; }

            set { SetProperty(ref _paymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetails PaymentMethodDetails
        {
            get { return _paymentMethodDetails; }

            set { SetProperty(ref _paymentMethodDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeError SetupError
        {
            get { return _setupError; }

            set { SetProperty(ref _setupError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SetupIntentId
        {
            get { return _setupIntentId; }

            set { SetProperty(ref _setupIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntent SetupIntent
        {
            get { return _setupIntent; }

            set { SetProperty(ref _setupIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Usage
        {
            get { return _usage; }

            set { SetProperty(ref _usage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupAttemptPaymentMethodDetailsAcssDebit _acssDebit;
        private SetupAttemptPaymentMethodDetailsAmazonPay _amazonPay;
        private SetupAttemptPaymentMethodDetailsAuBecsDebit _auBecsDebit;
        private SetupAttemptPaymentMethodDetailsBacsDebit _bacsDebit;
        private SetupAttemptPaymentMethodDetailsBancontact _bancontact;
        private SetupAttemptPaymentMethodDetailsBoleto _boleto;
        private SetupAttemptPaymentMethodDetailsCard _card;
        private SetupAttemptPaymentMethodDetailsCardPresent _cardPresent;
        private SetupAttemptPaymentMethodDetailsCashapp _cashapp;
        private SetupAttemptPaymentMethodDetailsIdBankTransfer _idBankTransfer;
        private SetupAttemptPaymentMethodDetailsIdeal _ideal;
        private SetupAttemptPaymentMethodDetailsKakaoPay _kakaoPay;
        private SetupAttemptPaymentMethodDetailsKlarna _klarna;
        private SetupAttemptPaymentMethodDetailsKrCard _krCard;
        private SetupAttemptPaymentMethodDetailsLink _link;
        private SetupAttemptPaymentMethodDetailsPaypal _paypal;
        private SetupAttemptPaymentMethodDetailsPayto _payto;
        private SetupAttemptPaymentMethodDetailsRevolutPay _revolutPay;
        private SetupAttemptPaymentMethodDetailsSepaDebit _sepaDebit;
        private SetupAttemptPaymentMethodDetailsSofort _sofort;
        private string _type;
        private SetupAttemptPaymentMethodDetailsUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("auBecsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsAuBecsDebit AuBecsDebit
        {
            get { return _auBecsDebit; }

            set { SetProperty(ref _auBecsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("boleto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsBoleto Boleto
        {
            get { return _boleto; }

            set { SetProperty(ref _boleto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashapp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCashapp Cashapp
        {
            get { return _cashapp; }

            set { SetProperty(ref _cashapp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ideal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsIdeal Ideal
        {
            get { return _ideal; }

            set { SetProperty(ref _ideal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("kakaoPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsKakaoPay KakaoPay
        {
            get { return _kakaoPay; }

            set { SetProperty(ref _kakaoPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("klarna")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsKlarna Klarna
        {
            get { return _klarna; }

            set { SetProperty(ref _klarna, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("krCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsKrCard KrCard
        {
            get { return _krCard; }

            set { SetProperty(ref _krCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("revolutPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsRevolutPay RevolutPay
        {
            get { return _revolutPay; }

            set { SetProperty(ref _revolutPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sofort")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsSofort Sofort
        {
            get { return _sofort; }

            set { SetProperty(ref _sofort, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsAuBecsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _bankName;
        private string _bic;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _preferredLanguage;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsBoleto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _brand;
        private SetupAttemptPaymentMethodDetailsCardChecks _checks;
        private string _country;
        private string _description;
        private long? _expMonth;
        private long? _expYear;
        private string _fingerprint;
        private string _funding;
        private string _iin;
        private string _issuer;
        private string _last4;
        private string _network;
        private SetupAttemptPaymentMethodDetailsCardThreeDSecure _threeDSecure;
        private SetupAttemptPaymentMethodDetailsCardWallet _wallet;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Brand
        {
            get { return _brand; }

            set { SetProperty(ref _brand, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("checks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardChecks Checks
        {
            get { return _checks; }

            set { SetProperty(ref _checks, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpMonth
        {
            get { return _expMonth; }

            set { SetProperty(ref _expMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expYear")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? ExpYear
        {
            get { return _expYear; }

            set { SetProperty(ref _expYear, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fingerprint")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Fingerprint
        {
            get { return _fingerprint; }

            set { SetProperty(ref _fingerprint, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("funding")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Funding
        {
            get { return _funding; }

            set { SetProperty(ref _funding, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("iin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Iin
        {
            get { return _iin; }

            set { SetProperty(ref _iin, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("last4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Last4
        {
            get { return _last4; }

            set { SetProperty(ref _last4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("threeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardThreeDSecure ThreeDSecure
        {
            get { return _threeDSecure; }

            set { SetProperty(ref _threeDSecure, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("wallet")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardWallet Wallet
        {
            get { return _wallet; }

            set { SetProperty(ref _wallet, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardChecks : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _addressLine1Check;
        private string _addressPostalCodeCheck;
        private string _cvcCheck;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressLine1Check")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressLine1Check
        {
            get { return _addressLine1Check; }

            set { SetProperty(ref _addressLine1Check, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addressPostalCodeCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AddressPostalCodeCheck
        {
            get { return _addressPostalCodeCheck; }

            set { SetProperty(ref _addressPostalCodeCheck, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cvcCheck")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CvcCheck
        {
            get { return _cvcCheck; }

            set { SetProperty(ref _cvcCheck, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _generatedCardId;
        private PaymentMethod _generatedCard;
        private SetupAttemptPaymentMethodDetailsCardPresentOffline _offline;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedCardId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedCardId
        {
            get { return _generatedCardId; }

            set { SetProperty(ref _generatedCardId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedCard")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedCard
        {
            get { return _generatedCard; }

            set { SetProperty(ref _generatedCard, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("offline")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardPresentOffline Offline
        {
            get { return _offline; }

            set { SetProperty(ref _offline, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardPresentOffline : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _storedAt;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("storedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? StoredAt
        {
            get { return _storedAt; }

            set { SetProperty(ref _storedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardThreeDSecure : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _authenticationFlow;
        private string _electronicCommerceIndicator;
        private string _result;
        private string _resultReason;
        private string _transactionId;
        private string _version;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("authenticationFlow")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AuthenticationFlow
        {
            get { return _authenticationFlow; }

            set { SetProperty(ref _authenticationFlow, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("electronicCommerceIndicator")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ElectronicCommerceIndicator
        {
            get { return _electronicCommerceIndicator; }

            set { SetProperty(ref _electronicCommerceIndicator, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("result")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Result
        {
            get { return _result; }

            set { SetProperty(ref _result, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resultReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ResultReason
        {
            get { return _resultReason; }

            set { SetProperty(ref _resultReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionId
        {
            get { return _transactionId; }

            set { SetProperty(ref _transactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("version")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Version
        {
            get { return _version; }

            set { SetProperty(ref _version, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardWallet : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupAttemptPaymentMethodDetailsCardWalletApplePay _applePay;
        private SetupAttemptPaymentMethodDetailsCardWalletGooglePay _googlePay;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardWalletApplePay ApplePay
        {
            get { return _applePay; }

            set { SetProperty(ref _applePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("googlePay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttemptPaymentMethodDetailsCardWalletGooglePay GooglePay
        {
            get { return _googlePay; }

            set { SetProperty(ref _googlePay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardWalletApplePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCardWalletGooglePay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsCashapp : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _bankCode;
        private string _bankName;
        private string _displayName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsIdeal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bank;
        private string _bic;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bank")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bank
        {
            get { return _bank; }

            set { SetProperty(ref _bank, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsKakaoPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsKlarna : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsKrCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsRevolutPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsSofort : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _bankCode;
        private string _bankName;
        private string _bic;
        private string _generatedSepaDebitId;
        private PaymentMethod _generatedSepaDebit;
        private string _generatedSepaDebitMandateId;
        private Mandate _generatedSepaDebitMandate;
        private string _ibanLast4;
        private string _preferredLanguage;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankCode
        {
            get { return _bankCode; }

            set { SetProperty(ref _bankCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BankName
        {
            get { return _bankName; }

            set { SetProperty(ref _bankName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bic")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Bic
        {
            get { return _bic; }

            set { SetProperty(ref _bic, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitId
        {
            get { return _generatedSepaDebitId; }

            set { SetProperty(ref _generatedSepaDebitId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod GeneratedSepaDebit
        {
            get { return _generatedSepaDebit; }

            set { SetProperty(ref _generatedSepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string GeneratedSepaDebitMandateId
        {
            get { return _generatedSepaDebitMandateId; }

            set { SetProperty(ref _generatedSepaDebitMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("generatedSepaDebitMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate GeneratedSepaDebitMandate
        {
            get { return _generatedSepaDebitMandate; }

            set { SetProperty(ref _generatedSepaDebitMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ibanLast4")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IbanLast4
        {
            get { return _ibanLast4; }

            set { SetProperty(ref _ibanLast4, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupAttemptPaymentMethodDetailsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _applicationId;
        private Application _application;
        private bool _attachToSelf;
        private SetupIntentAutomaticPaymentMethods _automaticPaymentMethods;
        private string _cancellationReason;
        private string _clientSecret;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private string _description;
        private System.Collections.Generic.ICollection<string> _flowDirections;
        private StripeError _lastSetupError;
        private string _latestAttemptId;
        private SetupAttempt _latestAttempt;
        private bool _livemode;
        private string _mandateId;
        private Mandate _mandate;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private SetupIntentNextAction _nextAction;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private string _paymentMethodId;
        private PaymentMethod _paymentMethod;
        private SetupIntentPaymentMethodConfigurationDetails _paymentMethodConfigurationDetails;
        private SetupIntentPaymentMethodOptions _paymentMethodOptions;
        private System.Collections.Generic.ICollection<string> _paymentMethodTypes;
        private string _singleUseMandateId;
        private Mandate _singleUseMandate;
        private string _status;
        private string _usage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("attachToSelf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool AttachToSelf
        {
            get { return _attachToSelf; }

            set { SetProperty(ref _attachToSelf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticPaymentMethods")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentAutomaticPaymentMethods AutomaticPaymentMethods
        {
            get { return _automaticPaymentMethods; }

            set { SetProperty(ref _automaticPaymentMethods, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancellationReason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CancellationReason
        {
            get { return _cancellationReason; }

            set { SetProperty(ref _cancellationReason, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("clientSecret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ClientSecret
        {
            get { return _clientSecret; }

            set { SetProperty(ref _clientSecret, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flowDirections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> FlowDirections
        {
            get { return _flowDirections; }

            set { SetProperty(ref _flowDirections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastSetupError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeError LastSetupError
        {
            get { return _lastSetupError; }

            set { SetProperty(ref _lastSetupError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestAttemptId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LatestAttemptId
        {
            get { return _latestAttemptId; }

            set { SetProperty(ref _latestAttemptId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestAttempt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupAttempt LatestAttempt
        {
            get { return _latestAttempt; }

            set { SetProperty(ref _latestAttempt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MandateId
        {
            get { return _mandateId; }

            set { SetProperty(ref _mandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate Mandate
        {
            get { return _mandate; }

            set { SetProperty(ref _mandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextAction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextAction NextAction
        {
            get { return _nextAction; }

            set { SetProperty(ref _nextAction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodId
        {
            get { return _paymentMethodId; }

            set { SetProperty(ref _paymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodConfigurationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodConfigurationDetails PaymentMethodConfigurationDetails
        {
            get { return _paymentMethodConfigurationDetails; }

            set { SetProperty(ref _paymentMethodConfigurationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptions PaymentMethodOptions
        {
            get { return _paymentMethodOptions; }

            set { SetProperty(ref _paymentMethodOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PaymentMethodTypes
        {
            get { return _paymentMethodTypes; }

            set { SetProperty(ref _paymentMethodTypes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("singleUseMandateId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SingleUseMandateId
        {
            get { return _singleUseMandateId; }

            set { SetProperty(ref _singleUseMandateId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("singleUseMandate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Mandate SingleUseMandate
        {
            get { return _singleUseMandate; }

            set { SetProperty(ref _singleUseMandate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Usage
        {
            get { return _usage; }

            set { SetProperty(ref _usage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentAutomaticPaymentMethods : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _allowRedirects;
        private bool? _enabled;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowRedirects")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AllowRedirects
        {
            get { return _allowRedirects; }

            set { SetProperty(ref _allowRedirects, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextAction : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentNextActionCashappHandleRedirectOrDisplayQrCode _cashappHandleRedirectOrDisplayQrCode;
        private SetupIntentNextActionRedirectToUrl _redirectToUrl;
        private string _type;
        private SetupIntentNextActionUseStripeSdk _useStripeSdk;
        private SetupIntentNextActionVerifyWithMicrodeposits _verifyWithMicrodeposits;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cashappHandleRedirectOrDisplayQrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextActionCashappHandleRedirectOrDisplayQrCode CashappHandleRedirectOrDisplayQrCode
        {
            get { return _cashappHandleRedirectOrDisplayQrCode; }

            set { SetProperty(ref _cashappHandleRedirectOrDisplayQrCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("redirectToUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextActionRedirectToUrl RedirectToUrl
        {
            get { return _redirectToUrl; }

            set { SetProperty(ref _redirectToUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("useStripeSdk")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextActionUseStripeSdk UseStripeSdk
        {
            get { return _useStripeSdk; }

            set { SetProperty(ref _useStripeSdk, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifyWithMicrodeposits")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextActionVerifyWithMicrodeposits VerifyWithMicrodeposits
        {
            get { return _verifyWithMicrodeposits; }

            set { SetProperty(ref _verifyWithMicrodeposits, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextActionCashappHandleRedirectOrDisplayQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _hostedInstructionsUrl;
        private string _mobileAuthUrl;
        private SetupIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode _qrCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedInstructionsUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedInstructionsUrl
        {
            get { return _hostedInstructionsUrl; }

            set { SetProperty(ref _hostedInstructionsUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mobileAuthUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MobileAuthUrl
        {
            get { return _mobileAuthUrl; }

            set { SetProperty(ref _mobileAuthUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("qrCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode QrCode
        {
            get { return _qrCode; }

            set { SetProperty(ref _qrCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextActionCashappHandleRedirectOrDisplayQrCodeQrCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _expiresAt;
        private string _imageUrlPng;
        private string _imageUrlSvg;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlPng")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlPng
        {
            get { return _imageUrlPng; }

            set { SetProperty(ref _imageUrlPng, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("imageUrlSvg")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ImageUrlSvg
        {
            get { return _imageUrlSvg; }

            set { SetProperty(ref _imageUrlSvg, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextActionRedirectToUrl : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _returnUrl;
        private string _url;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Url
        {
            get { return _url; }

            set { SetProperty(ref _url, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextActionUseStripeSdk : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentNextActionVerifyWithMicrodeposits : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _arrivalDate;
        private string _hostedVerificationUrl;
        private string _microdepositType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("arrivalDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ArrivalDate
        {
            get { return _arrivalDate; }

            set { SetProperty(ref _arrivalDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hostedVerificationUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string HostedVerificationUrl
        {
            get { return _hostedVerificationUrl; }

            set { SetProperty(ref _hostedVerificationUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("microdepositType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MicrodepositType
        {
            get { return _microdepositType; }

            set { SetProperty(ref _microdepositType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodConfigurationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _parent;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("parent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Parent
        {
            get { return _parent; }

            set { SetProperty(ref _parent, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsAcssDebit _acssDebit;
        private SetupIntentPaymentMethodOptionsAmazonPay _amazonPay;
        private SetupIntentPaymentMethodOptionsBacsDebit _bacsDebit;
        private SetupIntentPaymentMethodOptionsCard _card;
        private SetupIntentPaymentMethodOptionsCardPresent _cardPresent;
        private SetupIntentPaymentMethodOptionsLink _link;
        private SetupIntentPaymentMethodOptionsPaypal _paypal;
        private SetupIntentPaymentMethodOptionsPayto _payto;
        private SetupIntentPaymentMethodOptionsSepaDebit _sepaDebit;
        private SetupIntentPaymentMethodOptionsUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amazonPay")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsAmazonPay AmazonPay
        {
            get { return _amazonPay; }

            set { SetProperty(ref _amazonPay, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bacsDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsBacsDebit BacsDebit
        {
            get { return _bacsDebit; }

            set { SetProperty(ref _bacsDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cardPresent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsCardPresent CardPresent
        {
            get { return _cardPresent; }

            set { SetProperty(ref _cardPresent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsLink Link
        {
            get { return _link; }

            set { SetProperty(ref _link, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paypal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsPaypal Paypal
        {
            get { return _paypal; }

            set { SetProperty(ref _paypal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("payto")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsPayto Payto
        {
            get { return _payto; }

            set { SetProperty(ref _payto, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _currency;
        private SetupIntentPaymentMethodOptionsAcssDebitMandateOptions _mandateOptions;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsAcssDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsAcssDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _customMandateUrl;
        private System.Collections.Generic.ICollection<string> _defaultFor;
        private string _intervalDescription;
        private string _paymentSchedule;
        private string _transactionType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customMandateUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomMandateUrl
        {
            get { return _customMandateUrl; }

            set { SetProperty(ref _customMandateUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultFor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DefaultFor
        {
            get { return _defaultFor; }

            set { SetProperty(ref _defaultFor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IntervalDescription
        {
            get { return _intervalDescription; }

            set { SetProperty(ref _intervalDescription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionType
        {
            get { return _transactionType; }

            set { SetProperty(ref _transactionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsAmazonPay : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsBacsDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsBacsDebitMandateOptions _mandateOptions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsBacsDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsBacsDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsCardMandateOptions _mandateOptions;
        private string _network;
        private string _requestThreeDSecure;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsCardMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestThreeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestThreeDSecure
        {
            get { return _requestThreeDSecure; }

            set { SetProperty(ref _requestThreeDSecure, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsCardMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _amountType;
        private string _currency;
        private string _description;
        private System.DateTimeOffset? _endDate;
        private string _interval;
        private long? _intervalCount;
        private string _reference;
        private System.DateTimeOffset _startDate;
        private System.Collections.Generic.ICollection<string> _supportedTypes;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reference")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reference
        {
            get { return _reference; }

            set { SetProperty(ref _reference, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("supportedTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> SupportedTypes
        {
            get { return _supportedTypes; }

            set { SetProperty(ref _supportedTypes, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsCardPresent : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsLink : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _persistentToken;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("persistentToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Obsolete]
        public string PersistentToken
        {
            get { return _persistentToken; }

            set { SetProperty(ref _persistentToken, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsPaypal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _billingAgreementId;
        private string _currency;
        private System.Collections.Generic.ICollection<string> _subsellers;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingAgreementId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingAgreementId
        {
            get { return _billingAgreementId; }

            set { SetProperty(ref _billingAgreementId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subsellers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Subsellers
        {
            get { return _subsellers; }

            set { SetProperty(ref _subsellers, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsPayto : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsPaytoMandateOptions _mandateOptions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsPaytoMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsPaytoMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _amountType;
        private string _endDate;
        private string _paymentSchedule;
        private long? _paymentsPerPeriod;
        private string _purpose;
        private string _startDate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSchedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentSchedule
        {
            get { return _paymentSchedule; }

            set { SetProperty(ref _paymentSchedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentsPerPeriod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? PaymentsPerPeriod
        {
            get { return _paymentsPerPeriod; }

            set { SetProperty(ref _paymentsPerPeriod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("purpose")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Purpose
        {
            get { return _purpose; }

            set { SetProperty(ref _purpose, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsSepaDebitMandateOptions _mandateOptions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsSepaDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsSepaDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnections _financialConnections;
        private SetupIntentPaymentMethodOptionsUsBankAccountMandateOptions _mandateOptions;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialConnections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnections FinancialConnections
        {
            get { return _financialConnections; }

            set { SetProperty(ref _financialConnections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsUsBankAccountMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnections : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters _filters;
        private SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry _manualEntry;
        private System.Collections.Generic.ICollection<string> _permissions;
        private System.Collections.Generic.ICollection<string> _prefetch;
        private string _returnUrl;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("filters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters Filters
        {
            get { return _filters; }

            set { SetProperty(ref _filters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("manualEntry")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry ManualEntry
        {
            get { return _manualEntry; }

            set { SetProperty(ref _manualEntry, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prefetch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Prefetch
        {
            get { return _prefetch; }

            set { SetProperty(ref _prefetch, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("returnUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReturnUrl
        {
            get { return _returnUrl; }

            set { SetProperty(ref _returnUrl, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountSubcategories;
        private string _institution;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountSubcategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountSubcategories
        {
            get { return _accountSubcategories; }

            set { SetProperty(ref _accountSubcategories, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institution")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Institution
        {
            get { return _institution; }

            set { SetProperty(ref _institution, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsUsBankAccountFinancialConnectionsManualEntry : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _mode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Mode
        {
            get { return _mode; }

            set { SetProperty(ref _mode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SetupIntentPaymentMethodOptionsUsBankAccountMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _collectionMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Shipping : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private Address _address;
        private string _carrier;
        private string _name;
        private string _phone;
        private string _trackingNumber;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("address")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Address Address
        {
            get { return _address; }

            set { SetProperty(ref _address, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("carrier")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Carrier
        {
            get { return _carrier; }

            set { SetProperty(ref _carrier, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phone")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Phone
        {
            get { return _phone; }

            set { SetProperty(ref _phone, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trackingNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TrackingNumber
        {
            get { return _trackingNumber; }

            set { SetProperty(ref _trackingNumber, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private System.DateTimeOffset _created;
        private ShippingRateDeliveryEstimate _deliveryEstimate;
        private string _displayName;
        private ShippingRateFixedAmount _fixedAmount;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _taxBehavior;
        private string _taxCodeId;
        private TaxCode _taxCode;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deliveryEstimate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ShippingRateDeliveryEstimate DeliveryEstimate
        {
            get { return _deliveryEstimate; }

            set { SetProperty(ref _deliveryEstimate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fixedAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ShippingRateFixedAmount FixedAmount
        {
            get { return _fixedAmount; }

            set { SetProperty(ref _fixedAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxBehavior
        {
            get { return _taxBehavior; }

            set { SetProperty(ref _taxBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxCodeId
        {
            get { return _taxCodeId; }

            set { SetProperty(ref _taxCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxCode TaxCode
        {
            get { return _taxCode; }

            set { SetProperty(ref _taxCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRateDeliveryEstimate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private ShippingRateDeliveryEstimateMaximum _maximum;
        private ShippingRateDeliveryEstimateMinimum _minimum;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("maximum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ShippingRateDeliveryEstimateMaximum Maximum
        {
            get { return _maximum; }

            set { SetProperty(ref _maximum, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minimum")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public ShippingRateDeliveryEstimateMinimum Minimum
        {
            get { return _minimum; }

            set { SetProperty(ref _minimum, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRateDeliveryEstimateMaximum : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _unit;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Unit
        {
            get { return _unit; }

            set { SetProperty(ref _unit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRateDeliveryEstimateMinimum : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _unit;
        private long _value;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("unit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Unit
        {
            get { return _unit; }

            set { SetProperty(ref _unit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRateFixedAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _currency;
        private System.Collections.Generic.IDictionary<string, ShippingRateFixedAmountCurrencyOptions> _currencyOptions;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currencyOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, ShippingRateFixedAmountCurrencyOptions> CurrencyOptions
        {
            get { return _currencyOptions; }

            set { SetProperty(ref _currencyOptions, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ShippingRateFixedAmountCurrencyOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _taxBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxBehavior
        {
            get { return _taxBehavior; }

            set { SetProperty(ref _taxBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SpaceResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _name;
        private string _description;
        private int _ram;
        private int _cpuCores;
        private float _diskSpace;
        private bool _isGpu;
        private bool _isGlobal;
        private float _bandwidth;
        private string _subscriptionId;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Ram
        {
            get { return _ram; }

            set { SetProperty(ref _ram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cpuCores")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int CpuCores
        {
            get { return _cpuCores; }

            set { SetProperty(ref _cpuCores, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("diskSpace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float DiskSpace
        {
            get { return _diskSpace; }

            set { SetProperty(ref _diskSpace, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGpu")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGpu
        {
            get { return _isGpu; }

            set { SetProperty(ref _isGpu, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGlobal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGlobal
        {
            get { return _isGlobal; }

            set { SetProperty(ref _isGlobal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bandwidth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float Bandwidth
        {
            get { return _bandwidth; }

            set { SetProperty(ref _bandwidth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StatisticsUsedRequests : Prism.Mvvm.BindableBase
    {
        private string _name;
        private int _usageCount;
        private int? _remaining;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int UsageCount
        {
            get { return _usageCount; }

            set { SetProperty(ref _usageCount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("remaining")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int? Remaining
        {
            get { return _remaining; }

            set { SetProperty(ref _remaining, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StringStringIEnumerableKeyValuePair : Prism.Mvvm.BindableBase
    {
        private string _key;
        private System.Collections.Generic.ICollection<string> _value;

        [System.Text.Json.Serialization.JsonPropertyName("key")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Key
        {
            get { return _key; }

            set { SetProperty(ref _key, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StripeError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _charge;
        private string _code;
        private string _declineCode;
        private string _docUrl;
        private string _message;
        private string _param;
        private PaymentIntent _paymentIntent;
        private PaymentMethod _paymentMethod;
        private string _paymentMethodType;
        private string _requestLogUrl;
        private SetupIntent _setupIntent;
        private IPaymentSource _source;
        private string _type;
        private string _error;
        private string _errorDescription;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("charge")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Charge
        {
            get { return _charge; }

            set { SetProperty(ref _charge, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("code")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Code
        {
            get { return _code; }

            set { SetProperty(ref _code, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("declineCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DeclineCode
        {
            get { return _declineCode; }

            set { SetProperty(ref _declineCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("docUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DocUrl
        {
            get { return _docUrl; }

            set { SetProperty(ref _docUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Message
        {
            get { return _message; }

            set { SetProperty(ref _message, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("param")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Param
        {
            get { return _param; }

            set { SetProperty(ref _param, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentIntent PaymentIntent
        {
            get { return _paymentIntent; }

            set { SetProperty(ref _paymentIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod PaymentMethod
        {
            get { return _paymentMethod; }

            set { SetProperty(ref _paymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PaymentMethodType
        {
            get { return _paymentMethodType; }

            set { SetProperty(ref _paymentMethodType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestLogUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestLogUrl
        {
            get { return _requestLogUrl; }

            set { SetProperty(ref _requestLogUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("setupIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntent SetupIntent
        {
            get { return _setupIntent; }

            set { SetProperty(ref _setupIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("source")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource Source
        {
            get { return _source; }

            set { SetProperty(ref _source, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("error")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Error
        {
            get { return _error; }

            set { SetProperty(ref _error, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("errorDescription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ErrorDescription
        {
            get { return _errorDescription; }

            set { SetProperty(ref _errorDescription, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class StripeResponse : Prism.Mvvm.BindableBase
    {
        private HttpStatusCode _statusCode;
        private System.Collections.Generic.ICollection<StringStringIEnumerableKeyValuePair> _headers;
        private System.DateTimeOffset? _date;
        private string _idempotencyKey;
        private string _requestId;
        private string _content;

        [System.Text.Json.Serialization.JsonPropertyName("statusCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public HttpStatusCode StatusCode
        {
            get { return _statusCode; }

            set { SetProperty(ref _statusCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("headers")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<StringStringIEnumerableKeyValuePair> Headers
        {
            get { return _headers; }

            set { SetProperty(ref _headers, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("date")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Date
        {
            get { return _date; }

            set { SetProperty(ref _date, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idempotencyKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string IdempotencyKey
        {
            get { return _idempotencyKey; }

            set { SetProperty(ref _idempotencyKey, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestId
        {
            get { return _requestId; }

            set { SetProperty(ref _requestId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("content")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Content
        {
            get { return _content; }

            set { SetProperty(ref _content, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Subscription : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _applicationId;
        private Application _application;
        private double? _applicationFeePercent;
        private SubscriptionAutomaticTax _automaticTax;
        private System.DateTimeOffset _billingCycleAnchor;
        private SubscriptionBillingCycleAnchorConfig _billingCycleAnchorConfig;
        private SubscriptionBillingThresholds _billingThresholds;
        private System.DateTimeOffset? _cancelAt;
        private bool _cancelAtPeriodEnd;
        private System.DateTimeOffset? _canceledAt;
        private SubscriptionCancellationDetails _cancellationDetails;
        private string _collectionMethod;
        private System.DateTimeOffset _created;
        private string _currency;
        private System.DateTimeOffset _currentPeriodEnd;
        private System.DateTimeOffset _currentPeriodStart;
        private string _customerId;
        private Customer _customer;
        private long? _daysUntilDue;
        private string _defaultPaymentMethodId;
        private PaymentMethod _defaultPaymentMethod;
        private string _defaultSourceId;
        private IPaymentSource _defaultSource;
        private System.Collections.Generic.ICollection<TaxRate> _defaultTaxRates;
        private string _description;
        private Discount _discount;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private System.DateTimeOffset? _endedAt;
        private SubscriptionInvoiceSettings _invoiceSettings;
        private System.Collections.Generic.ICollection<SubscriptionItem> _items;
        private SubscriptionLastPriceMigrationError _lastPriceMigrationError;
        private string _latestInvoiceId;
        private Invoice _latestInvoice;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private System.DateTimeOffset? _nextPendingInvoiceItemInvoice;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private SubscriptionPauseCollection _pauseCollection;
        private SubscriptionPaymentSettings _paymentSettings;
        private SubscriptionPendingInvoiceItemInterval _pendingInvoiceItemInterval;
        private string _pendingSetupIntentId;
        private SetupIntent _pendingSetupIntent;
        private SubscriptionPendingUpdate _pendingUpdate;
        private SubscriptionPrebilling _prebilling;
        private string _scheduleId;
        private SubscriptionSchedule _schedule;
        private System.DateTimeOffset _startDate;
        private string _status;
        private string _testClockId;
        private TestClock _testClock;
        private SubscriptionTransferData _transferData;
        private System.DateTimeOffset? _trialEnd;
        private SubscriptionTrialSettings _trialSettings;
        private System.DateTimeOffset? _trialStart;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeePercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? ApplicationFeePercent
        {
            get { return _applicationFeePercent; }

            set { SetProperty(ref _applicationFeePercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionAutomaticTax AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset BillingCycleAnchor
        {
            get { return _billingCycleAnchor; }

            set { SetProperty(ref _billingCycleAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchorConfig")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionBillingCycleAnchorConfig BillingCycleAnchorConfig
        {
            get { return _billingCycleAnchorConfig; }

            set { SetProperty(ref _billingCycleAnchorConfig, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingThresholds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionBillingThresholds BillingThresholds
        {
            get { return _billingThresholds; }

            set { SetProperty(ref _billingThresholds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancelAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CancelAt
        {
            get { return _cancelAt; }

            set { SetProperty(ref _cancelAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancelAtPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool CancelAtPeriodEnd
        {
            get { return _cancelAtPeriodEnd; }

            set { SetProperty(ref _cancelAtPeriodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancellationDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionCancellationDetails CancellationDetails
        {
            get { return _cancellationDetails; }

            set { SetProperty(ref _cancellationDetails, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CurrentPeriodEnd
        {
            get { return _currentPeriodEnd; }

            set { SetProperty(ref _currentPeriodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset CurrentPeriodStart
        {
            get { return _currentPeriodStart; }

            set { SetProperty(ref _currentPeriodStart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysUntilDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DaysUntilDue
        {
            get { return _daysUntilDue; }

            set { SetProperty(ref _daysUntilDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPaymentMethodId
        {
            get { return _defaultPaymentMethodId; }

            set { SetProperty(ref _defaultPaymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod DefaultPaymentMethod
        {
            get { return _defaultPaymentMethod; }

            set { SetProperty(ref _defaultPaymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSourceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultSourceId
        {
            get { return _defaultSourceId; }

            set { SetProperty(ref _defaultSourceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSource")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public IPaymentSource DefaultSource
        {
            get { return _defaultSource; }

            set { SetProperty(ref _defaultSource, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultTaxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> DefaultTaxRates
        {
            get { return _defaultTaxRates; }

            set { SetProperty(ref _defaultTaxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EndedAt
        {
            get { return _endedAt; }

            set { SetProperty(ref _endedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionInvoiceSettings InvoiceSettings
        {
            get { return _invoiceSettings; }

            set { SetProperty(ref _invoiceSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("items")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionItem> Items
        {
            get { return _items; }

            set { SetProperty(ref _items, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastPriceMigrationError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionLastPriceMigrationError LastPriceMigrationError
        {
            get { return _lastPriceMigrationError; }

            set { SetProperty(ref _lastPriceMigrationError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestInvoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string LatestInvoiceId
        {
            get { return _latestInvoiceId; }

            set { SetProperty(ref _latestInvoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("latestInvoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice LatestInvoice
        {
            get { return _latestInvoice; }

            set { SetProperty(ref _latestInvoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("nextPendingInvoiceItemInvoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? NextPendingInvoiceItemInvoice
        {
            get { return _nextPendingInvoiceItemInvoice; }

            set { SetProperty(ref _nextPendingInvoiceItemInvoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pauseCollection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPauseCollection PauseCollection
        {
            get { return _pauseCollection; }

            set { SetProperty(ref _pauseCollection, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettings PaymentSettings
        {
            get { return _paymentSettings; }

            set { SetProperty(ref _paymentSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingInvoiceItemInterval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPendingInvoiceItemInterval PendingInvoiceItemInterval
        {
            get { return _pendingInvoiceItemInterval; }

            set { SetProperty(ref _pendingInvoiceItemInterval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingSetupIntentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PendingSetupIntentId
        {
            get { return _pendingSetupIntentId; }

            set { SetProperty(ref _pendingSetupIntentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingSetupIntent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SetupIntent PendingSetupIntent
        {
            get { return _pendingSetupIntent; }

            set { SetProperty(ref _pendingSetupIntent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pendingUpdate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPendingUpdate PendingUpdate
        {
            get { return _pendingUpdate; }

            set { SetProperty(ref _pendingUpdate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prebilling")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPrebilling Prebilling
        {
            get { return _prebilling; }

            set { SetProperty(ref _prebilling, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("scheduleId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ScheduleId
        {
            get { return _scheduleId; }

            set { SetProperty(ref _scheduleId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("schedule")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedule Schedule
        {
            get { return _schedule; }

            set { SetProperty(ref _schedule, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TrialEnd
        {
            get { return _trialEnd; }

            set { SetProperty(ref _trialEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionTrialSettings TrialSettings
        {
            get { return _trialSettings; }

            set { SetProperty(ref _trialSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TrialStart
        {
            get { return _trialStart; }

            set { SetProperty(ref _trialStart, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionAutomaticTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private SubscriptionAutomaticTaxLiability _liability;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("liability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionAutomaticTaxLiability Liability
        {
            get { return _liability; }

            set { SetProperty(ref _liability, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionAutomaticTaxLiability : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionBillingCycleAnchorConfig : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _dayOfMonth;
        private long? _hour;
        private long? _minute;
        private long? _month;
        private long? _second;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dayOfMonth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long DayOfMonth
        {
            get { return _dayOfMonth; }

            set { SetProperty(ref _dayOfMonth, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("hour")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Hour
        {
            get { return _hour; }

            set { SetProperty(ref _hour, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("minute")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Minute
        {
            get { return _minute; }

            set { SetProperty(ref _minute, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("month")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Month
        {
            get { return _month; }

            set { SetProperty(ref _month, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("second")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Second
        {
            get { return _second; }

            set { SetProperty(ref _second, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionBillingThresholds : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountGte;
        private bool? _resetBillingCycleAnchor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountGte
        {
            get { return _amountGte; }

            set { SetProperty(ref _amountGte, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetBillingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? ResetBillingCycleAnchor
        {
            get { return _resetBillingCycleAnchor; }

            set { SetProperty(ref _resetBillingCycleAnchor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionCancellationDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _comment;
        private string _feedback;
        private string _reason;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("comment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Comment
        {
            get { return _comment; }

            set { SetProperty(ref _comment, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("feedback")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Feedback
        {
            get { return _feedback; }

            set { SetProperty(ref _feedback, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reason")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Reason
        {
            get { return _reason; }

            set { SetProperty(ref _reason, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionCreateRequest : Prism.Mvvm.BindableBase
    {
        private string _planId;

        [System.Text.Json.Serialization.JsonPropertyName("planId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string PlanId
        {
            get { return _planId; }

            set { SetProperty(ref _planId, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionCreateResponse : Prism.Mvvm.BindableBase
    {
        private string _subscriptionId;
        private string _clientSecret;

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("clientSecret")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string ClientSecret
        {
            get { return _clientSecret; }

            set { SetProperty(ref _clientSecret, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionInvoiceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountTaxIdIds;
        private System.Collections.Generic.ICollection<TaxId> _accountTaxIds;
        private SubscriptionInvoiceSettingsIssuer _issuer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIdIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountTaxIdIds
        {
            get { return _accountTaxIdIds; }

            set { SetProperty(ref _accountTaxIdIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> AccountTaxIds
        {
            get { return _accountTaxIds; }

            set { SetProperty(ref _accountTaxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionInvoiceSettingsIssuer Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionInvoiceSettingsIssuer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private SubscriptionItemBillingThresholds _billingThresholds;
        private System.DateTimeOffset _created;
        private bool? _deleted;
        private System.Collections.Generic.ICollection<string> _discountIds;
        private System.Collections.Generic.ICollection<Discount> _discounts;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private Plan _plan;
        private Price _price;
        private long _quantity;
        private string _subscription;
        private System.Collections.Generic.ICollection<TaxRate> _taxRates;
        private SubscriptionItemTrial _trial;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingThresholds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionItemBillingThresholds BillingThresholds
        {
            get { return _billingThresholds; }

            set { SetProperty(ref _billingThresholds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> DiscountIds
        {
            get { return _discountIds; }

            set { SetProperty(ref _discountIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<Discount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Plan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> TaxRates
        {
            get { return _taxRates; }

            set { SetProperty(ref _taxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trial")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionItemTrial Trial
        {
            get { return _trial; }

            set { SetProperty(ref _trial, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionItemBillingThresholds : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _usageGte;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UsageGte
        {
            get { return _usageGte; }

            set { SetProperty(ref _usageGte, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionItemTrial : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _convertsTo;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("convertsTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> ConvertsTo
        {
            get { return _convertsTo; }

            set { SetProperty(ref _convertsTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionLastPriceMigrationError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _erroredAt;
        private System.Collections.Generic.ICollection<SubscriptionLastPriceMigrationErrorFailedTransition> _failedTransitions;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("erroredAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ErroredAt
        {
            get { return _erroredAt; }

            set { SetProperty(ref _erroredAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failedTransitions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionLastPriceMigrationErrorFailedTransition> FailedTransitions
        {
            get { return _failedTransitions; }

            set { SetProperty(ref _failedTransitions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionLastPriceMigrationErrorFailedTransition : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _sourcePrice;
        private string _targetPrice;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourcePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourcePrice
        {
            get { return _sourcePrice; }

            set { SetProperty(ref _sourcePrice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("targetPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TargetPrice
        {
            get { return _targetPrice; }

            set { SetProperty(ref _targetPrice, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPauseCollection : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _behavior;
        private System.DateTimeOffset? _resumesAt;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("behavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Behavior
        {
            get { return _behavior; }

            set { SetProperty(ref _behavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resumesAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ResumesAt
        {
            get { return _resumesAt; }

            set { SetProperty(ref _resumesAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptions _paymentMethodOptions;
        private System.Collections.Generic.ICollection<string> _paymentMethodTypes;
        private string _saveDefaultPaymentMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptions PaymentMethodOptions
        {
            get { return _paymentMethodOptions; }

            set { SetProperty(ref _paymentMethodOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("paymentMethodTypes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> PaymentMethodTypes
        {
            get { return _paymentMethodTypes; }

            set { SetProperty(ref _paymentMethodTypes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("saveDefaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SaveDefaultPaymentMethod
        {
            get { return _saveDefaultPaymentMethod; }

            set { SetProperty(ref _saveDefaultPaymentMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebit _acssDebit;
        private SubscriptionPaymentSettingsPaymentMethodOptionsBancontact _bancontact;
        private SubscriptionPaymentSettingsPaymentMethodOptionsCard _card;
        private SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalance _customerBalance;
        private SubscriptionPaymentSettingsPaymentMethodOptionsIdBankTransfer _idBankTransfer;
        private SubscriptionPaymentSettingsPaymentMethodOptionsKonbini _konbini;
        private SubscriptionPaymentSettingsPaymentMethodOptionsSepaDebit _sepaDebit;
        private SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccount _usBankAccount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("acssDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebit AcssDebit
        {
            get { return _acssDebit; }

            set { SetProperty(ref _acssDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bancontact")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsBancontact Bancontact
        {
            get { return _bancontact; }

            set { SetProperty(ref _bancontact, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("card")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsCard Card
        {
            get { return _card; }

            set { SetProperty(ref _card, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerBalance")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalance CustomerBalance
        {
            get { return _customerBalance; }

            set { SetProperty(ref _customerBalance, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("idBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsIdBankTransfer IdBankTransfer
        {
            get { return _idBankTransfer; }

            set { SetProperty(ref _idBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("konbini")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsKonbini Konbini
        {
            get { return _konbini; }

            set { SetProperty(ref _konbini, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sepaDebit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsSepaDebit SepaDebit
        {
            get { return _sepaDebit; }

            set { SetProperty(ref _sepaDebit, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usBankAccount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccount UsBankAccount
        {
            get { return _usBankAccount; }

            set { SetProperty(ref _usBankAccount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions _mandateOptions;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsAcssDebitMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _transactionType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transactionType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransactionType
        {
            get { return _transactionType; }

            set { SetProperty(ref _transactionType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsBancontact : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _preferredLanguage;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("preferredLanguage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PreferredLanguage
        {
            get { return _preferredLanguage; }

            set { SetProperty(ref _preferredLanguage, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsCard : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptions _mandateOptions;
        private string _network;
        private string _requestThreeDSecure;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("mandateOptions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptions MandateOptions
        {
            get { return _mandateOptions; }

            set { SetProperty(ref _mandateOptions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("network")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Network
        {
            get { return _network; }

            set { SetProperty(ref _network, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("requestThreeDSecure")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RequestThreeDSecure
        {
            get { return _requestThreeDSecure; }

            set { SetProperty(ref _requestThreeDSecure, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptions : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amount;
        private string _amountType;
        private string _description;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AmountType
        {
            get { return _amountType; }

            set { SetProperty(ref _amountType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalance : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer _bankTransfer;
        private string _fundingType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer BankTransfer
        {
            get { return _bankTransfer; }

            set { SetProperty(ref _bankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("fundingType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string FundingType
        {
            get { return _fundingType; }

            set { SetProperty(ref _fundingType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer _euBankTransfer;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("euBankTransfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer EuBankTransfer
        {
            get { return _euBankTransfer; }

            set { SetProperty(ref _euBankTransfer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _country;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsIdBankTransfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsKonbini : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsSepaDebit : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections _financialConnections;
        private string _verificationMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("financialConnections")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections FinancialConnections
        {
            get { return _financialConnections; }

            set { SetProperty(ref _financialConnections, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verificationMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerificationMethod
        {
            get { return _verificationMethod; }

            set { SetProperty(ref _verificationMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnections : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters _filters;
        private System.Collections.Generic.ICollection<string> _permissions;
        private System.Collections.Generic.ICollection<string> _prefetch;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("filters")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters Filters
        {
            get { return _filters; }

            set { SetProperty(ref _filters, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("permissions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Permissions
        {
            get { return _permissions; }

            set { SetProperty(ref _permissions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prefetch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> Prefetch
        {
            get { return _prefetch; }

            set { SetProperty(ref _prefetch, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPaymentSettingsPaymentMethodOptionsUsBankAccountFinancialConnectionsFilters : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountSubcategories;
        private string _institution;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountSubcategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountSubcategories
        {
            get { return _accountSubcategories; }

            set { SetProperty(ref _accountSubcategories, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("institution")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Institution
        {
            get { return _institution; }

            set { SetProperty(ref _institution, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPendingInvoiceItemInterval : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _interval;
        private long _intervalCount;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("interval")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Interval
        {
            get { return _interval; }

            set { SetProperty(ref _interval, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("intervalCount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long IntervalCount
        {
            get { return _intervalCount; }

            set { SetProperty(ref _intervalCount, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPendingUpdate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _billingCycleAnchor;
        private System.DateTimeOffset _expiresAt;
        private long? _prebillingIterations;
        private System.Collections.Generic.ICollection<SubscriptionItem> _subscriptionItems;
        private System.DateTimeOffset? _trialEnd;
        private bool? _trialFromPlan;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? BillingCycleAnchor
        {
            get { return _billingCycleAnchor; }

            set { SetProperty(ref _billingCycleAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("expiresAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ExpiresAt
        {
            get { return _expiresAt; }

            set { SetProperty(ref _expiresAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prebillingIterations")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? PrebillingIterations
        {
            get { return _prebillingIterations; }

            set { SetProperty(ref _prebillingIterations, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionItem> SubscriptionItems
        {
            get { return _subscriptionItems; }

            set { SetProperty(ref _subscriptionItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TrialEnd
        {
            get { return _trialEnd; }

            set { SetProperty(ref _trialEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialFromPlan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? TrialFromPlan
        {
            get { return _trialFromPlan; }

            set { SetProperty(ref _trialFromPlan, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionPrebilling : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _invoiceId;
        private Invoice _invoice;
        private System.DateTimeOffset _periodEnd;
        private System.DateTimeOffset _periodStart;
        private string _updateBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodEnd
        {
            get { return _periodEnd; }

            set { SetProperty(ref _periodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodStart
        {
            get { return _periodStart; }

            set { SetProperty(ref _periodStart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updateBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UpdateBehavior
        {
            get { return _updateBehavior; }

            set { SetProperty(ref _updateBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionResponse : Prism.Mvvm.BindableBase
    {
        private string _id;
        private string _userId;
        private string _planId;
        private string _customerId;
        private string _currentPeriodStart;
        private string _currentPeriodEnd;
        private int _allowedRequests;
        private int _allowedSpaces;
        private System.DateTimeOffset _startDate;
        private string _status;
        private bool _cancelAtPeriodEnd;
        private System.DateTimeOffset? _cancelAt;
        private System.DateTimeOffset? _canceledAt;
        private UserResponse _user;

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("userId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UserId
        {
            get { return _userId; }

            set { SetProperty(ref _userId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("planId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PlanId
        {
            get { return _planId; }

            set { SetProperty(ref _planId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentPeriodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CurrentPeriodStart
        {
            get { return _currentPeriodStart; }

            set { SetProperty(ref _currentPeriodStart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CurrentPeriodEnd
        {
            get { return _currentPeriodEnd; }

            set { SetProperty(ref _currentPeriodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowedRequests")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int AllowedRequests
        {
            get { return _allowedRequests; }

            set { SetProperty(ref _allowedRequests, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("allowedSpaces")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int AllowedSpaces
        {
            get { return _allowedSpaces; }

            set { SetProperty(ref _allowedSpaces, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancelAtPeriodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool CancelAtPeriodEnd
        {
            get { return _cancelAtPeriodEnd; }

            set { SetProperty(ref _cancelAtPeriodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cancelAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CancelAt
        {
            get { return _cancelAt; }

            set { SetProperty(ref _cancelAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("user")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public UserResponse User
        {
            get { return _user; }

            set { SetProperty(ref _user, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionResumeRequest : Prism.Mvvm.BindableBase
    {
        private string _prorationBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("prorationBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProrationBehavior
        {
            get { return _prorationBehavior; }

            set { SetProperty(ref _prorationBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedule : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _applicationId;
        private Application _application;
        private string _billingBehavior;
        private System.DateTimeOffset? _canceledAt;
        private System.DateTimeOffset? _completedAt;
        private System.DateTimeOffset _created;
        private SubscriptionScheduleCurrentPhase _currentPhase;
        private string _customerId;
        private Customer _customer;
        private SubscriptionScheduleDefaultSettings _defaultSettings;
        private string _endBehavior;
        private SubscriptionScheduleLastPriceMigrationError _lastPriceMigrationError;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhase> _phases;
        private SubscriptionSchedulePrebilling _prebilling;
        private System.DateTimeOffset? _releasedAt;
        private string _releasedSubscription;
        private string _status;
        private string _subscriptionId;
        private Subscription _subscription;
        private string _testClockId;
        private TestClock _testClock;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingBehavior
        {
            get { return _billingBehavior; }

            set { SetProperty(ref _billingBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("canceledAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CanceledAt
        {
            get { return _canceledAt; }

            set { SetProperty(ref _canceledAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("completedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? CompletedAt
        {
            get { return _completedAt; }

            set { SetProperty(ref _completedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currentPhase")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleCurrentPhase CurrentPhase
        {
            get { return _currentPhase; }

            set { SetProperty(ref _currentPhase, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettings DefaultSettings
        {
            get { return _defaultSettings; }

            set { SetProperty(ref _defaultSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string EndBehavior
        {
            get { return _endBehavior; }

            set { SetProperty(ref _endBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastPriceMigrationError")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleLastPriceMigrationError LastPriceMigrationError
        {
            get { return _lastPriceMigrationError; }

            set { SetProperty(ref _lastPriceMigrationError, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phases")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhase> Phases
        {
            get { return _phases; }

            set { SetProperty(ref _phases, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prebilling")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePrebilling Prebilling
        {
            get { return _prebilling; }

            set { SetProperty(ref _prebilling, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("releasedAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ReleasedAt
        {
            get { return _releasedAt; }

            set { SetProperty(ref _releasedAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("releasedSubscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ReleasedSubscription
        {
            get { return _releasedSubscription; }

            set { SetProperty(ref _releasedSubscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Subscription Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClockId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TestClockId
        {
            get { return _testClockId; }

            set { SetProperty(ref _testClockId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("testClock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClock TestClock
        {
            get { return _testClock; }

            set { SetProperty(ref _testClock, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleCurrentPhase : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _endDate;
        private System.DateTimeOffset? _startDate;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private double? _applicationFeePercent;
        private SubscriptionScheduleDefaultSettingsAutomaticTax _automaticTax;
        private string _billingCycleAnchor;
        private SubscriptionScheduleDefaultSettingsBillingThresholds _billingThresholds;
        private string _collectionMethod;
        private string _defaultPaymentMethodId;
        private PaymentMethod _defaultPaymentMethod;
        private string _description;
        private SubscriptionScheduleDefaultSettingsInvoiceSettings _invoiceSettings;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private SubscriptionScheduleDefaultSettingsTransferData _transferData;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeePercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? ApplicationFeePercent
        {
            get { return _applicationFeePercent; }

            set { SetProperty(ref _applicationFeePercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsAutomaticTax AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingCycleAnchor
        {
            get { return _billingCycleAnchor; }

            set { SetProperty(ref _billingCycleAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingThresholds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsBillingThresholds BillingThresholds
        {
            get { return _billingThresholds; }

            set { SetProperty(ref _billingThresholds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPaymentMethodId
        {
            get { return _defaultPaymentMethodId; }

            set { SetProperty(ref _defaultPaymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod DefaultPaymentMethod
        {
            get { return _defaultPaymentMethod; }

            set { SetProperty(ref _defaultPaymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsInvoiceSettings InvoiceSettings
        {
            get { return _invoiceSettings; }

            set { SetProperty(ref _invoiceSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsAutomaticTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private SubscriptionScheduleDefaultSettingsAutomaticTaxLiability _liability;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("liability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsAutomaticTaxLiability Liability
        {
            get { return _liability; }

            set { SetProperty(ref _liability, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsAutomaticTaxLiability : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsBillingThresholds : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountGte;
        private bool? _resetBillingCycleAnchor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountGte
        {
            get { return _amountGte; }

            set { SetProperty(ref _amountGte, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetBillingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? ResetBillingCycleAnchor
        {
            get { return _resetBillingCycleAnchor; }

            set { SetProperty(ref _resetBillingCycleAnchor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsInvoiceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountTaxIdIds;
        private System.Collections.Generic.ICollection<TaxId> _accountTaxIds;
        private long? _daysUntilDue;
        private SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuer _issuer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIdIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountTaxIdIds
        {
            get { return _accountTaxIdIds; }

            set { SetProperty(ref _accountTaxIdIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> AccountTaxIds
        {
            get { return _accountTaxIds; }

            set { SetProperty(ref _accountTaxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysUntilDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DaysUntilDue
        {
            get { return _daysUntilDue; }

            set { SetProperty(ref _daysUntilDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuer Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleDefaultSettingsTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private double? _amountPercent;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? AmountPercent
        {
            get { return _amountPercent; }

            set { SetProperty(ref _amountPercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleLastPriceMigrationError : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _erroredAt;
        private System.Collections.Generic.ICollection<SubscriptionScheduleLastPriceMigrationErrorFailedTransition> _failedTransitions;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("erroredAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset ErroredAt
        {
            get { return _erroredAt; }

            set { SetProperty(ref _erroredAt, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("failedTransitions")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionScheduleLastPriceMigrationErrorFailedTransition> FailedTransitions
        {
            get { return _failedTransitions; }

            set { SetProperty(ref _failedTransitions, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionScheduleLastPriceMigrationErrorFailedTransition : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _sourcePrice;
        private string _targetPrice;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourcePrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourcePrice
        {
            get { return _sourcePrice; }

            set { SetProperty(ref _sourcePrice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("targetPrice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TargetPrice
        {
            get { return _targetPrice; }

            set { SetProperty(ref _targetPrice, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhase : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhaseAddInvoiceItem> _addInvoiceItems;
        private double? _applicationFeePercent;
        private SubscriptionSchedulePhaseAutomaticTax _automaticTax;
        private string _billingCycleAnchor;
        private SubscriptionSchedulePhaseBillingThresholds _billingThresholds;
        private string _collectionMethod;
        private string _couponId;
        private Coupon _coupon;
        private string _currency;
        private string _defaultPaymentMethodId;
        private PaymentMethod _defaultPaymentMethod;
        private System.Collections.Generic.ICollection<TaxRate> _defaultTaxRates;
        private string _description;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhaseDiscount> _discounts;
        private System.DateTimeOffset _endDate;
        private SubscriptionSchedulePhaseInvoiceSettings _invoiceSettings;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhaseItem> _items;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _onBehalfOfId;
        private Account _onBehalfOf;
        private SubscriptionSchedulePhasePauseCollection _pauseCollection;
        private string _prorationBehavior;
        private System.DateTimeOffset _startDate;
        private SubscriptionSchedulePhaseTransferData _transferData;
        private string _trialContinuation;
        private System.DateTimeOffset? _trialEnd;
        private SubscriptionSchedulePhaseTrialSettings _trialSettings;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("addInvoiceItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhaseAddInvoiceItem> AddInvoiceItems
        {
            get { return _addInvoiceItems; }

            set { SetProperty(ref _addInvoiceItems, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationFeePercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? ApplicationFeePercent
        {
            get { return _applicationFeePercent; }

            set { SetProperty(ref _applicationFeePercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("automaticTax")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseAutomaticTax AutomaticTax
        {
            get { return _automaticTax; }

            set { SetProperty(ref _automaticTax, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BillingCycleAnchor
        {
            get { return _billingCycleAnchor; }

            set { SetProperty(ref _billingCycleAnchor, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingThresholds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseBillingThresholds BillingThresholds
        {
            get { return _billingThresholds; }

            set { SetProperty(ref _billingThresholds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("collectionMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CollectionMethod
        {
            get { return _collectionMethod; }

            set { SetProperty(ref _collectionMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("couponId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CouponId
        {
            get { return _couponId; }

            set { SetProperty(ref _couponId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethodId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DefaultPaymentMethodId
        {
            get { return _defaultPaymentMethodId; }

            set { SetProperty(ref _defaultPaymentMethodId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PaymentMethod DefaultPaymentMethod
        {
            get { return _defaultPaymentMethod; }

            set { SetProperty(ref _defaultPaymentMethod, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("defaultTaxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> DefaultTaxRates
        {
            get { return _defaultTaxRates; }

            set { SetProperty(ref _defaultTaxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhaseDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset EndDate
        {
            get { return _endDate; }

            set { SetProperty(ref _endDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseInvoiceSettings InvoiceSettings
        {
            get { return _invoiceSettings; }

            set { SetProperty(ref _invoiceSettings, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("items")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhaseItem> Items
        {
            get { return _items; }

            set { SetProperty(ref _items, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOfId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string OnBehalfOfId
        {
            get { return _onBehalfOfId; }

            set { SetProperty(ref _onBehalfOfId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("onBehalfOf")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account OnBehalfOf
        {
            get { return _onBehalfOf; }

            set { SetProperty(ref _onBehalfOf, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("pauseCollection")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhasePauseCollection PauseCollection
        {
            get { return _pauseCollection; }

            set { SetProperty(ref _pauseCollection, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prorationBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProrationBehavior
        {
            get { return _prorationBehavior; }

            set { SetProperty(ref _prorationBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("startDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset StartDate
        {
            get { return _startDate; }

            set { SetProperty(ref _startDate, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseTransferData TransferData
        {
            get { return _transferData; }

            set { SetProperty(ref _transferData, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialContinuation")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TrialContinuation
        {
            get { return _trialContinuation; }

            set { SetProperty(ref _trialContinuation, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? TrialEnd
        {
            get { return _trialEnd; }

            set { SetProperty(ref _trialEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trialSettings")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseTrialSettings TrialSettings
        {
            get { return _trialSettings; }

            set { SetProperty(ref _trialSettings, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseAddInvoiceItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhaseAddInvoiceItemDiscount> _discounts;
        private string _priceId;
        private Price _price;
        private long? _quantity;
        private System.Collections.Generic.ICollection<TaxRate> _taxRates;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhaseAddInvoiceItemDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("priceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PriceId
        {
            get { return _priceId; }

            set { SetProperty(ref _priceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> TaxRates
        {
            get { return _taxRates; }

            set { SetProperty(ref _taxRates, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseAddInvoiceItemDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _couponId;
        private Coupon _coupon;
        private string _discountId;
        private Discount _discount;
        private SubscriptionSchedulePhaseAddInvoiceItemDiscountDiscountEnd _discountEnd;
        private string _promotionCodeId;
        private PromotionCode _promotionCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("couponId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CouponId
        {
            get { return _couponId; }

            set { SetProperty(ref _couponId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseAddInvoiceItemDiscountDiscountEnd DiscountEnd
        {
            get { return _discountEnd; }

            set { SetProperty(ref _discountEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PromotionCodeId
        {
            get { return _promotionCodeId; }

            set { SetProperty(ref _promotionCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PromotionCode PromotionCode
        {
            get { return _promotionCode; }

            set { SetProperty(ref _promotionCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseAddInvoiceItemDiscountDiscountEnd : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseAutomaticTax : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private bool _enabled;
        private SubscriptionSchedulePhaseAutomaticTaxLiability _liability;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("enabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Enabled
        {
            get { return _enabled; }

            set { SetProperty(ref _enabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("liability")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseAutomaticTaxLiability Liability
        {
            get { return _liability; }

            set { SetProperty(ref _liability, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseAutomaticTaxLiability : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseBillingThresholds : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _amountGte;
        private bool? _resetBillingCycleAnchor;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? AmountGte
        {
            get { return _amountGte; }

            set { SetProperty(ref _amountGte, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetBillingCycleAnchor")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? ResetBillingCycleAnchor
        {
            get { return _resetBillingCycleAnchor; }

            set { SetProperty(ref _resetBillingCycleAnchor, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _couponId;
        private Coupon _coupon;
        private string _discountId;
        private Discount _discount;
        private SubscriptionSchedulePhaseDiscountDiscountEnd _discountEnd;
        private string _promotionCodeId;
        private PromotionCode _promotionCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("couponId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CouponId
        {
            get { return _couponId; }

            set { SetProperty(ref _couponId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseDiscountDiscountEnd DiscountEnd
        {
            get { return _discountEnd; }

            set { SetProperty(ref _discountEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PromotionCodeId
        {
            get { return _promotionCodeId; }

            set { SetProperty(ref _promotionCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PromotionCode PromotionCode
        {
            get { return _promotionCode; }

            set { SetProperty(ref _promotionCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseDiscountDiscountEnd : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseInvoiceSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _accountTaxIdIds;
        private System.Collections.Generic.ICollection<TaxId> _accountTaxIds;
        private long? _daysUntilDue;
        private SubscriptionSchedulePhaseInvoiceSettingsIssuer _issuer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIdIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> AccountTaxIdIds
        {
            get { return _accountTaxIdIds; }

            set { SetProperty(ref _accountTaxIdIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountTaxIds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxId> AccountTaxIds
        {
            get { return _accountTaxIds; }

            set { SetProperty(ref _accountTaxIds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("daysUntilDue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? DaysUntilDue
        {
            get { return _daysUntilDue; }

            set { SetProperty(ref _daysUntilDue, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("issuer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseInvoiceSettingsIssuer Issuer
        {
            get { return _issuer; }

            set { SetProperty(ref _issuer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseInvoiceSettingsIssuer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseItem : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionSchedulePhaseItemBillingThresholds _billingThresholds;
        private System.Collections.Generic.ICollection<SubscriptionSchedulePhaseItemDiscount> _discounts;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _planId;
        private Plan _plan;
        private string _priceId;
        private Price _price;
        private long _quantity;
        private System.Collections.Generic.ICollection<TaxRate> _taxRates;
        private SubscriptionSchedulePhaseItemTrial _trial;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("billingThresholds")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseItemBillingThresholds BillingThresholds
        {
            get { return _billingThresholds; }

            set { SetProperty(ref _billingThresholds, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discounts")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<SubscriptionSchedulePhaseItemDiscount> Discounts
        {
            get { return _discounts; }

            set { SetProperty(ref _discounts, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("planId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PlanId
        {
            get { return _planId; }

            set { SetProperty(ref _planId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("plan")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Plan Plan
        {
            get { return _plan; }

            set { SetProperty(ref _plan, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("priceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PriceId
        {
            get { return _priceId; }

            set { SetProperty(ref _priceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("price")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Price Price
        {
            get { return _price; }

            set { SetProperty(ref _price, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("quantity")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Quantity
        {
            get { return _quantity; }

            set { SetProperty(ref _quantity, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxRates")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TaxRate> TaxRates
        {
            get { return _taxRates; }

            set { SetProperty(ref _taxRates, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("trial")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseItemTrial Trial
        {
            get { return _trial; }

            set { SetProperty(ref _trial, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseItemBillingThresholds : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long? _usageGte;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("usageGte")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long? UsageGte
        {
            get { return _usageGte; }

            set { SetProperty(ref _usageGte, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseItemDiscount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _couponId;
        private Coupon _coupon;
        private string _discountId;
        private Discount _discount;
        private SubscriptionSchedulePhaseItemDiscountDiscountEnd _discountEnd;
        private string _promotionCodeId;
        private PromotionCode _promotionCode;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("couponId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CouponId
        {
            get { return _couponId; }

            set { SetProperty(ref _couponId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Coupon Coupon
        {
            get { return _coupon; }

            set { SetProperty(ref _coupon, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DiscountId
        {
            get { return _discountId; }

            set { SetProperty(ref _discountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Discount Discount
        {
            get { return _discount; }

            set { SetProperty(ref _discount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("discountEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseItemDiscountDiscountEnd DiscountEnd
        {
            get { return _discountEnd; }

            set { SetProperty(ref _discountEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCodeId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PromotionCodeId
        {
            get { return _promotionCodeId; }

            set { SetProperty(ref _promotionCodeId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("promotionCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public PromotionCode PromotionCode
        {
            get { return _promotionCode; }

            set { SetProperty(ref _promotionCode, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseItemDiscountDiscountEnd : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset? _timestamp;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("timestamp")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? Timestamp
        {
            get { return _timestamp; }

            set { SetProperty(ref _timestamp, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseItemTrial : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.Collections.Generic.ICollection<string> _convertsTo;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("convertsTo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> ConvertsTo
        {
            get { return _convertsTo; }

            set { SetProperty(ref _convertsTo, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhasePauseCollection : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _behavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("behavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Behavior
        {
            get { return _behavior; }

            set { SetProperty(ref _behavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private double? _amountPercent;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? AmountPercent
        {
            get { return _amountPercent; }

            set { SetProperty(ref _amountPercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseTrialSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionSchedulePhaseTrialSettingsEndBehavior _endBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionSchedulePhaseTrialSettingsEndBehavior EndBehavior
        {
            get { return _endBehavior; }

            set { SetProperty(ref _endBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePhaseTrialSettingsEndBehavior : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _prorateUpFront;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("prorateUpFront")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProrateUpFront
        {
            get { return _prorateUpFront; }

            set { SetProperty(ref _prorateUpFront, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionSchedulePrebilling : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _invoiceId;
        private Invoice _invoice;
        private System.DateTimeOffset _periodEnd;
        private System.DateTimeOffset _periodStart;
        private string _updateBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoiceId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string InvoiceId
        {
            get { return _invoiceId; }

            set { SetProperty(ref _invoiceId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("invoice")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Invoice Invoice
        {
            get { return _invoice; }

            set { SetProperty(ref _invoice, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodEnd")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodEnd
        {
            get { return _periodEnd; }

            set { SetProperty(ref _periodEnd, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("periodStart")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset PeriodStart
        {
            get { return _periodStart; }

            set { SetProperty(ref _periodStart, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("updateBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string UpdateBehavior
        {
            get { return _updateBehavior; }

            set { SetProperty(ref _updateBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionTransferData : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private double? _amountPercent;
        private string _destinationId;
        private Account _destination;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountPercent")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? AmountPercent
        {
            get { return _amountPercent; }

            set { SetProperty(ref _amountPercent, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionTrialSettings : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private SubscriptionTrialSettingsEndBehavior _endBehavior;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("endBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionTrialSettingsEndBehavior EndBehavior
        {
            get { return _endBehavior; }

            set { SetProperty(ref _endBehavior, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionTrialSettingsEndBehavior : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _missingPaymentMethod;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("missingPaymentMethod")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string MissingPaymentMethod
        {
            get { return _missingPaymentMethod; }

            set { SetProperty(ref _missingPaymentMethod, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class SubscriptionUpdateRequest : Prism.Mvvm.BindableBase
    {
        private PauseCollectionBehaviorType _pauseCollectionBehavior;
        private System.DateTimeOffset? _resumesAt;

        [System.Text.Json.Serialization.JsonPropertyName("pauseCollectionBehavior")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PauseCollectionBehaviorType PauseCollectionBehavior
        {
            get { return _pauseCollectionBehavior; }

            set { SetProperty(ref _pauseCollectionBehavior, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resumesAt")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset? ResumesAt
        {
            get { return _resumesAt; }

            set { SetProperty(ref _resumesAt, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxCode : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _description;
        private string _name;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxId : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private string _country;
        private System.DateTimeOffset _created;
        private string _customerId;
        private Customer _customer;
        private bool? _deleted;
        private bool _livemode;
        private TaxIdOwner _owner;
        private string _type;
        private string _value;
        private TaxIdVerification _verification;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("owner")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxIdOwner Owner
        {
            get { return _owner; }

            set { SetProperty(ref _owner, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Value
        {
            get { return _value; }

            set { SetProperty(ref _value, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verification")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxIdVerification Verification
        {
            get { return _verification; }

            set { SetProperty(ref _verification, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxIdOwner : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _accountId;
        private Account _account;
        private string _applicationId;
        private Application _application;
        private string _customerId;
        private Customer _customer;
        private string _type;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("accountId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string AccountId
        {
            get { return _accountId; }

            set { SetProperty(ref _accountId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("account")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Account
        {
            get { return _account; }

            set { SetProperty(ref _account, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("applicationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ApplicationId
        {
            get { return _applicationId; }

            set { SetProperty(ref _applicationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("application")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Application Application
        {
            get { return _application; }

            set { SetProperty(ref _application, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Customer Customer
        {
            get { return _customer; }

            set { SetProperty(ref _customer, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxIdVerification : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _status;
        private string _verifiedAddress;
        private string _verifiedName;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedAddress")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedAddress
        {
            get { return _verifiedAddress; }

            set { SetProperty(ref _verifiedAddress, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("verifiedName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string VerifiedName
        {
            get { return _verifiedName; }

            set { SetProperty(ref _verifiedName, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxRate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private bool _active;
        private string _country;
        private System.DateTimeOffset _created;
        private string _description;
        private string _displayName;
        private double? _effectivePercentage;
        private TaxRateFlatAmount _flatAmount;
        private bool _inclusive;
        private string _jurisdiction;
        private string _jurisdictionLevel;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private double _percentage;
        private string _rateType;
        private string _state;
        private string _taxType;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("country")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Country
        {
            get { return _country; }

            set { SetProperty(ref _country, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("effectivePercentage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double? EffectivePercentage
        {
            get { return _effectivePercentage; }

            set { SetProperty(ref _effectivePercentage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("flatAmount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TaxRateFlatAmount FlatAmount
        {
            get { return _flatAmount; }

            set { SetProperty(ref _flatAmount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("inclusive")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Inclusive
        {
            get { return _inclusive; }

            set { SetProperty(ref _inclusive, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("jurisdiction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Jurisdiction
        {
            get { return _jurisdiction; }

            set { SetProperty(ref _jurisdiction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("jurisdictionLevel")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string JurisdictionLevel
        {
            get { return _jurisdictionLevel; }

            set { SetProperty(ref _jurisdictionLevel, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("percentage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public double Percentage
        {
            get { return _percentage; }

            set { SetProperty(ref _percentage, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("rateType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string RateType
        {
            get { return _rateType; }

            set { SetProperty(ref _rateType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("state")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string State
        {
            get { return _state; }

            set { SetProperty(ref _state, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("taxType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TaxType
        {
            get { return _taxType; }

            set { SetProperty(ref _taxType, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TaxRateFlatAmount : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private long _amount;
        private string _currency;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TestClock : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private System.DateTimeOffset _created;
        private bool? _deleted;
        private System.DateTimeOffset _deletesAfter;
        private System.DateTimeOffset _frozenTime;
        private bool _livemode;
        private string _name;
        private string _status;
        private TestClockStatusDetails _statusDetails;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deleted")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Deleted
        {
            get { return _deleted; }

            set { SetProperty(ref _deleted, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("deletesAfter")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset DeletesAfter
        {
            get { return _deletesAfter; }

            set { SetProperty(ref _deletesAfter, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("frozenTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset FrozenTime
        {
            get { return _frozenTime; }

            set { SetProperty(ref _frozenTime, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("status")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Status
        {
            get { return _status; }

            set { SetProperty(ref _status, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("statusDetails")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClockStatusDetails StatusDetails
        {
            get { return _statusDetails; }

            set { SetProperty(ref _statusDetails, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TestClockStatusDetails : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private TestClockStatusDetailsAdvancing _advancing;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("advancing")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public TestClockStatusDetailsAdvancing Advancing
        {
            get { return _advancing; }

            set { SetProperty(ref _advancing, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TestClockStatusDetailsAdvancing : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private System.DateTimeOffset _targetFrozenTime;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("targetFrozenTime")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset TargetFrozenTime
        {
            get { return _targetFrozenTime; }

            set { SetProperty(ref _targetFrozenTime, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TokenVm : Prism.Mvvm.BindableBase
    {
        private string _encryptedToken;

        [System.Text.Json.Serialization.JsonPropertyName("encryptedToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string EncryptedToken
        {
            get { return _encryptedToken; }

            set { SetProperty(ref _encryptedToken, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Transfer : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private long _amountReversed;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _description;
        private string _destinationId;
        private Account _destination;
        private string _destinationPaymentId;
        private Charge _destinationPayment;
        private bool _livemode;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private System.Collections.Generic.ICollection<TransferReversal> _reversals;
        private bool _reversed;
        private string _sourceTransactionId;
        private Charge _sourceTransaction;
        private string _sourceType;
        private string _transferGroup;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amountReversed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long AmountReversed
        {
            get { return _amountReversed; }

            set { SetProperty(ref _amountReversed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationId
        {
            get { return _destinationId; }

            set { SetProperty(ref _destinationId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destination")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Account Destination
        {
            get { return _destination; }

            set { SetProperty(ref _destination, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationPaymentId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationPaymentId
        {
            get { return _destinationPaymentId; }

            set { SetProperty(ref _destinationPaymentId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationPayment")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge DestinationPayment
        {
            get { return _destinationPayment; }

            set { SetProperty(ref _destinationPayment, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("livemode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Livemode
        {
            get { return _livemode; }

            set { SetProperty(ref _livemode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reversals")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<TransferReversal> Reversals
        {
            get { return _reversals; }

            set { SetProperty(ref _reversals, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("reversed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Reversed
        {
            get { return _reversed; }

            set { SetProperty(ref _reversed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceTransactionId
        {
            get { return _sourceTransactionId; }

            set { SetProperty(ref _sourceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Charge SourceTransaction
        {
            get { return _sourceTransaction; }

            set { SetProperty(ref _sourceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceType
        {
            get { return _sourceType; }

            set { SetProperty(ref _sourceType, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferGroup")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferGroup
        {
            get { return _transferGroup; }

            set { SetProperty(ref _transferGroup, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TransferReversal : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, JToken> _rawJObject;
        private StripeResponse _stripeResponse;
        private string _id;
        private string _object;
        private long _amount;
        private string _balanceTransactionId;
        private BalanceTransaction _balanceTransaction;
        private System.DateTimeOffset _created;
        private string _currency;
        private string _destinationPaymentRefundId;
        private Refund _destinationPaymentRefund;
        private System.Collections.Generic.IDictionary<string, string> _metadata;
        private string _sourceRefundId;
        private Refund _sourceRefund;
        private string _transferId;
        private Transfer _transfer;

        [System.Text.Json.Serialization.JsonPropertyName("rawJObject")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, JToken> RawJObject
        {
            get { return _rawJObject; }

            set { SetProperty(ref _rawJObject, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("stripeResponse")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public StripeResponse StripeResponse
        {
            get { return _stripeResponse; }

            set { SetProperty(ref _stripeResponse, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Id
        {
            get { return _id; }

            set { SetProperty(ref _id, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("object")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Object
        {
            get { return _object; }

            set { SetProperty(ref _object, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("amount")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public long Amount
        {
            get { return _amount; }

            set { SetProperty(ref _amount, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransactionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string BalanceTransactionId
        {
            get { return _balanceTransactionId; }

            set { SetProperty(ref _balanceTransactionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("balanceTransaction")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public BalanceTransaction BalanceTransaction
        {
            get { return _balanceTransaction; }

            set { SetProperty(ref _balanceTransaction, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("created")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.DateTimeOffset Created
        {
            get { return _created; }

            set { SetProperty(ref _created, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("currency")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Currency
        {
            get { return _currency; }

            set { SetProperty(ref _currency, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationPaymentRefundId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DestinationPaymentRefundId
        {
            get { return _destinationPaymentRefundId; }

            set { SetProperty(ref _destinationPaymentRefundId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("destinationPaymentRefund")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Refund DestinationPaymentRefund
        {
            get { return _destinationPaymentRefund; }

            set { SetProperty(ref _destinationPaymentRefund, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("metadata")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Metadata
        {
            get { return _metadata; }

            set { SetProperty(ref _metadata, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceRefundId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SourceRefundId
        {
            get { return _sourceRefundId; }

            set { SetProperty(ref _sourceRefundId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("sourceRefund")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Refund SourceRefund
        {
            get { return _sourceRefund; }

            set { SetProperty(ref _sourceRefund, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transferId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TransferId
        {
            get { return _transferId; }

            set { SetProperty(ref _transferId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("transfer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public Transfer Transfer
        {
            get { return _transfer; }

            set { SetProperty(ref _transfer, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TwoFactorRequest : Prism.Mvvm.BindableBase
    {
        private bool? _enable;
        private string _twoFactorCode;
        private bool _resetSharedKey;
        private bool _resetRecoveryCodes;
        private bool _forgetMachine;

        [System.Text.Json.Serialization.JsonPropertyName("enable")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Enable
        {
            get { return _enable; }

            set { SetProperty(ref _enable, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("twoFactorCode")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string TwoFactorCode
        {
            get { return _twoFactorCode; }

            set { SetProperty(ref _twoFactorCode, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetSharedKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ResetSharedKey
        {
            get { return _resetSharedKey; }

            set { SetProperty(ref _resetSharedKey, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("resetRecoveryCodes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ResetRecoveryCodes
        {
            get { return _resetRecoveryCodes; }

            set { SetProperty(ref _resetRecoveryCodes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("forgetMachine")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool ForgetMachine
        {
            get { return _forgetMachine; }

            set { SetProperty(ref _forgetMachine, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TwoFactorResponse : Prism.Mvvm.BindableBase
    {
        private string _sharedKey;
        private int _recoveryCodesLeft;
        private System.Collections.Generic.ICollection<string> _recoveryCodes;
        private bool _isTwoFactorEnabled;
        private bool _isMachineRemembered;

        [System.Text.Json.Serialization.JsonPropertyName("sharedKey")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string SharedKey
        {
            get { return _sharedKey; }

            set { SetProperty(ref _sharedKey, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recoveryCodesLeft")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public int RecoveryCodesLeft
        {
            get { return _recoveryCodesLeft; }

            set { SetProperty(ref _recoveryCodesLeft, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("recoveryCodes")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<string> RecoveryCodes
        {
            get { return _recoveryCodes; }

            set { SetProperty(ref _recoveryCodes, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isTwoFactorEnabled")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public bool IsTwoFactorEnabled
        {
            get { return _isTwoFactorEnabled; }

            set { SetProperty(ref _isTwoFactorEnabled, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isMachineRemembered")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public bool IsMachineRemembered
        {
            get { return _isMachineRemembered; }

            set { SetProperty(ref _isMachineRemembered, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TypeModelCreate : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.IDictionary<string, string> _name = new System.Collections.Generic.Dictionary<string, string>();
        private System.Collections.Generic.IDictionary<string, string> _description;
        private bool _active;
        private string _image;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.IDictionary<string, string> Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.IDictionary<string, string> Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class TypeModelView : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _description;
        private bool _active;
        private string _image;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("active")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool Active
        {
            get { return _active; }

            set { SetProperty(ref _active, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateSpaceRequest : Prism.Mvvm.BindableBase
    {
        private string _name;
        private string _description;
        private int _ram;
        private int _cpuCores;
        private float _diskSpace;
        private bool _isGpu;
        private bool _isGlobal;
        private float _bandwidth;

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Name
        {
            get { return _name; }

            set { SetProperty(ref _name, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Description
        {
            get { return _description; }

            set { SetProperty(ref _description, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("ram")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int Ram
        {
            get { return _ram; }

            set { SetProperty(ref _ram, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("cpuCores")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public int CpuCores
        {
            get { return _cpuCores; }

            set { SetProperty(ref _cpuCores, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("diskSpace")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float DiskSpace
        {
            get { return _diskSpace; }

            set { SetProperty(ref _diskSpace, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGpu")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGpu
        {
            get { return _isGpu; }

            set { SetProperty(ref _isGpu, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isGlobal")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsGlobal
        {
            get { return _isGlobal; }

            set { SetProperty(ref _isGlobal, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("bandwidth")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public float Bandwidth
        {
            get { return _bandwidth; }

            set { SetProperty(ref _bandwidth, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserRequest : Prism.Mvvm.BindableBase
    {
        private string _firstName;
        private string _lastName;
        private string _displayName;
        private string _phoneNumber;
        private System.Uri _image;

        [System.Text.Json.Serialization.JsonPropertyName("firstName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string FirstName
        {
            get { return _firstName; }

            set { SetProperty(ref _firstName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string LastName
        {
            get { return _lastName; }

            set { SetProperty(ref _lastName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PhoneNumber
        {
            get { return _phoneNumber; }

            set { SetProperty(ref _phoneNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Uri Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UserResponse : Prism.Mvvm.BindableBase
    {
        private string _firstName;
        private string _lastName;
        private string _displayName;
        private string _image;
        private string _profileUrl;
        private string _email;
        private string _customerId;
        private string _subscriptionId;
        private string _phoneNumber;
        private bool _isEmailConfirmed;
        private bool _isPhoneNumberConfirmed;
        private string _role;
        private SubscriptionResponse _subscription;

        [System.Text.Json.Serialization.JsonPropertyName("firstName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string FirstName
        {
            get { return _firstName; }

            set { SetProperty(ref _firstName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("lastName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string LastName
        {
            get { return _lastName; }

            set { SetProperty(ref _lastName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("displayName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string DisplayName
        {
            get { return _displayName; }

            set { SetProperty(ref _displayName, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("image")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Image
        {
            get { return _image; }

            set { SetProperty(ref _image, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("profileUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string ProfileUrl
        {
            get { return _profileUrl; }

            set { SetProperty(ref _profileUrl, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("email")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Email
        {
            get { return _email; }

            set { SetProperty(ref _email, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("customerId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string CustomerId
        {
            get { return _customerId; }

            set { SetProperty(ref _customerId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscriptionId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string SubscriptionId
        {
            get { return _subscriptionId; }

            set { SetProperty(ref _subscriptionId, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string PhoneNumber
        {
            get { return _phoneNumber; }

            set { SetProperty(ref _phoneNumber, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isEmailConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsEmailConfirmed
        {
            get { return _isEmailConfirmed; }

            set { SetProperty(ref _isEmailConfirmed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("isPhoneNumberConfirmed")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public bool IsPhoneNumberConfirmed
        {
            get { return _isPhoneNumberConfirmed; }

            set { SetProperty(ref _isPhoneNumberConfirmed, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("role")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public string Role
        {
            get { return _role; }

            set { SetProperty(ref _role, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("subscription")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public SubscriptionResponse Subscription
        {
            get { return _subscription; }

            set { SetProperty(ref _subscription, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValidateTokenRequest : Prism.Mvvm.BindableBase
    {
        private string _token;

        [System.Text.Json.Serialization.JsonPropertyName("token")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.Never)]
        public string Token
        {
            get { return _token; }

            set { SetProperty(ref _token, value); }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ValueFilterModel : Prism.Mvvm.BindableBase
    {
        private System.Collections.Generic.ICollection<FilterModelPropertyValues> _type;
        private System.Collections.Generic.ICollection<FilterModelPropertyValues> _categary;
        private System.Collections.Generic.ICollection<FilterModelPropertyValues> _langague;
        private System.Collections.Generic.ICollection<FilterModelPropertyValues> _gender;
        private System.Collections.Generic.ICollection<FilterModelPropertyValues> _dialect;

        [System.Text.Json.Serialization.JsonPropertyName("type")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FilterModelPropertyValues> Type
        {
            get { return _type; }

            set { SetProperty(ref _type, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("categary")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FilterModelPropertyValues> Categary
        {
            get { return _categary; }

            set { SetProperty(ref _categary, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("langague")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FilterModelPropertyValues> Langague
        {
            get { return _langague; }

            set { SetProperty(ref _langague, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("gender")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FilterModelPropertyValues> Gender
        {
            get { return _gender; }

            set { SetProperty(ref _gender, value); }
        }

        [System.Text.Json.Serialization.JsonPropertyName("dialect")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
        public System.Collections.Generic.ICollection<FilterModelPropertyValues> Dialect
        {
            get { return _dialect; }

            set { SetProperty(ref _dialect, value); }
        }

    }



    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore 472
#pragma warning restore 114
#pragma warning restore 108
#pragma warning restore 3016
#pragma warning restore 8603